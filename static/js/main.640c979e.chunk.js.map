{"version":3,"sources":["D3Tree.jsx","Data.js","Mock.jsx","App.jsx","index.jsx"],"names":["chart","svgNode","svg","root","data","d3","dx","dy","height","nodeSize","tree","graph","x0","Infinity","x1","each","d","x","attr","g","append","node","selectAll","links","join","y","descendants","children","text","name","clone","lower","useRef","useEffect","current","console","info","ref","ceramic","didLook","path","book","geo","org","user","overrides","MetaGame","SourceCred","celebrity","porn","paper","animal","players","Quests","SEED","image","MetaCartel","Shenanigans","Panvala","dysbulic","pΞTH","luxumbra","bg","profile","content","idx","Path","searched","active","this","split","replace","map","elem","shift","Error","bump","search","term","prototype","subtree","SRCH","resolution","Ceramic","old","ldrn","Object","assign","new","push","concat","child","begin","log","IDX","D3Tree","Mock","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.640c979e.chunk.js","sourcesContent":["import * as d3 from 'd3'\nimport { useEffect, useRef } from 'react'\n\n// const data = ((()=> {\n//   const root = { value: [0, 1] }\n//   const queue = [root]\n//   let p, size = 0, n = 1 << 6\n//   while (++size < n && (p = queue.shift())) {\n//     const k = p.value.length - 1\n//     const a = { value: (\n//       p.value.slice(0, k).concat(p.value[k] + 1)\n//     ) }\n//     const b = { value: (\n//       p.value.slice(0, k).concat(p.value[k] - 1, 2)\n//     ) }\n//     p.children = k & 1 ? [a, b] : [b, a]\n//     queue.push(a, b)\n//   }\n//   return root\n// })())\n\nconst width = 640, height = 480, margin = 20\n\nconst tree = (data) => {\n  const root = d3.hierarchy(data)\n  root.dx = 10\n  root.dy = width / (root.height + 1)\n  return d3.tree().nodeSize([root.dx, root.dy])(root)\n}\n\nconst chart = ({ svg: svgNode, graph }) => {\n  const root = tree(graph)\n  let x0 = Infinity\n  let x1 = -x0\n  root.each((d) => {\n    if(d.x > x1) x1 = d.x;\n    if(d.x < x0) x0 = d.x;\n  })\n\n  const svg = (\n    d3.select(svgNode)\n    .attr('viewBox', [0, 0, width, x1 - x0 + root.dx * 2])\n  )\n  const g = (\n    svg.append(\"g\")\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", 10)\n    .attr(\"transform\", `translate(${root.dy / 3},${root.dx - x0})`)\n  )\n  const link = (\n    g.append(\"g\")\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#555\")\n    .attr(\"stroke-opacity\", 0.4)\n    .attr(\"stroke-width\", 1.5)\n    .selectAll(\"path\")\n    .data(root.links())\n    .join(\"path\")\n    .attr(\"d\",\n      d3.linkHorizontal()\n      .x(d => d.y)\n      .y(d => d.x)\n    )\n  )\n  const node = (\n    g.append(\"g\")\n    .attr(\"stroke-linejoin\", \"round\")\n    .attr(\"stroke-width\", 3)\n    .selectAll(\"g\")\n    .data(root.descendants())\n    .join(\"g\")\n    .attr(\"transform\", d => `translate(${d.y},${d.x})`)\n  )\n\n  node.append(\"circle\")\n  .attr(\"fill\", d => d.children ? \"#555\" : \"#999\")\n  .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n  .attr(\"dy\", \"0.31em\")\n  .attr(\"x\", d => d.children ? -6 : 6)\n  .attr(\"text-anchor\", d => d.children ? \"end\" : \"start\")\n  .text(d => d.data.name)\n  .clone(true).lower()\n  .attr(\"stroke\", \"white\");\n  \n  return svg.node();\n}\n\nconst data = {\n  name: 'rrt',\n  children: [\n    { name: 'tst' },\n    { name: \"tst'n\" },\n    {\n      name: 'prnt',\n      children: [\n        { name: 'child' },\n        { name: 'too' },\n      ],\n    },    \n  ],\n}\n\nexport default ({ graph }) => {\n  const svg = useRef()\n  const generate = () => {\n    if(graph && svg.current) {\n      console.info('GENERATING')\n      chart({ svg: svg.current, graph })\n    }\n  }\n  useEffect(generate, [graph])\n\n  console.info({ graph })\n\n  return <svg ref={svg}/>\n}","export const ceramic = {\n  // Initial state pulled from IDX for the current user\n  'ceramic://1…': {\n    didLook: 1,\n    path: [\n      'org',\n      'MetaGame',\n      'players',\n      'dysbulic',\n    ],\n    children: {\n      book: 'ceramic://2…',\n      geo: 'ceramic://3…',\n      org: 'ceramic://4…',\n      user: 'ceramic://5…',\n    },\n    overrides: [\n      'did:3:1…',\n      'did:3:2…',\n      'did:3:3…',\n    ],\n  },\n  // Dereferenced 'org' from above\n  'ceramic://4…': {\n    didLook: 1,\n    children: {\n      '1Hive': 'ceramic://6…',\n      MetaGame: 'ceramic://7…',\n      'Raid Guild': 'ceramic://8…',\n      SourceCred: 'ceramic://9…',\n    },\n    overrides: [\n      'did:3:4…',\n    ],\n  },\n  // Override #1 from ceramic://1…\n  'ceramic://0…': {\n    didLook: 0,\n    children: {\n      book: 'ceramic://2…',\n      celebrity: 'ceramic://A…',\n      geo: 'ceramic://3…',\n      porn: 'ceramic://B…',\n      org: 'ceramic://C…',\n    },\n  },\n  // Override #2 from ceramic://1…\n  'ceramic://D…': {\n    didLook: 0,\n    children: {\n      book: 'ceramic://E…',\n      paper: 'ceramic://F…',\n      porn: 'ceramic://B…',\n      user: 'ceramic://G…',\n    },\n    overrides: [\n      'did:3:5…', // not followed; didLook = 0\n    ],\n  },\n  // Override #3 from ceramic://1…\n  'ceramic://H…': {\n    didLook: 0,\n    children: {\n      animal: 'ceramic://I…',\n      paper: 'ceramic://F…',\n      porn: 'ceramic://J…',\n      org: 'ceramic://K…',\n    },\n    overrides: [\n      'did:3:6…', // not followed; didLook = 0\n    ],\n  },\n  // 'MetaGame' entry from ceramic://4…\n  'ceramic://7…': {\n    didLook: 1,\n    children: {\n      players: 'ceramic://L…',\n      Quests: 'ceramic://M…',\n      'Raid Map': 'ceramic://N…',\n      SEED: 'ceramic://O…',\n    },\n    overrides: [\n      'did:3:7…',\n    ],\n  },\n  // overrides for ceramic://4…\n  'ceramic://P…': {\n    didLook: 0,\n    children: {\n      geo: 'ceramic://3…',\n      image: 'ceramic://Q…',\n      org: 'ceramic://K…',\n      porn: 'ceramic://B…',\n    },\n    overrides: [\n      'did:3:5…', // not followed; didLook = 0\n    ],\n  },\n  // 'org' for ceramic://0…\n  'ceramic://C…': {\n    didLook: 0,\n    children: {\n      MetaCartel: 'ceramic://R…',\n      MetaGame: 'ceramic://7…',\n      'Raid Guild': 'ceramic://8…',\n      Shenanigans: 'ceramic://S…',\n    },\n    overrides: [\n      'did:3:8…', // not followed; didLook = 0\n    ],\n  },\n  // 'org' for ceramic://H…\n  'ceramic://K…': {\n    didLook: 0,\n    children: {\n      '1Hive': 'ceramic://6…',\n      SourceCred: 'ceramic://T…',\n      Panvala: 'ceramic://U…',\n      '🔥_🔥': 'ceramic://V…',\n    },\n    overrides: [\n      'did:3:9…', // not followed; didLook = 0\n    ],\n  },\n  // 'Players' entry from ceramic://7…\n  'ceramic://L…': {\n    didLook: 1,\n    children: {\n      dysbulic: 'ceramic://W…',\n      pΞTH: 'ceramic://X…',\n      luxumbra: 'ceramic://Y…',\n      'The Lone Rōnin': 'ceramic://Z…',\n    },\n  },\n  // 'dysbulic' entry from ceramic://L…\n  'ceramic://W…': {\n    didLook: 1,\n    children: {\n      bg: 'ceramic://a…',\n      profile: 'ceramic://b…',\n      svg: 'ceramic://c…',\n    },\n    overrides: [\n      'did:3:0…',\n    ],\n  },\n  // 'svg' from ceramic://W…\n  'ceramic://c…': {\n    content: 'ipfs://1…',\n    children: {\n      'b&w': 'ceramic://c…',\n    }\n  }\n}\n\nexport const idx = {\n  '∅': 'ceramic://1…',\n  '∅(did:3:1…)': 'ceramic://0…',\n  '∅(did:3:2…)': 'ceramic://D…',\n  '∅(did:3:3…)': 'ceramic://H…',\n  '∅(did:3:4…)': 'ceramic://1…',\n  '∅(did:3:5…)': 'ceramic://1…',\n  '∅(did:3:6…)': 'ceramic://1…',\n  '∅(did:3:7…)': 'ceramic://0…',\n}","import D3Tree from './D3Tree'\nimport { ceramic as Ceramic, idx as IDX } from './Data'\n\nfunction Path({ path = '/', searched = 0 }) {\n  console.info('path in Path Object', { path, active: path?.active?.() })\n  if(path.path) { //path instanceof Path) { // is always false\n    this.path = path.path\n    console.info('assigned path.path to path', { path: this.path })\n  } else if(path?.split && path?.replace) {\n    this.path = path.split('/').map((elem) => (\n      elem.replace(/%2f/ig, '/').replace(/%25/g, '%')\n    ))\n    console.info('split path from string', { path: this.path })\n    if(this.path.shift() !== '') { // starts with /\n      throw new Error(\"Can't handle relative paths yet.\")\n    }\n  } else {\n    this.path = path\n  }\n\n\n  this.searched = searched\n\n  this.active = () => this.path?.[this.searched]\n\n  this.bump = () => ++this.searched\n\n  console.info('this.path of Path Object', { path: this.path, active: this.active() })\n\n  this.search = (term) => {\n    if(this.active() === term) {\n      this.bump()\n      return true\n    }\n    return false\n  } \n}\nPath.prototype = []\n\nconst subtree = ({ path, ceramic, didLook }) => {\n  const active = path.active()\n  console.info('BEGIN', { ceramic, active })\n  if(didLook < 0) {\n    return { name: `look = ${didLook}; Outside Search Tree` }\n  }\n  console.info('path in subtree function', { path, SRCH: path.searched, active: path.active() })\n  const resolution = Ceramic[ceramic]\n  let children = []\n  if(resolution) {\n    const elem = resolution.children?.[path.active()]\n    if(elem) {\n      console.info(\"path in child\", { path, elem, active: path.active() })\n      // const newPath = (\n      //   new Path({ path: path.path, searched: path.searched + 1 })\n      // )\n      const old = path?.active?.()\n      path.bump()\n      console.info('post-bump in Mock', {\n        ldrn: resolution.children,\n        path,\n        elem,\n        children,\n        active: Object.assign([], path).active(),\n      })\n      console.info(\"path post-copy in child\", { old, new: path?.active?.() })\n      children.push(\n        subtree({\n          path,\n          ceramic: elem,\n          didLook,\n        })\n      )\n    }\n    if(resolution.overrides) {\n      console.info(\"path in overrides\", { path, overrides: resolution.overrides })\n      children = children.concat(\n        ...resolution.overrides.map((child) => (\n          begin({\n            path: new Path({ path }),\n            idx: `∅(${child})`,\n            didLook: didLook - 1,\n          })\n        ))\n      )\n    }\n  }\n  return {\n    name: active ?? resolution?.content,\n    children,\n  }\n}\n\nconst begin = ({ path, idx, didLook = 0 }) => {\n  console.log('BEGIN', idx)\n  if(!(path instanceof Path)) {\n    console.info('begin in Mock', { path, active: path?.active?.() })\n    path = new Path({ path })\n    console.info('parsed path in Mock', { path, active: path?.active?.() })\n  }\n  return ({\n    name: idx,\n    children: [subtree({ path, ceramic: IDX[idx], didLook })],\n  })\n}\n\nexport default () => (\n  <D3Tree graph={begin({\n    path: '/org/MetaGame/players/dysbulic/svg',\n    idx: '∅',\n    didLook: 1,\n  })}/>\n)","import Mock from './Mock'\n\nexport default () => (\n  <Mock/>\n)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}