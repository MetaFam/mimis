{"version":3,"sources":["D3RadialTree.jsx","Data.js","D3Tree.jsx","Mock.jsx","App.jsx","index.jsx"],"names":["autoBox","document","body","appendChild","getBBox","x","y","width","height","removeChild","tree","d3","size","Math","PI","separation","a","b","parent","depth","graph","svg","useRef","useEffect","current","svgNode","root","append","attr","selectAll","data","links","join","angle","d","radius","descendants","children","text","name","clone","lower","node","chart","console","info","ref","ceramic","didLook","path","book","geo","org","user","overrides","MetaGame","SourceCred","celebrity","porn","paper","animal","players","Quests","SEED","image","MetaCartel","Shenanigans","Panvala","dysbulic","pΞTH","luxumbra","bg","profile","content","idx","dx","dy","nodeSize","x0","Infinity","x1","each","g","type","Path","searched","active","this","split","replace","map","elem","shift","Error","bump","search","term","prototype","zIndices","Array","subtree","resolution","Ceramic","concat","child","begin","push","ret","length","log","IDX","Grapher","D3Tree","theme","extendTheme","config","initialColorMode","styles","global","minH","textDecoration","Link","to","as","RouterLink","w","basename","isOpen","isActive","Button","position","top","left","ChevronDown","Hamburger","Mock","D3RadialTree","component","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.82322eb9.chunk.js","sourcesContent":["import * as d3 from 'd3'\nimport { useEffect, useRef } from 'react'\n\nconst width = 1024, radius = width / 2\n\nconst autoBox = () => {\n  document.body.appendChild(this)\n  const {x, y, width, height} = this.getBBox()\n  document.body.removeChild(this)\n  return [x, y, width, height]\n}\n\nconst tree = (\n  d3.tree()\n  .size([2 * Math.PI, radius])\n  .separation((a, b) => (a.parent === b.parent ? 1 : 2) / a.depth)\n)\n\nconst chart = ({ svg: svgNode, graph }) => {\n  const root = tree(graph)\n  const svg = d3.select(svgNode)\n\n  svg\n  .append('g')\n    .attr('fill', 'none')\n    .attr('stroke', '#555')\n    .attr('stroke-opacity', 0.4)\n    .attr('stroke-width', 1.5)\n  .selectAll('path')\n  .data(root.links())\n  .join('path')\n    .attr('d', d3.linkRadial()\n      .angle(d => d.x)\n      .radius(d => d.y));\n\n  svg\n  .append('g')\n  .selectAll('circle')\n  .data(root.descendants())\n  .join('circle')\n    .attr('transform', d => `\n      rotate(${d.x * 180 / Math.PI - 90})\n      translate(${d.y},0)\n    `)\n    .attr('fill', d => d.children ? '#555' : '#999')\n    .attr('r', 2.5);\n\n  svg\n  .append('g')\n    .attr('font-family', 'sans-serif')\n    .attr('font-size', 10)\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-width', 3)\n  .selectAll('text')\n  .data(root.descendants())\n  .join('text')\n    .attr('transform', d => `\n      rotate(${d.x * 180 / Math.PI - 90}) \n      translate(${d.y},0) \n      rotate(${d.x >= Math.PI ? 180 : 0})\n    `)\n    .attr('dy', '0.31em')\n    .attr('x', d => d.x < Math.PI === !d.children ? 6 : -6)\n    .attr('text-anchor', d => d.x < Math.PI === !d.children ? 'start' : 'end')\n    .text(d => d.data.name)\n  .clone(true).lower()\n    .attr('stroke', 'white');\n\n  return svg.attr('viewBox', autoBox).node();\n}\n\nexport default ({ graph }) => {\n  const svg = useRef()\n  const generate = () => {\n    if(graph && svg.current) {\n      chart({ svg: svg.current, graph })\n    }\n  }\n  useEffect(generate, [graph])\n\n  console.info({ graph })\n\n  return <svg ref={svg}/>\n}","export const ceramic = {\n  // Initial state pulled from IDX for the current user\n  'ceramic://1…': {\n    didLook: 1,\n    path: [\n      'org',\n      'MetaGame',\n      'players',\n      'dysbulic',\n    ],\n    children: {\n      book: 'ceramic://2…',\n      geo: 'ceramic://3…',\n      org: 'ceramic://4…',\n      user: 'ceramic://5…',\n    },\n    overrides: [\n      'did:3:1…',\n      'did:3:2…',\n      'did:3:3…',\n    ],\n  },\n  // Dereferenced 'org' from above\n  'ceramic://4…': {\n    didLook: 1,\n    children: {\n      '1Hive': 'ceramic://6…',\n      MetaGame: 'ceramic://7…',\n      'Raid Guild': 'ceramic://8…',\n      SourceCred: 'ceramic://9…',\n    },\n    overrides: [\n      'did:3:4…',\n    ],\n  },\n  // Override #1 from ceramic://1…\n  'ceramic://0…': {\n    didLook: 0,\n    children: {\n      book: 'ceramic://2…',\n      celebrity: 'ceramic://A…',\n      geo: 'ceramic://3…',\n      porn: 'ceramic://B…',\n      org: 'ceramic://C…',\n    },\n  },\n  // Override #2 from ceramic://1…\n  'ceramic://D…': {\n    didLook: 0,\n    children: {\n      book: 'ceramic://E…',\n      paper: 'ceramic://F…',\n      porn: 'ceramic://B…',\n      user: 'ceramic://G…',\n    },\n    overrides: [\n      'did:3:5…', // not followed; didLook = 0\n    ],\n  },\n  // Override #3 from ceramic://1…\n  'ceramic://H…': {\n    didLook: 0,\n    children: {\n      animal: 'ceramic://I…',\n      paper: 'ceramic://F…',\n      porn: 'ceramic://J…',\n      org: 'ceramic://K…',\n    },\n    overrides: [\n      'did:3:6…', // not followed; didLook = 0\n    ],\n  },\n  // 'MetaGame' entry from ceramic://4…\n  'ceramic://7…': {\n    didLook: 1,\n    children: {\n      players: 'ceramic://L…',\n      Quests: 'ceramic://M…',\n      'Raid Map': 'ceramic://N…',\n      SEED: 'ceramic://O…',\n    },\n    overrides: [\n      'did:3:7…',\n    ],\n  },\n  // overrides for ceramic://4…\n  'ceramic://P…': {\n    didLook: 0,\n    children: {\n      geo: 'ceramic://3…',\n      image: 'ceramic://Q…',\n      org: 'ceramic://K…',\n      porn: 'ceramic://B…',\n    },\n    overrides: [\n      'did:3:5…', // not followed; didLook = 0\n    ],\n  },\n  // 'org' for ceramic://0…\n  'ceramic://C…': {\n    didLook: 0,\n    children: {\n      MetaCartel: 'ceramic://R…',\n      MetaGame: 'ceramic://7…',\n      'Raid Guild': 'ceramic://8…',\n      Shenanigans: 'ceramic://S…',\n    },\n    overrides: [\n      'did:3:8…', // not followed; didLook = 0\n    ],\n  },\n  // 'org' for ceramic://H…\n  'ceramic://K…': {\n    didLook: 0,\n    children: {\n      '1Hive': 'ceramic://6…',\n      SourceCred: 'ceramic://T…',\n      Panvala: 'ceramic://U…',\n      '🔥_🔥': 'ceramic://V…',\n    },\n    overrides: [\n      'did:3:9…', // not followed; didLook = 0\n    ],\n  },\n  // 'Players' entry from ceramic://7…\n  'ceramic://L…': {\n    didLook: 1,\n    children: {\n      dysbulic: 'ceramic://W…',\n      pΞTH: 'ceramic://X…',\n      luxumbra: 'ceramic://Y…',\n      'The Lone Rōnin': 'ceramic://Z…',\n    },\n  },\n  // 'dysbulic' entry from ceramic://L…\n  'ceramic://W…': {\n    didLook: 1,\n    children: {\n      bg: 'ceramic://a…',\n      profile: 'ceramic://b…',\n      svg: 'ceramic://c…',\n    },\n    overrides: [\n      'did:3:0…',\n    ],\n  },\n  // 'svg' from ceramic://W…\n  'ceramic://c…': {\n    content: 'ipfs://1…',\n    children: {\n      'b&w': 'ceramic://c…',\n    }\n  }\n}\n\nexport const idx = {\n  '∅': 'ceramic://1…',\n  '∅(did:3:1…)': 'ceramic://0…',\n  '∅(did:3:2…)': 'ceramic://D…',\n  '∅(did:3:3…)': 'ceramic://H…',\n  '∅(did:3:4…)': 'ceramic://1…',\n  '∅(did:3:5…)': 'ceramic://1…',\n  '∅(did:3:6…)': 'ceramic://1…',\n  '∅(did:3:7…)': 'ceramic://0…',\n}","import * as d3 from 'd3'\nimport { useEffect, useRef } from 'react'\n\n// const data = ((()=> {\n//   const root = { value: [0, 1] }\n//   const queue = [root]\n//   let p, size = 0, n = 1 << 6\n//   while (++size < n && (p = queue.shift())) {\n//     const k = p.value.length - 1\n//     const a = { value: (\n//       p.value.slice(0, k).concat(p.value[k] + 1)\n//     ) }\n//     const b = { value: (\n//       p.value.slice(0, k).concat(p.value[k] - 1, 2)\n//     ) }\n//     p.children = k & 1 ? [a, b] : [b, a]\n//     queue.push(a, b)\n//   }\n//   return root\n// })())\n\nconst width = 640, height = 480, margin = 20\n\nconst tree = (data) => {\n  const root = d3.hierarchy(data)\n  root.dx = 10\n  root.dy = width / (root.height + 1)\n    return d3.tree().nodeSize([root.dx, root.dy])(root)\n}\n\nconst chart = ({ svg: svgNode, graph }) => {\n  const root = tree(graph)\n  let x0 = Infinity\n  let x1 = -x0\n  root.each((d) => {\n    if(d.x > x1) x1 = d.x\n    if(d.x < x0) x0 = d.x\n  })\n\n  const svg = d3.select(svgNode)\n  const g = (\n    svg.append('g')\n    .attr('font-family', 'sans-serif')\n    .attr('font-size', 10)\n    .attr('transform', `translate(${root.dy / 3},${root.dx - x0})`)\n  )\n  const link = (\n    g.append('g')\n    .attr('fill', 'none')\n    .attr('stroke', '#555')\n    .attr('stroke-opacity', 0.75)\n    .attr('stroke-width', 1.5)\n    .selectAll('path')\n    .data(root.links())\n    .join('path')\n    .attr('stroke', 'white')\n    .attr('d',\n      d3.linkHorizontal()\n      .x(d => d.y)\n      .y(d => d.x)\n    )\n  )\n  const node = (\n    g.append('g')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-width', 3)\n    .selectAll('g')\n    .data(root.descendants())\n    .join('g')\n    .attr('transform', d => `translate(${d.y},${d.x})`)\n  )\n\n  node.append('circle')\n  .attr('fill', (d) => {\n    if(d.data.type === 'out-of-bounds') return 'red'\n    if(d.data.type === 'content') return 'blue'\n    if(d.children) return 'green'\n    return 'yellow'\n  })\n  .attr('stroke', 'black')\n  .attr('stroke-width', 1)\n  .attr('r', 2.5)\n\n  node.append('text')\n  .attr('dy', '0.31em')\n  .attr('x', d => d.children ? -5 : 5)\n  .attr('text-anchor', d => d.children ? 'end' : 'start')\n  .text(d => d.data.name)\n  .clone(true).lower()\n  .attr('stroke', 'white')\n\n  const { x, y, width, height } = svg.node().getBBox()\n  return svg.attr('viewBox', [x, y, width, height]).node()\n}\n\nexport default ({ graph }) => {\n  const svg = useRef()\n  const generate = () => {\n    if(graph && svg.current) {\n      chart({ svg: svg.current, graph })\n    }\n  }\n  useEffect(generate, [graph])\n\n  return <svg ref={svg}/>\n}","import React from 'react'\nimport { ceramic as Ceramic, idx as IDX } from './Data'\nimport D3Tree from './D3Tree'\n\nfunction Path({ path = '/', searched = 0 }) {\n  console.info('path in Path Object', { path, active: path?.active?.() })\n  if(path.path) { //path instanceof Path) { // is always false\n    this.path = path.path\n    console.info('assigned path.path to path', { path: this.path })\n  } else if(path?.split && path?.replace) {\n    this.path = path.split('/').map((elem) => (\n      elem.replace(/%2f/ig, '/').replace(/%25/g, '%')\n    ))\n    console.info('split path from string', { path: this.path })\n    if(this.path.shift() !== '') { // starts with /\n      throw new Error(\"Can't handle relative paths yet.\")\n    }\n  } else {\n    this.path = path\n  }\n\n  this.searched = searched\n\n  this.active = () => this.path?.[this.searched]\n\n  this.bump = () => ++this.searched\n\n  console.info('this.path of Path Object', { path: this.path, active: this.active() })\n\n  this.search = (term) => {\n    if(this.active() === term) {\n      this.bump()\n      return true\n    }\n    return false\n  } \n}\nPath.prototype = []\n\nconst zIndices = [...new Array(10)]\n\nconsole.info('ZI', { zIndices })\n\nconst subtree = ({ path, ceramic, didLook }) => {\n  const active = path.active()\n  console.info('BEGIN', { ceramic, active })\n  if(didLook < 0) {\n    return {\n      name: `look = ${didLook}; Outside Search Tree`,\n      type: 'out-of-bounds',\n    }\n  }\n  const resolution = Ceramic[ceramic]\n  let children = []\n  if(resolution) {\n    if(resolution.overrides) {\n      children = children.concat(\n        ...resolution.overrides.map((child) => (\n          begin({\n            path: new Path({ path }),\n            idx: `∅(${child})`,\n            didLook: didLook - 1,\n          })\n        ))\n      )\n    }\n    const elem = resolution.children?.[path.active()]\n    if(elem) {\n      path.bump()\n      children.push(\n        subtree({\n          path,\n          ceramic: elem,\n          didLook,\n        })\n      )\n    }\n  }\n  const ret = {\n    name: active ?? resolution?.content,\n    type: active ? 'context' : 'content'\n  }\n  if(children.length > 0) {\n    ret.children = children\n  }\n  return ret\n}\n\nconst begin = ({ path, idx, didLook = 0 }) => {\n  console.log('BEGIN', idx)\n  if(!(path instanceof Path)) {\n    console.info('begin in Mock', { path, active: path?.active?.() })\n    path = new Path({ path })\n    console.info('parsed path in Mock', { path, active: path?.active?.() })\n  }\n  return ({\n    name: idx,\n    children: [subtree({ path, ceramic: IDX[idx], didLook })],\n  })\n}\n\nexport default ({ Grapher = D3Tree }) => (\n  <Grapher graph={begin({\n    path: '/org/MetaGame/players/dysbulic/svg',\n    idx: '∅',\n    didLook: 1,\n  })}/>\n)","import {\n  HashRouter as Router, Switch, Route,\n  Link as RouterLink,\n} from 'react-router-dom'\nimport {\n  ChakraProvider, extendTheme, Menu, MenuItem,\n  MenuButton, Button, MenuList, Link as ChakraLink,\n  chakra,\n} from '@chakra-ui/react'\nimport {\n  ChevronDownIcon, HamburgerIcon\n} from '@chakra-ui/icons'\nimport D3RadialTree from './D3RadialTree'\nimport Mock from './Mock'\n\nconst overrides = {\n  config: {\n    initialColorMode: 'dark',\n  },\n  styles: {\n    global: {\n      body: {\n        minH: '100vh',\n      },\n      a: {\n        textDecoration: 'underline',\n      },\n    },\n  },\n}\nconst theme = extendTheme(overrides)\n\nconst Link = ({ children, to }) => (\n  <ChakraLink\n    as={RouterLink}\n    {...{ to }}\n    w='100%'\n  >{children}</ChakraLink>\n)\n\nexport default () => (\n  <ChakraProvider theme={theme}>\n    <Router basename='/'>\n      <Menu>\n        {({ isOpen }) => (\n          <>\n            <MenuButton\n              isActive={isOpen} as={Button}\n              position='fixed' top='1rem' left='1rem'\n            >\n              {isOpen ? <ChevronDownIcon/> : <HamburgerIcon/>}\n            </MenuButton>\n            <MenuList>\n            <MenuItem>\n                <Link to='/'>🏡 Store as CBOR-DAG</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link to='/ceramic'>🎡 Store as Ceramic</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link to='/build'>✍ Build from DAG</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link to='/about'>📰 About</Link>\n              </MenuItem>\n            </MenuList>\n          </>\n        )}\n      </Menu>\n      <Switch>\n        <Route path='/mock/radial'>\n          <Mock Grapher={D3RadialTree}/>\n        </Route>\n        <Route path='/' component={Mock}/>\n      </Switch>\n    </Router>\n  </ChakraProvider>\n)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}