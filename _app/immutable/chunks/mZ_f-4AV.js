import{a4 as l,a5 as w,a6 as b,a7 as y,a8 as A,a9 as g,aa as h,ab as F,v as E,ac as N,ad as m,ae as P,af as R,ag as f,ah as I}from"./BeTPpg_-.js";function q(a){const{abi:r,data:e}=a,n=l(e,0,4),t=r.find(o=>o.type==="function"&&n===w(b(o)));if(!t)throw new y(n,{docsPath:"/docs/contract/decodeFunctionData"});return{functionName:t.name,args:"inputs"in t&&t.inputs&&t.inputs.length>0?A(t.inputs,l(e,4)):void 0}}const u="/docs/contract/encodeErrorResult";function p(a){const{abi:r,errorName:e,args:n}=a;let t=r[0];if(e){const c=g({abi:r,args:n,name:e});if(!c)throw new h(e,{docsPath:u});t=c}if(t.type!=="error")throw new h(void 0,{docsPath:u});const o=b(t),s=w(o);let i="0x";if(n&&n.length>0){if(!t.inputs)throw new F(t.name,{docsPath:u});i=E(t.inputs,n)}return N([s,i])}const d="/docs/contract/encodeFunctionResult";function v(a){const{abi:r,functionName:e,result:n}=a;let t=r[0];if(e){const s=g({abi:r,name:e});if(!s)throw new m(e,{docsPath:d});t=s}if(t.type!=="function")throw new m(void 0,{docsPath:d});if(!t.outputs)throw new P(t.name,{docsPath:d});const o=(()=>{if(t.outputs.length===0)return[];if(t.outputs.length===1)return[n];if(Array.isArray(n))return n;throw new R(n)})();return E(t.outputs,o)}const x="x-batch-gateway:true";async function G(a){const{data:r,ccipRequest:e}=a,{args:[n]}=q({abi:f,data:r}),t=[],o=[];return await Promise.all(n.map(async(s,i)=>{try{o[i]=s.urls.includes(x)?await G({data:s.data,ccipRequest:e}):await e(s),t[i]=!1}catch(c){t[i]=!0,o[i]=H(c)}})),v({abi:f,functionName:"query",result:[t,o]})}function H(a){return a.name==="HttpRequestError"&&a.status?p({abi:f,errorName:"HttpError",args:[a.status,a.shortMessage]}):p({abi:[I],errorName:"Error",args:["shortMessage"in a?a.shortMessage:a.message]})}export{G as a,q as d,x as l};
