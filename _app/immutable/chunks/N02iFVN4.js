var A=s=>{throw TypeError(s)};var p=(s,e,t)=>e.has(s)||A("Cannot "+t);var r=(s,e,t)=>(p(s,e,"read from private field"),t?t.call(s):e.get(s)),l=(s,e,t)=>e.has(s)?A("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t),x=(s,e,t,i)=>(p(s,e,"write to private field"),i?i.call(s,t):e.set(s,t),t),y=(s,e,t)=>(p(s,e,"access private method"),t);import{x as a,g as n,y as I}from"./DO4L_uWg.js";import{p as u}from"./CYILlETY.js";import{p as S}from"./BEPJIkJA.js";import{s as z}from"./DVjzfndF.js";var h,f,d,g,c,b,m,v,M;class ${constructor(){l(this,v);l(this,h,a(!0));l(this,f,a(u(new Map)));l(this,d,a(u(new Map)));l(this,g,a(u(new Map)));l(this,c,a(null));l(this,b,a(u(S.url.searchParams.has("debug")||z.debugging)));l(this,m,!1)}get single(){return n(r(this,h))}set single(e){I(r(this,h),u(e))}get debug(){return n(r(this,b))}set debug(e){I(r(this,b),u(e))}getSetting(e){return r(this,m)||y(this,v,M).call(this),n(r(this,f)).get(e)}setSetting(e,t){return this.debug&&console.debug({setting:{[e.toString()]:t}}),n(r(this,f)).set(e,t)}register(e,t){const{itemId:i}=t??{};this.debug&&console.debug({registering:{itemId:i,name:e.name}}),i==null?n(r(this,d)).set(e.name,e):(n(r(this,g)).get(i)==null&&n(r(this,g)).set(i,{}),this.retrieve(e.name,{itemId:i})!=null&&this.debug&&console.warn(`Redefining function: ${e.name} for item: ${i}`),n(r(this,g)).get(i)[e.name]=e)}retrieve(e,t){const{itemId:i,useActive:o}=t??{};if(e==null&&i==null&&o!=!0)throw new Error("At least one of `name`, `itemId`, or `useActive` required.");const w=o?this.activeId:i;return e==null?(this.debug&&console.debug({retrieving:{itemId:i,useActive:o}}),n(r(this,g)).get(w)):i==null&&o!=!0?(this.debug&&console.debug({retrieving:{name:e}}),n(r(this,d)).get(e)):n(r(this,g)).get(w)[e]}retrieveAll(e){return n(r(this,g)).values().map(t=>t[e]).filter(Boolean)}any(e){const t=this.retrieveAll(e);let i=!1;for(const o of t)if(i||(i=o()),i)break;return i}all(e){const t=this.retrieveAll(e);let i=!0;for(const o of t)if(i&&(i=o()),!i)break;return i}set activeId(e){this.debug&&console.debug({activeId:e}),I(r(this,c),u(e))}get activeId(){return n(r(this,c))}}h=new WeakMap,f=new WeakMap,d=new WeakMap,g=new WeakMap,c=new WeakMap,b=new WeakMap,m=new WeakMap,v=new WeakSet,M=function(){x(this,m,!0),this.single=!0};const P=new $;export{P as c};
