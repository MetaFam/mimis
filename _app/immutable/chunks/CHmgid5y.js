var x=s=>{throw TypeError(s)};var p=(s,e,t)=>e.has(s)||x("Cannot "+t);var r=(s,e,t)=>(p(s,e,"read from private field"),t?t.call(s):e.get(s)),l=(s,e,t)=>e.has(s)?x("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t),M=(s,e,t,i)=>(p(s,e,"write to private field"),i?i.call(s,t):e.set(s,t),t),S=(s,e,t)=>(p(s,e,"access private method"),t);import{m as o,i as n,n as I,o as m}from"./eyN12E4_.js";import{p as z}from"./3stBrB6o.js";import{s as $}from"./BSzDp1r6.js";var a,h,f,u,d,c,b,v,y;class k{constructor(){l(this,v);l(this,a,o(!0));l(this,h,o(m(new Map)));l(this,f,o(m(new Map)));l(this,u,o(m(new Map)));l(this,d,o(null));l(this,c,o(m(z.url.searchParams.has("debug")||$.debugging)));l(this,b,!1)}get single(){return n(r(this,a))}set single(e){I(r(this,a),e,!0)}get debug(){return n(r(this,c))}set debug(e){I(r(this,c),e,!0)}getSetting(e){return r(this,b)||S(this,v,y).call(this),n(r(this,h)).get(e)}setSetting(e,t){return this.debug&&console.debug({setting:{[e.toString()]:t}}),n(r(this,h)).set(e,t)}register(e,t){const{itemId:i}=t??{};this.debug&&console.debug({registering:{itemId:i,name:e.name}}),i==null?n(r(this,f)).set(e.name,e):(n(r(this,u)).get(i)==null&&n(r(this,u)).set(i,{}),this.retrieve(e.name,{itemId:i})!=null&&this.debug&&console.warn(`Redefining function: ${e.name} for item: ${i}`),n(r(this,u)).get(i)[e.name]=e)}retrieve(e,t){var A;const{itemId:i,useActive:g}=t??{};if(e==null&&i==null&&g!=!0)throw new Error("At least one of `name`, `itemId`, or `useActive` required.");const w=g?this.activeId:i;return e==null?(this.debug&&console.debug({retrieving:{itemId:i,useActive:g}}),n(r(this,u)).get(w)):i==null&&g!=!0?(this.debug&&console.debug({retrieving:{name:e}}),n(r(this,f)).get(e)):(A=n(r(this,u)).get(w))==null?void 0:A[e]}retrieveAll(e){return n(r(this,u)).values().map(t=>t[e]).filter(Boolean)}any(e){const t=this.retrieveAll(e);let i=!1;for(const g of t)if(i||(i=g()),i)break;return i}all(e){const t=this.retrieveAll(e);let i=!0;for(const g of t)if(i&&(i=g()),!i)break;return i}set activeId(e){this.debug&&console.debug({activeId:e}),I(r(this,d),e,!0)}get activeId(){return n(r(this,d))}}a=new WeakMap,h=new WeakMap,f=new WeakMap,u=new WeakMap,d=new WeakMap,c=new WeakMap,b=new WeakMap,v=new WeakSet,y=function(){M(this,b,!0),this.single=!0};const P=new k;export{P as c};
