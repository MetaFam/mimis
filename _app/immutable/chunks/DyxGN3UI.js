var x=s=>{throw TypeError(s)};var p=(s,e,t)=>e.has(s)||x("Cannot "+t);var r=(s,e,t)=>(p(s,e,"read from private field"),t?t.call(s):e.get(s)),l=(s,e,t)=>e.has(s)?x("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t),M=(s,e,t,i)=>(p(s,e,"write to private field"),i?i.call(s,t):e.set(s,t),t),S=(s,e,t)=>(p(s,e,"access private method"),t);import{m as a,g as n,n as I}from"./C2cU29iA.js";import{p as u}from"./LQSnVXXT.js";import{p as z}from"./B-ulNlni.js";import{s as $}from"./B0xS4FvI.js";var h,f,d,g,c,m,b,v,y;class k{constructor(){l(this,v);l(this,h,a(!0));l(this,f,a(u(new Map)));l(this,d,a(u(new Map)));l(this,g,a(u(new Map)));l(this,c,a(null));l(this,m,a(u(z.url.searchParams.has("debug")||$.debugging)));l(this,b,!1)}get single(){return n(r(this,h))}set single(e){I(r(this,h),u(e))}get debug(){return n(r(this,m))}set debug(e){I(r(this,m),u(e))}getSetting(e){return r(this,b)||S(this,v,y).call(this),n(r(this,f)).get(e)}setSetting(e,t){return this.debug&&console.debug({setting:{[e.toString()]:t}}),n(r(this,f)).set(e,t)}register(e,t){const{itemId:i}=t??{};this.debug&&console.debug({registering:{itemId:i,name:e.name}}),i==null?n(r(this,d)).set(e.name,e):(n(r(this,g)).get(i)==null&&n(r(this,g)).set(i,{}),this.retrieve(e.name,{itemId:i})!=null&&this.debug&&console.warn(`Redefining function: ${e.name} for item: ${i}`),n(r(this,g)).get(i)[e.name]=e)}retrieve(e,t){var A;const{itemId:i,useActive:o}=t??{};if(e==null&&i==null&&o!=!0)throw new Error("At least one of `name`, `itemId`, or `useActive` required.");const w=o?this.activeId:i;return e==null?(this.debug&&console.debug({retrieving:{itemId:i,useActive:o}}),n(r(this,g)).get(w)):i==null&&o!=!0?(this.debug&&console.debug({retrieving:{name:e}}),n(r(this,d)).get(e)):(A=n(r(this,g)).get(w))==null?void 0:A[e]}retrieveAll(e){return n(r(this,g)).values().map(t=>t[e]).filter(Boolean)}any(e){const t=this.retrieveAll(e);let i=!1;for(const o of t)if(i||(i=o()),i)break;return i}all(e){const t=this.retrieveAll(e);let i=!0;for(const o of t)if(i&&(i=o()),!i)break;return i}set activeId(e){this.debug&&console.debug({activeId:e}),I(r(this,c),u(e))}get activeId(){return n(r(this,c))}}h=new WeakMap,f=new WeakMap,d=new WeakMap,g=new WeakMap,c=new WeakMap,m=new WeakMap,b=new WeakMap,v=new WeakSet,y=function(){M(this,b,!0),this.single=!0};const R=new k;export{R as c};
