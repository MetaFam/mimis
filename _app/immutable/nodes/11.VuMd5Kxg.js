var Y=Object.defineProperty;var U=s=>{throw TypeError(s)};var Q=(s,e,t)=>e in s?Y(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var p=(s,e,t)=>Q(s,typeof e!="symbol"?e+"":e,t),j=(s,e,t)=>e.has(s)||U("Cannot "+t);var W=(s,e,t)=>(j(s,e,"read from private field"),t?t.call(s):e.get(s)),M=(s,e,t)=>e.has(s)?U("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t),D=(s,e,t,a)=>(j(s,e,"write to private field"),a?a.call(s,t):e.set(s,t),t);import"../chunks/CWj6FrbW.js";import{p as V,f as y,s as f,a as P,b as w,c as X,ad as Z,d as R,k as l,ac as T,r as k,aM as tt,t as N,af as g}from"../chunks/CuKwMJ0M.js";import{d as et,s as $}from"../chunks/DRICJ3qh.js";import{i as I}from"../chunks/DX5XkaxQ.js";import{h as rt}from"../chunks/DjLVrDJo.js";import{a as K}from"../chunks/3AH-aWZb.js";import{C as x,c as at,g as st,j as G,s as ot,a as it}from"../chunks/CXtfRil7.js";import{T as nt}from"../chunks/BXQjxNSt.js";import{s as ct}from"../chunks/DLUp0E8X.js";import{R as lt,g as pt}from"../chunks/BQjrH1Gq.js";import{t as dt}from"../chunks/SpTG31iA.js";import{m as ht,W as ut,P as z,c as mt,G as ft}from"../chunks/M6cbFFaq.js";import{c as bt}from"../chunks/BJohbal3.js";import{t as wt}from"../chunks/CQe7rj7t.js";x.parse("bafybeiczsscdsbs7ffqz55ahobb37kkvllc4hikvjbgmsecgnuyzy4b4ga");class gt{constructor({log:e=null,batchSize:t=1e3,encoder:a=G}){p(this,"neo4j",st());p(this,"path",[]);p(this,"log",null);p(this,"batchSize",1500);p(this,"encoder",G);p(this,"carReadable",null);p(this,"carWritable",null);p(this,"carWriter",null);p(this,"blocks",[]);p(this,"recorder",new lt);e!=null?this.log=e:ct.debugging&&(this.log=console.debug),this.batchSize=t,this.encoder=a;const{readable:o,writable:n}=new TransformStream;this.carReadable=o,this.carWritable=n,this.carWriter=n.getWriter();const r=this.blocks;this.carReadable.pipeTo(new WritableStream({write(i){r.push(i)}}))}async node(e){var a,o;const t=this.neo4j.session();if(e==null){const n=`
        MATCH (r:Root) RETURN elementId(r) as id
      `,{records:r}=await this.recorder.exec({statement:n},{}),i=r.length;if(i===0)throw new Error("Couldn’t find `rootId`.");if(i>1)throw new Error(`Found ${i} \`rootId\`s.`);e=r[0].get("id")}if(e==null)throw new Error("Couldn’t get `rootId`.");if(this.path.includes(e))throw new Error(`Revisited ${e}. (¿Cycle found?)`,{cause:this.path});this.path.push(e);try{const n=`
        MATCH (start) WHERE elementId(start) = $rootId
        OPTIONAL MATCH (start)-[rel]->(node)
        ORDER BY rel.path
        RETURN
          labels(start) AS labels,
          properties(start) AS properties,
          [r IN collect({
            type: type(rel),
            properties: properties(rel),
            targetId: elementId(node)
          }) WHERE r.type IS NOT NULL] AS relations
      `,{records:r}=await this.recorder.exec({statement:n,params:{rootId:e}},{session:t});if((a=this.log)==null||a.call(this,`Found ${r.length} node${r.length===1?"":"s"} at ${e.split(":").at(-1)}`),r.length!==1)throw new Error(`Returned ${r.length} records.`);const[i]=r,h=[];for(const b of i.get("relations")??[])h.push({type:b.type,...b.properties,target:await this.node(b.targetId)});const S=await this.addToCAR({labels:i.get("labels"),properties:Object.fromEntries(Object.entries(i.get("properties")).map(([b,A])=>(b==="cid"&&typeof A=="string"&&(A=x.parse(A)),[b,A]))),relationships:h});return this.path.pop(),(o=this.log)==null||o.call(this,{cid:S.toString()}),S}finally{await t.close()}}async addToCAR(e){const t=this.encoder.encode(e),a=await ot.digest(t),o=x.create(1,this.encoder.code,a);if(this.carWriter==null)throw new Error("No `carWriter`.");return await this.carWriter.write({cid:o,bytes:t}),o}async generateCAR(){return pt(this.blocks)}}async function vt({log:s=null,batchSize:e=1e3,rootId:t=null}){var a,o;try{const n=at,r=new gt({log:s,batchSize:e,encoder:n});r.recorder.reset(),(a=r.log)==null||a.call(r,`Exporting nodes to \`${n.name}\`…`);const i=await r.node(t),h=(await r.recorder.generateCAR()).cid;return(o=r.log)==null||o.call(r,{rootCID:i,opsCID:h}),{serializer:r,rootCID:i,opsCID:h}}catch(n){throw console.error({"Graph Serializing Error":n}),n}}var E;class _t{constructor(){p(this,"networks",[ht]);p(this,"adapter",new ut({projectId:z,networks:this.networks}));p(this,"metadata",{name:"Mïmis",description:"Collaborative filesystem",url:"https://mimis.dhappy.org",icons:["https://avatars.githubusercontent.com/u/179229932"]});M(this,E,null)}get appKit(){return W(this,E)||D(this,E,mt({adapters:[this.adapter],networks:this.networks,metadata:this.metadata,projectId:z,features:{analytics:!0,swaps:!1,onramp:!1,connectMethodsOrder:["wallet","social","email"]}})),W(this,E)}async getProvider(e="eip155",{log:t}={}){await this.appKit.ready();const a=new Promise((o,n)=>{const r=this.appKit.getProvider(e);if(r)return t==null||t({"AppKit Provider":r}),o(r);this.appKit.subscribeProviders(i=>o(i[e])),this.appKit.subscribeEvents(i=>{i.data.event==="MODAL_CLOSE"&&(i.data.properties.connected||n(new Error("Modal closed without connection.")))}),this.appKit.open()});return t==null||t({"Promised Provider":a}),a}async signMessage(e,{log:t}={}){const a=await this.getProvider(void 0,{log:t});let{address:o}=this.appKit.getAccount();if(o||(o=await new Promise(n=>{this.appKit.subscribeAccount(({address:r})=>{r&&n(r)}),this.appKit.open()})),t==null||t({message:e,provider:a,address:o}),!o)throw new Error("Could not find address from provider.");return await a.request({method:"personal_sign",params:[e,o]})}}E=new WeakMap;const H=new _t,yt=async(s,e,t,a,o,n)=>{g(e,!0);try{const{rootCID:r,serializer:i}=await vt({});g(t,!0),console.debug({acct:await ft(H.adapter.wagmiConfig)});const h=await H.signMessage(r.toString(),{log:console.debug});g(t,!1),g(a,await i.addToCAR({root:r,signature:h}),!0),console.debug({final:l(a).toString(),signature:h}),g(o,await i.carURL(),!0),g(n,`mïmis.full-tree.${wt()}.car`)}catch(r){console.error({"Generation Error":r}),nt({text:r.message,duration:16e3,close:!0,gravity:"bottom",position:"center",stopOnFocus:!0,style:{background:"linear-gradient(to right, #b09b00, #96003d)"}}).showToast()}finally{g(t,!1),g(e,!1)}};var At=y('<link rel="icon" href="radioactive%20barrel.svg"/>'),Ct=y("<button><span>Generate a CAR Archive</span></button>"),Rt=y("<p>Generating CAR…</p>"),kt=y("<p>Awaiting Ethereum Wallet Signature…</p>"),Et=async(s,e)=>{if(!l(e))throw new Error("`carURL` isn’t set.");const t=console.debug,a=await bt({log:t}),o=await fetch(l(e));t==null||t(`Uploading: "${l(e)}".`),await a.uploadCAR(await o.blob()),t==null||t("Upload Complete.")},St=async(s,e)=>{if(!l(e))throw new Error("`carURL` isn’t set.");const t=console.debug,a=await it(),r=await(await(await fetch(l(e))).blob()).arrayBuffer();t==null||t(`Uploading: "${l(e)}".`),await a.dag.import([new Uint8Array(r)]),t==null||t("Upload Complete.")},Tt=y('<hr class="svelte-1oslbmx"/> <a class="button"><span> </span></a> <hr class="svelte-1oslbmx"/> <button><span>Upload CAR To Storacha</span></button> <hr class="svelte-1oslbmx"/> <button><span>Upload CAR To Kubo</span></button>',1),Pt=y('<hr class="svelte-1oslbmx"/> <a class="button" target="_blank"><span>Browse <code> </code></span></a>',1),It=y('<heading><h1>Generate a JSON-DAG of the Graph Structure</h1></heading> <main class="svelte-1oslbmx"><!> <appkit-button></appkit-button> <!> <!></main>',3);function Bt(s,e){V(e,!0);let t=T(null),a=T(null),o=T(!1),n=T(!1),r=T("dl.car");var i=It();rt(c=>{var d=At();Z.title="Mïmis: Serialize",w(c,d)});var h=f(P(i),2),S=R(h);{var b=c=>{var d=Ct();d.__click=[yt,o,n,t,a,r],w(c,d)},A=c=>{var d=tt(),u=P(d);{var v=m=>{var _=Rt();w(m,_)},C=m=>{var _=kt();w(m,_)};I(u,m=>{l(n)?m(C,!1):m(v)})}w(c,d)};I(S,c=>{l(o)?c(A,!1):c(b)})}var L=f(S,2),O=f(L,2);{var F=c=>{var d=Tt(),u=f(P(d),2),v=R(u),C=R(v);k(v),k(u);var m=f(u,4);m.__click=[Et,a];var _=f(m,4);_.__click=[St,a],N(()=>{K(u,"href",l(a)),K(u,"download",l(r)),$(C,`Download DAG-JSON CAR: ${l(r)??""}`)}),w(c,d)};I(O,c=>{l(a)&&c(F)})}var B=f(O,2);{var J=c=>{var d=Pt(),u=f(P(d),2),v=R(u),C=f(R(v)),m=R(C);k(C),k(v),k(u),N((_,q)=>{K(u,"href",_),$(m,`ipfs://${q??""}`)},[()=>dt({cid:l(t).toString()}),()=>l(t).toString()]),w(c,d)};I(B,c=>{l(t)&&c(J)})}k(h),w(s,i),X()}et(["click"]);export{Bt as component};
