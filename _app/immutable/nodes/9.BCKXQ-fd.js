var q=e=>{throw TypeError(e)};var te=(e,n,t)=>n.has(e)||q("Cannot "+t);var T=(e,n,t)=>(te(e,n,"read from private field"),t?t.call(e):n.get(e)),M=(e,n,t)=>n.has(e)?q("Cannot add the same private member more than once"):n instanceof WeakSet?n.add(e):n.set(e,t);import{t as J,a as B,d as ne}from"../chunks/CywG_ei0.js";import{p as re,s as _,f as ae,c as P,t as z,a as ie,m as R,i as p,n as N,af as oe,r as U,z as se,aI as ce}from"../chunks/DmvcQcn9.js";import{s as ue}from"../chunks/IoC4kQTD.js";import{i as W}from"../chunks/CD554mYx.js";import{h as de}from"../chunks/DXNVwOx6.js";import{r as fe}from"../chunks/DTJrl2DX.js";import{d as le,e as Q}from"../chunks/D1TnnU7R.js";import{c as he}from"../chunks/Dmd04AuD.js";import{b as ye}from"../chunks/CxsqjZGF.js";import{v as b,d as me,a as K,C as Y,b as ge,s as pe,w as we}from"../chunks/Ke9233B-.js";import{g as ve,T as Ce}from"../chunks/BNUSnB5y.js";const F={SHA2_256:18,LENGTH:32,DAG_PB:112},Ee=40;function D(e,n){if(!e.length)throw new Error("Unexpected end of data");const t=b.decode(e);return n.seek(b.decode.bytes),t}function Ie(e){const n=new DataView(e.buffer,e.byteOffset,e.byteLength);let t=0;return{version:2,characteristics:[n.getBigUint64(t,!0),n.getBigUint64(t+=8,!0)],dataOffset:Number(n.getBigUint64(t+=8,!0)),dataSize:Number(n.getBigUint64(t+=8,!0)),indexOffset:Number(n.getBigUint64(t+=8,!0))}}function Te(e){b.decode(e);const n=b.decode.bytes,t=b.decode(e.subarray(b.decode.bytes)),r=b.decode.bytes;return n+r+t}const E={Null:e=>e===null?e:void 0,Int:e=>Number.isInteger(e)?e:void 0,Float:e=>typeof e=="number"&&Number.isFinite(e)?e:void 0,String:e=>typeof e=="string"?e:void 0,Bool:e=>typeof e=="boolean"?e:void 0,Bytes:e=>e instanceof Uint8Array?e:void 0,Link:e=>e!==null&&typeof e=="object"&&e.asCID===e?e:void 0,List:e=>Array.isArray(e)?e:void 0,Map:e=>e!==null&&typeof e=="object"&&e.asCID!==e&&!Array.isArray(e)&&!(e instanceof Uint8Array)?e:void 0},S={"CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)":E.Link,"CarV1HeaderOrV2Pragma > roots (anon)":e=>{if(E.List(e)!==void 0){for(let n=0;n<e.length;n++){let t=e[n];if(t=S["CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)"](t),t===void 0)return;if(t!==e[n]){const r=e.slice(0,n);for(let a=n;a<e.length;a++){let i=e[a];if(i=S["CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)"](i),i===void 0)return;r.push(i)}return r}}return e}},Int:E.Int,CarV1HeaderOrV2Pragma:e=>{if(E.Map(e)===void 0)return;const n=Object.entries(e);let t=e,r=1;for(let a=0;a<n.length;a++){const[i,c]=n[a];switch(i){case"roots":{const u=S["CarV1HeaderOrV2Pragma > roots (anon)"](e[i]);if(u===void 0)return;if(u!==c||t!==e){if(t===e){t={};for(let o=0;o<a;o++)t[n[o][0]]=n[o][1]}t.roots=u}}break;case"version":{r--;const u=S.Int(e[i]);if(u===void 0)return;if(u!==c||t!==e){if(t===e){t={};for(let o=0;o<a;o++)t[n[o][0]]=n[o][1]}t.version=u}}break;default:return}}if(!(r>0))return t}},O={"CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)":E.Link,"CarV1HeaderOrV2Pragma > roots (anon)":e=>{if(E.List(e)!==void 0){for(let n=0;n<e.length;n++){let t=e[n];if(t=O["CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)"](t),t===void 0)return;if(t!==e[n]){const r=e.slice(0,n);for(let a=n;a<e.length;a++){let i=e[a];if(i=O["CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)"](i),i===void 0)return;r.push(i)}return r}}return e}},Int:E.Int,CarV1HeaderOrV2Pragma:e=>{if(E.Map(e)===void 0)return;const n=Object.entries(e);let t=e,r=1;for(let a=0;a<n.length;a++){const[i,c]=n[a];switch(i){case"roots":{const u=O["CarV1HeaderOrV2Pragma > roots (anon)"](c);if(u===void 0)return;if(u!==c||t!==e){if(t===e){t={};for(let o=0;o<a;o++)t[n[o][0]]=n[o][1]}t.roots=u}}break;case"version":{r--;const u=O.Int(c);if(u===void 0)return;if(u!==c||t!==e){if(t===e){t={};for(let o=0;o<a;o++)t[n[o][0]]=n[o][1]}t.version=u}}break;default:return}}if(!(r>0))return t}},be={toTyped:S.CarV1HeaderOrV2Pragma,toRepresentation:O.CarV1HeaderOrV2Pragma};async function X(e,n){const t=D(await e.upTo(8),e);if(t===0)throw new Error("Invalid CAR header (zero length)");const r=await e.exactly(t,!0),a=me(r);if(be.toTyped(a)===void 0)throw new Error("Invalid CAR header format");if(a.version!==1&&a.version!==2||n!==void 0&&a.version!==n)throw new Error(`Invalid CAR version: ${a.version}${n!==void 0?` (expected ${n})`:""}`);if(a.version===1){if(!Array.isArray(a.roots))throw new Error("Invalid CAR header format");return a}if(a.roots!==void 0)throw new Error("Invalid CAR header format");const i=Ie(await e.exactly(Ee,!0));e.seek(i.dataOffset-e.pos);const c=await X(e,1);return Object.assign(c,i)}async function $e(e){const n=await e.exactly(2,!1);if(n[0]===F.SHA2_256&&n[1]===F.LENGTH){const c=await e.exactly(34,!0),u=K(c);return Y.create(0,F.DAG_PB,u)}const t=D(await e.upTo(8),e);if(t!==1)throw new Error(`Unexpected CID version (${t})`);const r=D(await e.upTo(8),e),a=await e.exactly(Te(await e.upTo(8)),!0),i=K(a);return Y.create(t,r,i)}async function Z(e){const n=e.pos;let t=D(await e.upTo(8),e);if(t===0)throw new Error("Invalid CAR section (zero length)");t+=e.pos-n;const r=await $e(e),a=t-Number(e.pos-n);return{cid:r,length:t,blockLength:a}}async function xe(e){const{cid:n,blockLength:t}=await Z(e);return{bytes:await e.exactly(t,!0),cid:n}}async function Re(e){const n=e.pos,{cid:t,length:r,blockLength:a}=await Z(e),i={cid:t,length:r,blockLength:a,offset:n,blockOffset:e.pos};return e.seek(i.blockLength),i}function ke(e){const n=(async()=>{const t=await X(e);if(t.version===2){const r=e.pos-t.dataOffset;e=Ne(e,t.dataSize-r)}return t})();return{header:()=>n,async*blocks(){for(await n;(await e.upTo(8)).length>0;)yield await xe(e)},async*blocksIndex(){for(await n;(await e.upTo(8)).length>0;)yield await Re(e)}}}function He(e){let n=0;return{async upTo(t){return e.subarray(n,n+Math.min(t,e.length-n))},async exactly(t,r=!1){if(t>e.length-n)throw new Error("Unexpected end of data");const a=e.subarray(n,n+t);return r&&(n+=t),a},seek(t){n+=t},get pos(){return n}}}function Ve(e){let n=0,t=0,r=0,a=new Uint8Array(0);const i=async c=>{t=a.length-r;const u=[a.subarray(r)];for(;t<c;){const s=await e();if(s==null)break;t<0?s.length>t&&u.push(s.subarray(-t)):u.push(s),t+=s.length}a=new Uint8Array(u.reduce((s,l)=>s+l.length,0));let o=0;for(const s of u)a.set(s,o),o+=s.length;r=0};return{async upTo(c){return a.length-r<c&&await i(c),a.subarray(r,r+Math.min(a.length-r,c))},async exactly(c,u=!1){if(a.length-r<c&&await i(c),a.length-r<c)throw new Error("Unexpected end of data");const o=a.subarray(r,r+c);return u&&(n+=c,r+=c),o},seek(c){n+=c,r+=c},get pos(){return n}}}function _e(e){const n=e[Symbol.asyncIterator]();async function t(){const r=await n.next();return r.done?null:r.value}return Ve(t)}function Ne(e,n){let t=0;return{async upTo(r){let a=await e.upTo(r);return a.length+t>n&&(a=a.subarray(0,n-t)),a},async exactly(r,a=!1){const i=await e.exactly(r,a);if(i.length+t>n)throw new Error("Unexpected end of data");return a&&(t+=r),i},seek(r){t+=r,e.seek(r)},get pos(){return e.pos}}}class Se{constructor(n,t,r){this._version=n,this._roots=t,this._iterable=r,this._decoded=!1}get version(){return this._version}async getRoots(){return this._roots}}class A extends Se{[Symbol.asyncIterator](){if(this._decoded)throw new Error("Cannot decode more than once");if(!this._iterable)throw new Error("Block iterable not found");return this._decoded=!0,this._iterable[Symbol.asyncIterator]()}static async fromBytes(n){const{version:t,roots:r,iterator:a}=await Oe(n);return new A(t,r,a)}static async fromIterable(n){const{version:t,roots:r,iterator:a}=await Le(n);return new A(t,r,a)}}async function Oe(e){if(!(e instanceof Uint8Array))throw new TypeError("fromBytes() requires a Uint8Array");return j(He(e))}async function Le(e){if(!e||typeof e[Symbol.asyncIterator]!="function")throw new TypeError("fromIterable() requires an async iterable");return j(_e(e))}async function j(e){const n=ke(e),{version:t,roots:r}=await n.header();return{version:t,roots:r,iterator:n.blocks()}}async function*Me(e){const n=e.getReader();try{for(;;){const{done:t,value:r}=await n.read();if(t)return;yield r}}finally{n.releaseLock()}}async function Pe(e){const n=await A.fromIterable(Me(e.stream())),t=[],r=[],a={};let i=null;for await(const{cid:c,bytes:u}of n){i=c.toString();const o=await ge(u),{Links:s}=o;if(s.length===0){t.push(c.toString());continue}if(s.every(({Name:d})=>d==="")){r.push(c.toString());continue}const l=s.map(({Name:d,Tsize:y,Hash:m})=>({name:d,size:y,cid:m.toString()}));a[c.toString()]=l.map(d=>{const y=r.includes(d.cid)||t.includes(d.cid)?"file":"directory",m={type:y,title:d.name??`Unknown ${y}`,size:d.size??0,cid:d.cid};if(y==="directory"){const w=m.children=a[d.cid],v=w.map(({childCount:$=0})=>$);m.childCount=v.reduce(($,I)=>$+I,w.length)}return m})}if(!i)throw new Error("No nodes found.");return a[i]}async function Ue(e,n=[],t){const r=ve();try{const o=`/${n.join("/")}${n.length>0?"/":""}`,s=await u(e);return t==null||t(`Mounted ${s} at ${o}.`),s}finally{await r.close()}async function a({dirCID:o,entryCID:s,name:l}){const d=r.session();await d.run(`
      MATCH (e:IPFS { cid: $entryCID })
      MERGE (d:IPFS:Directory { cid: $dirCID })
      MERGE (d)-[c:CONTAINS]->(e)
      SET c.path = $name
    `,{dirCID:o,entryCID:s,name:l}),t==null||t(`Added ${l} â†’ ${s}`),await d.close()}async function i({cid:o,type:s,size:l}){const d=r.session();await d.run(`
      MERGE (e:IPFS:File { cid: $cid })
      SET e.mimetype = CASE WHEN $type IS NOT NULL THEN $type END
      SET e.size = $size
    `,{cid:o,type:s,size:l}),t==null||t(`Added /${o} (${s})`),await d.close()}async function c(){const o=r.session(),s=`
      MERGE (r:Mount:Root)
      RETURN elementId(r) as id
    `,{records:l}=await o.run(s);let d=l[0].get("id");for(t==null||t(`Added Root: ${d}`);n.length>0;){const m=`
        MATCH (p:Mount)
        WHERE elementId(p) = $next
        MERGE (p)-[:CONTAINS {path: $elem}]->(n:Mount)
        RETURN elementId(n) as id
      `,w=n.shift(),{records:v}=await o.run(m,{next:d,elem:w});d=v[0].get("id")}if(!e.children)throw new Error("Root has no children.");const y=`
      MATCH (m:Mount)
      WHERE elementId(m) = $next
      MATCH (i:IPFS { cid: $cid })
      MERGE (m)-[:CONNECTS {order: 1, path: $name}]->(i)
    `;for(const m of e.children){const{title:w,data:{cid:v}}=m;t==null||t(`Mounting: ${v} @ ${w}`),await o.run(y,{next:d,cid:v,name:w})}await o.close()}async function u(o){if(!o.children)throw new Error(`Not A Directory: ${o.title}`);for(const s of o.children)if(!(!s.selected&&s.getSelectedNodes().length===0)){if(s.children)await u(s);else{const l=(()=>{var d;switch((d=s.title.split(".").at(-1))==null?void 0:d.toLowerCase()){case"svg":return"image/svg+xml";case"png":return"image/png";case"jpg":case"jpeg":return"image/jpeg";default:return null}})();await i({cid:s.data.cid,type:l,size:s.data.size})}if(o.data.cid)await a({dirCID:o.data.cid,entryCID:s.data.cid,name:s.title});else return await c(),s.data.cid}return o.data.cid}}var De=J('<form class="svelte-1gc7151"><input placeholder="/system/mount/point/"> <button>Neo4j Import <!></button></form>'),Ae=J('<header><h1>Upload a CAR File to MÃ¯mis</h1></header> <main><form class="svelte-1gc7151"><input type="file" required accept=".car"> <button>Read CAR</button></form> <!> <div id="fs-tree" class="svelte-1gc7151"></div></main>',1);function je(e,n){var $,I,k,H;re(n,!0);class t{constructor(){M(this,I,R());M(this,k,R(!(($=this.form)!=null&&$.checkValidity())));M(this,H,R(!1))}get form(){return p(T(this,I))}set form(f){N(T(this,I),f,!0)}get disabled(){return p(T(this,k))}set disabled(f){N(T(this,k),f,!0)}get generating(){return p(T(this,H))}set generating(f){N(T(this,H),f,!0)}}I=new WeakMap,k=new WeakMap,H=new WeakMap;let r=R(0),a=R(void 0),i=new t,c=R("");const u=async h=>{var x,L;h.preventDefault();const f=((x=i.form)==null?void 0:x.querySelector('input[type="file"]'))??null,C=(L=f==null?void 0:f.files)==null?void 0:L[0];if(!C)throw new Error("No file selected.");const g=await Pe(C);pe(g),N(a,we({source:g,mount:"fs-tree"}),!0)},o=async h=>{h.preventDefault();try{i.generating=!0;const f=p(c).split("/").filter(Boolean);if(!p(a))throw new Error("No tree to mount.");const C=x=>{console.debug(x),ce(r)};console.debug({root:p(a).root});const g=await Ue(p(a).root,f,C);Ce({text:`Loaded: ipfs://${g.slice(0,5)}â€¦${g.slice(-5)}`,duration:8e3,destination:`https://w3s.link/ipfs/${g}`,newWindow:!0,close:!0,gravity:"bottom",position:"center",stopOnFocus:!0,style:{background:"linear-gradient(to right, #00b09b, #96c93d)"}}).showToast()}finally{i.generating=!1}};var s=Ae();de(h=>{oe.title="Upload a CAR"});var l=_(ae(s),2),d=P(l),y=P(d);y.__change=()=>{var h;return i.disabled=!((h=i.form)!=null&&h.checkValidity())};var m=_(y,2);U(d),ye(d,h=>i.form=h,()=>i==null?void 0:i.form);var w=_(d,2);{var v=h=>{var f=De(),C=P(f);fe(C);var g=_(C,2),x=_(P(g));{var L=V=>{var G=ne();z(ee=>ue(G,ee),[()=>p(r).toLocaleString()]),B(V,G)};W(x,V=>{i.generating&&V(L)})}U(g),U(f),z(()=>g.disabled=i.generating),Q("submit",f,o),he(C,()=>p(c),V=>N(c,V)),B(h,f)};W(w,h=>{p(a)&&h(v)})}se(2),U(l),z(()=>m.disabled=i.disabled),Q("submit",d,u),B(e,s),ie()}le(["change"]);export{je as component};
