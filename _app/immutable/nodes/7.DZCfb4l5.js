var O=Object.defineProperty;var D=(t,e,n)=>e in t?O(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var F=(t,e,n)=>D(t,typeof e!="symbol"?e+"":e,n);import{c as comment,a as append$1,t as template}from"../chunks/BRSNPvHI.js";import{p as push$1,ac as set$1,f as first_child,g as get$1,a as pop,ai as state,t as template_effect,c as child,r as reset,b as user_effect,s as sibling,as as next,ag as $document,k as derived}from"../chunks/QhIMCl9r.js";import{s as set_text}from"../chunks/DtgeDXES.js";import{i as if_block}from"../chunks/B368kSxc.js";import{e as each,i as index}from"../chunks/4bQanyia.js";import{h as head}from"../chunks/DzrHZ7o-.js";import{s as set_attribute}from"../chunks/UU1MBGZW.js";import{t as toggle_class}from"../chunks/CxSDrxAo.js";import{d as delegate,j as event}from"../chunks/TWpPyyqi.js";import{p as proxy}from"../chunks/C5ryocCe.js";import{c as code$2,b as decode$2,e as encode$2,p as prepare,f as create$7,C as CID,g as fromHex,h as coerce,i as encode$3,v as varint,s as selectAll,w as wunderFiles}from"../chunks/D2sTaU_6.js";import{b as bind_this}from"../chunks/jybyZh3h.js";import{p as prop}from"../chunks/BkKqPUOW.js";import{g as getDefaultExportFromCjs,c as commonjsGlobal}from"../chunks/Cpj98o6Y.js";var root_1$2=template("<img>"),root_2$2=template("<pre> </pre>");function Content(t,e){push$1(e,!0);let n=state(void 0),r=state(void 0);const[,i]=Array.from(/([^.]+)$/.exec(e.content.name)??[]);switch(i){case"jpg":case"jpeg":case"png":case"gif":case"svg":{set$1(n,proxy(URL.createObjectURL(e.content)));break}default:set$1(n,void 0),e.content.text().then(c=>{set$1(r,proxy(c))})}var o=comment(),s=first_child(o);{var l=c=>{var f=root_1$2();template_effect(()=>{set_attribute(f,"src",get$1(n)),set_attribute(f,"alt",e.content.name)}),append$1(c,f)},u=c=>{var f=root_2$2(),$=child(f,!0);reset(f),template_effect(()=>set_text($,get$1(r))),append$1(c,f)};if_block(s,c=>{get$1(n)?c(l):c(u,!1)})}append$1(t,o),pop()}var on_click$1=async(t,e)=>{set$1(e,proxy(await window.showDirectoryPicker()))},root_2$1=template("<span> </span>"),root_3$1=template("<span>No directory selected.</span>"),root_1$1=template('<label><button type="button">Pick Directory</button> <!></label>'),root_4$1=template("<p>Warning: This program uses <code>showDirectoryPicker()</code> to retrieve a <code>FileSystemDirectoryHandle</code>. As of this writing, 26 November 2024, Chrome & Opera are the only browsers that make this function available.</p> <p>Specifically, <em>this</em> browser doesn't have support for <code>showDirectoryPicker</code>.</p>",1),root_5$1=template('<label><input id="gitignore" type="checkbox" checked> <span>Respect <code>.gitignore</code>s</span></label> <button>Review Import</button>',1),on_click_1=(t,e)=>e(!1),root_6$1=template("<button>ðŸ˜¿ Sorry ðŸ˜¿</button>"),root$1=template('<section id="dialog"><dialog class="svelte-172i4jy"><h1>Import A Directory Tree</h1> <form class="svelte-172i4jy"><!> <!></form></dialog></section>');function BeginDialog(t,e){push$1(e,!0);let n=prop(e,"open",15,!1),r=state(void 0);user_effect(()=>{var a,h;n()?(a=get$1(r))==null||a.showModal():(h=get$1(r))==null||h.close()});let i=state(void 0);const o=async a=>{var B;a.preventDefault(),a.target.elements.namedItem("dir");const y=[get$1(i)].filter(w=>!!w);if(y.length===0)throw new Error("No directory selected.");(B=e.onsubmit)==null||B.call(e,y),n(!1)};var s=root$1(),l=child(s),u=sibling(child(l),2),c=child(u);{var f=a=>{var h=root_1$1(),y=child(h);y.__click=[on_click$1,i];var B=sibling(y,2);{var w=p=>{var m=root_2$1(),v=child(m,!0);reset(m),template_effect(()=>set_text(v,get$1(i).name)),append$1(p,m)},d=p=>{var m=root_3$1();append$1(p,m)};if_block(B,p=>{get$1(i)?p(w):p(d,!1)})}reset(h),append$1(a,h)},$=a=>{var h=root_4$1();next(2),append$1(a,h)};if_block(c,a=>{window.showDirectoryPicker?a(f):a($,!1)})}var g=sibling(c,2);{var _=a=>{var h=root_5$1();next(2),append$1(a,h)},L=a=>{var h=root_6$1();h.__click=[on_click_1,n],append$1(a,h)};if_block(g,a=>{window.showDirectoryPicker?a(_):a(L,!1)})}reset(u),reset(l),bind_this(l,a=>set$1(r,a),()=>get$1(r)),reset(s),event("submit",u,o),append$1(t,s),pop()}delegate(["click"]);var define_process_env_default={};function makeArray(t){return Array.isArray(t)?t:[t]}const EMPTY$4="",SPACE=" ",ESCAPE="\\",REGEX_TEST_BLANK_LINE=/^\s+$/,REGEX_INVALID_TRAILING_BACKSLASH=/(?:[^\\]|^)\\$/,REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION=/^\\!/,REGEX_REPLACE_LEADING_EXCAPED_HASH=/^\\#/,REGEX_SPLITALL_CRLF=/\r?\n/g,REGEX_TEST_INVALID_PATH=/^\.*\/|^\.+$/,SLASH="/";let TMP_KEY_IGNORE="node-ignore";typeof Symbol<"u"&&(TMP_KEY_IGNORE=Symbol.for("node-ignore"));const KEY_IGNORE=TMP_KEY_IGNORE,define=(t,e,n)=>Object.defineProperty(t,e,{value:n}),REGEX_REGEXP_RANGE=/([0-z])-([0-z])/g,RETURN_FALSE=()=>!1,sanitizeRange=t=>t.replace(REGEX_REGEXP_RANGE,(e,n,r)=>n.charCodeAt(0)<=r.charCodeAt(0)?e:EMPTY$4),cleanRangeBackSlash=t=>{const{length:e}=t;return t.slice(0,e-e%2)},REPLACERS=[[/^\uFEFF/,()=>EMPTY$4],[/((?:\\\\)*?)(\\?\s+)$/,(t,e,n)=>e+(n.indexOf("\\")===0?SPACE:EMPTY$4)],[/(\\+?)\s/g,(t,e)=>{const{length:n}=e;return e.slice(0,n-n%2)+SPACE}],[/[\\$.|*+(){^]/g,t=>`\\${t}`],[/(?!\\)\?/g,()=>"[^/]"],[/^\//,()=>"^"],[/\//g,()=>"\\/"],[/^\^*\\\*\\\*\\\//,()=>"^(?:.*\\/)?"],[/^(?=[^^])/,function(){return/\/(?!$)/.test(this)?"^":"(?:^|\\/)"}],[/\\\/\\\*\\\*(?=\\\/|$)/g,(t,e,n)=>e+6<n.length?"(?:\\/[^\\/]+)*":"\\/.+"],[/(^|[^\\]+)(\\\*)+(?=.+)/g,(t,e,n)=>{const r=n.replace(/\\\*/g,"[^\\/]*");return e+r}],[/\\\\\\(?=[$.|*+(){^])/g,()=>ESCAPE],[/\\\\/g,()=>ESCAPE],[/(\\)?\[([^\]/]*?)(\\*)($|\])/g,(t,e,n,r,i)=>e===ESCAPE?`\\[${n}${cleanRangeBackSlash(r)}${i}`:i==="]"&&r.length%2===0?`[${sanitizeRange(n)}${r}]`:"[]"],[/(?:[^*])$/,t=>/\/$/.test(t)?`${t}$`:`${t}(?=$|\\/$)`],[/(\^|\\\/)?\\\*$/,(t,e)=>`${e?`${e}[^/]+`:"[^/]*"}(?=$|\\/$)`]],regexCache=Object.create(null),makeRegex=(t,e)=>{let n=regexCache[t];return n||(n=REPLACERS.reduce((r,[i,o])=>r.replace(i,o.bind(t)),t),regexCache[t]=n),e?new RegExp(n,"i"):new RegExp(n)},isString=t=>typeof t=="string",checkPattern=t=>t&&isString(t)&&!REGEX_TEST_BLANK_LINE.test(t)&&!REGEX_INVALID_TRAILING_BACKSLASH.test(t)&&t.indexOf("#")!==0,splitPattern=t=>t.split(REGEX_SPLITALL_CRLF);class IgnoreRule{constructor(e,n,r,i){this.origin=e,this.pattern=n,this.negative=r,this.regex=i}}const createRule=(t,e)=>{const n=t;let r=!1;t.indexOf("!")===0&&(r=!0,t=t.substr(1)),t=t.replace(REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION,"!").replace(REGEX_REPLACE_LEADING_EXCAPED_HASH,"#");const i=makeRegex(t,e);return new IgnoreRule(n,t,r,i)},throwError=(t,e)=>{throw new e(t)},checkPath=(t,e,n)=>isString(t)?t?checkPath.isNotRelative(t)?n(`path should be a \`path.relative()\`d string, but got "${e}"`,RangeError):!0:n("path must not be empty",TypeError):n(`path must be a string, but got \`${e}\``,TypeError),isNotRelative=t=>REGEX_TEST_INVALID_PATH.test(t);checkPath.isNotRelative=isNotRelative;checkPath.convert=t=>t;class Ignore{constructor({ignorecase:e=!0,ignoreCase:n=e,allowRelativePaths:r=!1}={}){define(this,KEY_IGNORE,!0),this._rules=[],this._ignoreCase=n,this._allowRelativePaths=r,this._initCache()}_initCache(){this._ignoreCache=Object.create(null),this._testCache=Object.create(null)}_addPattern(e){if(e&&e[KEY_IGNORE]){this._rules=this._rules.concat(e._rules),this._added=!0;return}if(checkPattern(e)){const n=createRule(e,this._ignoreCase);this._added=!0,this._rules.push(n)}}add(e){return this._added=!1,makeArray(isString(e)?splitPattern(e):e).forEach(this._addPattern,this),this._added&&this._initCache(),this}addPattern(e){return this.add(e)}_testOne(e,n){let r=!1,i=!1;return this._rules.forEach(o=>{const{negative:s}=o;if(i===s&&r!==i||s&&!r&&!i&&!n)return;o.regex.test(e)&&(r=!s,i=s)}),{ignored:r,unignored:i}}_test(e,n,r,i){const o=e&&checkPath.convert(e);return checkPath(o,e,this._allowRelativePaths?RETURN_FALSE:throwError),this._t(o,n,r,i)}_t(e,n,r,i){if(e in n)return n[e];if(i||(i=e.split(SLASH)),i.pop(),!i.length)return n[e]=this._testOne(e,r);const o=this._t(i.join(SLASH)+SLASH,n,r,i);return n[e]=o.ignored?o:this._testOne(e,r)}ignores(e){return this._test(e,this._ignoreCache,!1).ignored}createFilter(){return e=>!this.ignores(e)}filter(e){return makeArray(e).filter(this.createFilter())}test(e){return this._test(e,this._testCache,!0)}}const factory$1=t=>new Ignore(t),isPathValid=t=>checkPath(t&&checkPath.convert(t),t,RETURN_FALSE);factory$1.isPathValid=isPathValid;factory$1.default=factory$1;var ignore=factory$1;if(typeof process<"u"&&(define_process_env_default&&define_process_env_default.IGNORE_TEST_WIN32||process.platform==="win32")){const t=n=>/^\\\\\?\\/.test(n)||/["<>|\u0000-\u001F]+/u.test(n)?n:n.replace(/\\/g,"/");checkPath.convert=t;const e=/^[a-z]:\//i;checkPath.isNotRelative=n=>e.test(n)||isNotRelative(n)}const ignore$1=getDefaultExportFromCjs(ignore);let gitignores=[];const spiderTree=({onStatusUpdate:t,dirs:e,gitignores:n=!0})=>{return Array.isArray(e)||(e=[e]),Promise.all(e.map(async i=>await r(i)));async function r(i,o=""){var u;const s=`${o}${i.name}/`;if(t==null||t(`Traversing: ${s}`),n)try{if(gitignores.length===0){const f=ignore$1();f.add(["**/.git"]),gitignores.push({ig:f,path:s})}const c=await i.getFileHandle(".gitignore");if(c){const f=ignore$1(),g=(await(await c.getFile()).text()).split(/\s*\n\s*/m);f.add(g),gitignores.push({ig:f,path:s})}}catch{}const l={type:"directory",title:i.name,children:[],size:0,childCount:0};for await(const c of i.values()){const f=`${s}${c.name}`;if(!gitignores.some(g=>{if(!f.startsWith(g.path))throw new Error(`Invalid Path: "${f}", doesn't start with "${g.path}".`);const _=f.substring(g.path.length);if(_!==""&&(g.ig.ignores(_)||g.ig.ignores(_.replace(/^\/+/,""))||c.kind==="directory"&&g.ig.ignores(`${_}/`)))return t==null||t(`Ignoring: ${f}`),!0})){let g;if(c.kind==="directory")g=await r(c,s),l.childCount+=g.childCount;else{t==null||t(`Leaf: ${f}`);const _=await c.getFile();g={type:"file",title:c.name,size:_.size,handle:c},l.childCount+=1}g&&(l.size+=g.size,(u=l.children)==null||u.push(g))}}return gitignores=gitignores.filter(c=>c.path.length<s.length),l}};var indexMinimal={},minimal$1={},aspromise=asPromise;function asPromise(t,e){for(var n=new Array(arguments.length-1),r=0,i=2,o=!0;i<arguments.length;)n[r++]=arguments[i++];return new Promise(function(l,u){n[r]=function(f){if(o)if(o=!1,f)u(f);else{for(var $=new Array(arguments.length-1),g=0;g<$.length;)$[g++]=arguments[g];l.apply(null,$)}};try{t.apply(e||null,n)}catch(c){o&&(o=!1,u(c))}})}var base64$1={};(function(t){var e=t;e.length=function(l){var u=l.length;if(!u)return 0;for(var c=0;--u%4>1&&l.charAt(u)==="=";)++c;return Math.ceil(l.length*3)/4-c};for(var n=new Array(64),r=new Array(123),i=0;i<64;)r[n[i]=i<26?i+65:i<52?i+71:i<62?i-4:i-59|43]=i++;e.encode=function(l,u,c){for(var f=null,$=[],g=0,_=0,L;u<c;){var a=l[u++];switch(_){case 0:$[g++]=n[a>>2],L=(a&3)<<4,_=1;break;case 1:$[g++]=n[L|a>>4],L=(a&15)<<2,_=2;break;case 2:$[g++]=n[L|a>>6],$[g++]=n[a&63],_=0;break}g>8191&&((f||(f=[])).push(String.fromCharCode.apply(String,$)),g=0)}return _&&($[g++]=n[L],$[g++]=61,_===1&&($[g++]=61)),f?(g&&f.push(String.fromCharCode.apply(String,$.slice(0,g))),f.join("")):String.fromCharCode.apply(String,$.slice(0,g))};var o="invalid encoding";e.decode=function(l,u,c){for(var f=c,$=0,g,_=0;_<l.length;){var L=l.charCodeAt(_++);if(L===61&&$>1)break;if((L=r[L])===void 0)throw Error(o);switch($){case 0:g=L,$=1;break;case 1:u[c++]=g<<2|(L&48)>>4,g=L,$=2;break;case 2:u[c++]=(g&15)<<4|(L&60)>>2,g=L,$=3;break;case 3:u[c++]=(g&3)<<6|L,$=0;break}}if($===1)throw Error(o);return c-f},e.test=function(l){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(l)}})(base64$1);var eventemitter=EventEmitter;function EventEmitter(){this._listeners={}}EventEmitter.prototype.on=function(e,n,r){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:r||this}),this};EventEmitter.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var r=this._listeners[e],i=0;i<r.length;)r[i].fn===n?r.splice(i,1):++i;return this};EventEmitter.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var r=[],i=1;i<arguments.length;)r.push(arguments[i++]);for(i=0;i<n.length;)n[i].fn.apply(n[i++].ctx,r)}return this};var float=factory(factory);function factory(t){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),r=n[3]===128;function i(u,c,f){e[0]=u,c[f]=n[0],c[f+1]=n[1],c[f+2]=n[2],c[f+3]=n[3]}function o(u,c,f){e[0]=u,c[f]=n[3],c[f+1]=n[2],c[f+2]=n[1],c[f+3]=n[0]}t.writeFloatLE=r?i:o,t.writeFloatBE=r?o:i;function s(u,c){return n[0]=u[c],n[1]=u[c+1],n[2]=u[c+2],n[3]=u[c+3],e[0]}function l(u,c){return n[3]=u[c],n[2]=u[c+1],n[1]=u[c+2],n[0]=u[c+3],e[0]}t.readFloatLE=r?s:l,t.readFloatBE=r?l:s}():function(){function e(r,i,o,s){var l=i<0?1:0;if(l&&(i=-i),i===0)r(1/i>0?0:2147483648,o,s);else if(isNaN(i))r(2143289344,o,s);else if(i>34028234663852886e22)r((l<<31|2139095040)>>>0,o,s);else if(i<11754943508222875e-54)r((l<<31|Math.round(i/1401298464324817e-60))>>>0,o,s);else{var u=Math.floor(Math.log(i)/Math.LN2),c=Math.round(i*Math.pow(2,-u)*8388608)&8388607;r((l<<31|u+127<<23|c)>>>0,o,s)}}t.writeFloatLE=e.bind(null,writeUintLE),t.writeFloatBE=e.bind(null,writeUintBE);function n(r,i,o){var s=r(i,o),l=(s>>31)*2+1,u=s>>>23&255,c=s&8388607;return u===255?c?NaN:l*(1/0):u===0?l*1401298464324817e-60*c:l*Math.pow(2,u-150)*(c+8388608)}t.readFloatLE=n.bind(null,readUintLE),t.readFloatBE=n.bind(null,readUintBE)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),r=n[7]===128;function i(u,c,f){e[0]=u,c[f]=n[0],c[f+1]=n[1],c[f+2]=n[2],c[f+3]=n[3],c[f+4]=n[4],c[f+5]=n[5],c[f+6]=n[6],c[f+7]=n[7]}function o(u,c,f){e[0]=u,c[f]=n[7],c[f+1]=n[6],c[f+2]=n[5],c[f+3]=n[4],c[f+4]=n[3],c[f+5]=n[2],c[f+6]=n[1],c[f+7]=n[0]}t.writeDoubleLE=r?i:o,t.writeDoubleBE=r?o:i;function s(u,c){return n[0]=u[c],n[1]=u[c+1],n[2]=u[c+2],n[3]=u[c+3],n[4]=u[c+4],n[5]=u[c+5],n[6]=u[c+6],n[7]=u[c+7],e[0]}function l(u,c){return n[7]=u[c],n[6]=u[c+1],n[5]=u[c+2],n[4]=u[c+3],n[3]=u[c+4],n[2]=u[c+5],n[1]=u[c+6],n[0]=u[c+7],e[0]}t.readDoubleLE=r?s:l,t.readDoubleBE=r?l:s}():function(){function e(r,i,o,s,l,u){var c=s<0?1:0;if(c&&(s=-s),s===0)r(0,l,u+i),r(1/s>0?0:2147483648,l,u+o);else if(isNaN(s))r(0,l,u+i),r(2146959360,l,u+o);else if(s>17976931348623157e292)r(0,l,u+i),r((c<<31|2146435072)>>>0,l,u+o);else{var f;if(s<22250738585072014e-324)f=s/5e-324,r(f>>>0,l,u+i),r((c<<31|f/4294967296)>>>0,l,u+o);else{var $=Math.floor(Math.log(s)/Math.LN2);$===1024&&($=1023),f=s*Math.pow(2,-$),r(f*4503599627370496>>>0,l,u+i),r((c<<31|$+1023<<20|f*1048576&1048575)>>>0,l,u+o)}}}t.writeDoubleLE=e.bind(null,writeUintLE,0,4),t.writeDoubleBE=e.bind(null,writeUintBE,4,0);function n(r,i,o,s,l){var u=r(s,l+i),c=r(s,l+o),f=(c>>31)*2+1,$=c>>>20&2047,g=4294967296*(c&1048575)+u;return $===2047?g?NaN:f*(1/0):$===0?f*5e-324*g:f*Math.pow(2,$-1075)*(g+4503599627370496)}t.readDoubleLE=n.bind(null,readUintLE,0,4),t.readDoubleBE=n.bind(null,readUintBE,4,0)}(),t}function writeUintLE(t,e,n){e[n]=t&255,e[n+1]=t>>>8&255,e[n+2]=t>>>16&255,e[n+3]=t>>>24}function writeUintBE(t,e,n){e[n]=t>>>24,e[n+1]=t>>>16&255,e[n+2]=t>>>8&255,e[n+3]=t&255}function readUintLE(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0}function readUintBE(t,e){return(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}var inquire_1=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(t){}return null}var utf8$3={};(function(t){var e=t;e.length=function(r){for(var i=0,o=0,s=0;s<r.length;++s)o=r.charCodeAt(s),o<128?i+=1:o<2048?i+=2:(o&64512)===55296&&(r.charCodeAt(s+1)&64512)===56320?(++s,i+=4):i+=3;return i},e.read=function(r,i,o){var s=o-i;if(s<1)return"";for(var l=null,u=[],c=0,f;i<o;)f=r[i++],f<128?u[c++]=f:f>191&&f<224?u[c++]=(f&31)<<6|r[i++]&63:f>239&&f<365?(f=((f&7)<<18|(r[i++]&63)<<12|(r[i++]&63)<<6|r[i++]&63)-65536,u[c++]=55296+(f>>10),u[c++]=56320+(f&1023)):u[c++]=(f&15)<<12|(r[i++]&63)<<6|r[i++]&63,c>8191&&((l||(l=[])).push(String.fromCharCode.apply(String,u)),c=0);return l?(c&&l.push(String.fromCharCode.apply(String,u.slice(0,c))),l.join("")):String.fromCharCode.apply(String,u.slice(0,c))},e.write=function(r,i,o){for(var s=o,l,u,c=0;c<r.length;++c)l=r.charCodeAt(c),l<128?i[o++]=l:l<2048?(i[o++]=l>>6|192,i[o++]=l&63|128):(l&64512)===55296&&((u=r.charCodeAt(c+1))&64512)===56320?(l=65536+((l&1023)<<10)+(u&1023),++c,i[o++]=l>>18|240,i[o++]=l>>12&63|128,i[o++]=l>>6&63|128,i[o++]=l&63|128):(i[o++]=l>>12|224,i[o++]=l>>6&63|128,i[o++]=l&63|128);return o-s}})(utf8$3);var pool_1=pool;function pool(t,e,n){var r=n||8192,i=r>>>1,o=null,s=r;return function(u){if(u<1||u>i)return t(u);s+u>r&&(o=t(r),s=0);var c=e.call(o,s,s+=u);return s&7&&(s=(s|7)+1),c}}var longbits,hasRequiredLongbits;function requireLongbits(){if(hasRequiredLongbits)return longbits;hasRequiredLongbits=1,longbits=e;var t=requireMinimal();function e(o,s){this.lo=o>>>0,this.hi=s>>>0}var n=e.zero=new e(0,0);n.toNumber=function(){return 0},n.zzEncode=n.zzDecode=function(){return this},n.length=function(){return 1};var r=e.zeroHash="\0\0\0\0\0\0\0\0";e.fromNumber=function(s){if(s===0)return n;var l=s<0;l&&(s=-s);var u=s>>>0,c=(s-u)/4294967296>>>0;return l&&(c=~c>>>0,u=~u>>>0,++u>4294967295&&(u=0,++c>4294967295&&(c=0))),new e(u,c)},e.from=function(s){if(typeof s=="number")return e.fromNumber(s);if(t.isString(s))if(t.Long)s=t.Long.fromString(s);else return e.fromNumber(parseInt(s,10));return s.low||s.high?new e(s.low>>>0,s.high>>>0):n},e.prototype.toNumber=function(s){if(!s&&this.hi>>>31){var l=~this.lo+1>>>0,u=~this.hi>>>0;return l||(u=u+1>>>0),-(l+u*4294967296)}return this.lo+this.hi*4294967296},e.prototype.toLong=function(s){return t.Long?new t.Long(this.lo|0,this.hi|0,!!s):{low:this.lo|0,high:this.hi|0,unsigned:!!s}};var i=String.prototype.charCodeAt;return e.fromHash=function(s){return s===r?n:new e((i.call(s,0)|i.call(s,1)<<8|i.call(s,2)<<16|i.call(s,3)<<24)>>>0,(i.call(s,4)|i.call(s,5)<<8|i.call(s,6)<<16|i.call(s,7)<<24)>>>0)},e.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},e.prototype.zzEncode=function(){var s=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^s)>>>0,this.lo=(this.lo<<1^s)>>>0,this},e.prototype.zzDecode=function(){var s=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^s)>>>0,this.hi=(this.hi>>>1^s)>>>0,this},e.prototype.length=function(){var s=this.lo,l=(this.lo>>>28|this.hi<<4)>>>0,u=this.hi>>>24;return u===0?l===0?s<16384?s<128?1:2:s<2097152?3:4:l<16384?l<128?5:6:l<2097152?7:8:u<128?9:10},longbits}var hasRequiredMinimal;function requireMinimal(){return hasRequiredMinimal||(hasRequiredMinimal=1,function(t){var e=t;e.asPromise=aspromise,e.base64=base64$1,e.EventEmitter=eventemitter,e.float=float,e.inquire=inquire_1,e.utf8=utf8$3,e.pool=pool_1,e.LongBits=requireLongbits(),e.isNode=!!(typeof commonjsGlobal<"u"&&commonjsGlobal&&commonjsGlobal.process&&commonjsGlobal.process.versions&&commonjsGlobal.process.versions.node),e.global=e.isNode&&commonjsGlobal||typeof window<"u"&&window||typeof self<"u"&&self||commonjsGlobal,e.emptyArray=Object.freeze?Object.freeze([]):[],e.emptyObject=Object.freeze?Object.freeze({}):{},e.isInteger=Number.isInteger||function(o){return typeof o=="number"&&isFinite(o)&&Math.floor(o)===o},e.isString=function(o){return typeof o=="string"||o instanceof String},e.isObject=function(o){return o&&typeof o=="object"},e.isset=e.isSet=function(o,s){var l=o[s];return l!=null&&o.hasOwnProperty(s)?typeof l!="object"||(Array.isArray(l)?l.length:Object.keys(l).length)>0:!1},e.Buffer=function(){try{var i=e.inquire("buffer").Buffer;return i.prototype.utf8Write?i:null}catch{return null}}(),e._Buffer_from=null,e._Buffer_allocUnsafe=null,e.newBuffer=function(o){return typeof o=="number"?e.Buffer?e._Buffer_allocUnsafe(o):new e.Array(o):e.Buffer?e._Buffer_from(o):typeof Uint8Array>"u"?o:new Uint8Array(o)},e.Array=typeof Uint8Array<"u"?Uint8Array:Array,e.Long=e.global.dcodeIO&&e.global.dcodeIO.Long||e.global.Long||e.inquire("long"),e.key2Re=/^true|false|0|1$/,e.key32Re=/^-?(?:0|[1-9][0-9]*)$/,e.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,e.longToHash=function(o){return o?e.LongBits.from(o).toHash():e.LongBits.zeroHash},e.longFromHash=function(o,s){var l=e.LongBits.fromHash(o);return e.Long?e.Long.fromBits(l.lo,l.hi,s):l.toNumber(!!s)};function n(i,o,s){for(var l=Object.keys(o),u=0;u<l.length;++u)(i[l[u]]===void 0||!s)&&(i[l[u]]=o[l[u]]);return i}e.merge=n,e.lcFirst=function(o){return o.charAt(0).toLowerCase()+o.substring(1)};function r(i){function o(s,l){if(!(this instanceof o))return new o(s,l);Object.defineProperty(this,"message",{get:function(){return s}}),Error.captureStackTrace?Error.captureStackTrace(this,o):Object.defineProperty(this,"stack",{value:new Error().stack||""}),l&&n(this,l)}return o.prototype=Object.create(Error.prototype,{constructor:{value:o,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return i},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),o}e.newError=r,e.ProtocolError=r("ProtocolError"),e.oneOfGetter=function(o){for(var s={},l=0;l<o.length;++l)s[o[l]]=1;return function(){for(var u=Object.keys(this),c=u.length-1;c>-1;--c)if(s[u[c]]===1&&this[u[c]]!==void 0&&this[u[c]]!==null)return u[c]}},e.oneOfSetter=function(o){return function(s){for(var l=0;l<o.length;++l)o[l]!==s&&delete this[o[l]]}},e.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},e._configure=function(){var i=e.Buffer;if(!i){e._Buffer_from=e._Buffer_allocUnsafe=null;return}e._Buffer_from=i.from!==Uint8Array.from&&i.from||function(s,l){return new i(s,l)},e._Buffer_allocUnsafe=i.allocUnsafe||function(s){return new i(s)}}}(minimal$1)),minimal$1}var writer=Writer$1,util$4=requireMinimal(),BufferWriter$1,LongBits$1=util$4.LongBits,base64=util$4.base64,utf8$2=util$4.utf8;function Op(t,e,n){this.fn=t,this.len=e,this.next=void 0,this.val=n}function noop(){}function State(t){this.head=t.head,this.tail=t.tail,this.len=t.len,this.next=t.states}function Writer$1(){this.len=0,this.head=new Op(noop,0,0),this.tail=this.head,this.states=null}var create$6=function t(){return util$4.Buffer?function(){return(Writer$1.create=function(){return new BufferWriter$1})()}:function(){return new Writer$1}};Writer$1.create=create$6();Writer$1.alloc=function t(e){return new util$4.Array(e)};util$4.Array!==Array&&(Writer$1.alloc=util$4.pool(Writer$1.alloc,util$4.Array.prototype.subarray));Writer$1.prototype._push=function t(e,n,r){return this.tail=this.tail.next=new Op(e,n,r),this.len+=n,this};function writeByte(t,e,n){e[n]=t&255}function writeVarint32(t,e,n){for(;t>127;)e[n++]=t&127|128,t>>>=7;e[n]=t}function VarintOp(t,e){this.len=t,this.next=void 0,this.val=e}VarintOp.prototype=Object.create(Op.prototype);VarintOp.prototype.fn=writeVarint32;Writer$1.prototype.uint32=function t(e){return this.len+=(this.tail=this.tail.next=new VarintOp((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};Writer$1.prototype.int32=function t(e){return e<0?this._push(writeVarint64,10,LongBits$1.fromNumber(e)):this.uint32(e)};Writer$1.prototype.sint32=function t(e){return this.uint32((e<<1^e>>31)>>>0)};function writeVarint64(t,e,n){for(;t.hi;)e[n++]=t.lo&127|128,t.lo=(t.lo>>>7|t.hi<<25)>>>0,t.hi>>>=7;for(;t.lo>127;)e[n++]=t.lo&127|128,t.lo=t.lo>>>7;e[n++]=t.lo}Writer$1.prototype.uint64=function t(e){var n=LongBits$1.from(e);return this._push(writeVarint64,n.length(),n)};Writer$1.prototype.int64=Writer$1.prototype.uint64;Writer$1.prototype.sint64=function t(e){var n=LongBits$1.from(e).zzEncode();return this._push(writeVarint64,n.length(),n)};Writer$1.prototype.bool=function t(e){return this._push(writeByte,1,e?1:0)};function writeFixed32(t,e,n){e[n]=t&255,e[n+1]=t>>>8&255,e[n+2]=t>>>16&255,e[n+3]=t>>>24}Writer$1.prototype.fixed32=function t(e){return this._push(writeFixed32,4,e>>>0)};Writer$1.prototype.sfixed32=Writer$1.prototype.fixed32;Writer$1.prototype.fixed64=function t(e){var n=LongBits$1.from(e);return this._push(writeFixed32,4,n.lo)._push(writeFixed32,4,n.hi)};Writer$1.prototype.sfixed64=Writer$1.prototype.fixed64;Writer$1.prototype.float=function t(e){return this._push(util$4.float.writeFloatLE,4,e)};Writer$1.prototype.double=function t(e){return this._push(util$4.float.writeDoubleLE,8,e)};var writeBytes=util$4.Array.prototype.set?function t(e,n,r){n.set(e,r)}:function t(e,n,r){for(var i=0;i<e.length;++i)n[r+i]=e[i]};Writer$1.prototype.bytes=function t(e){var n=e.length>>>0;if(!n)return this._push(writeByte,1,0);if(util$4.isString(e)){var r=Writer$1.alloc(n=base64.length(e));base64.decode(e,r,0),e=r}return this.uint32(n)._push(writeBytes,n,e)};Writer$1.prototype.string=function t(e){var n=utf8$2.length(e);return n?this.uint32(n)._push(utf8$2.write,n,e):this._push(writeByte,1,0)};Writer$1.prototype.fork=function t(){return this.states=new State(this),this.head=this.tail=new Op(noop,0,0),this.len=0,this};Writer$1.prototype.reset=function t(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Op(noop,0,0),this.len=0),this};Writer$1.prototype.ldelim=function t(){var e=this.head,n=this.tail,r=this.len;return this.reset().uint32(r),r&&(this.tail.next=e.next,this.tail=n,this.len+=r),this};Writer$1.prototype.finish=function t(){for(var e=this.head.next,n=this.constructor.alloc(this.len),r=0;e;)e.fn(e.val,n,r),r+=e.len,e=e.next;return n};Writer$1._configure=function(t){BufferWriter$1=t,Writer$1.create=create$6(),BufferWriter$1._configure()};var writer_buffer=BufferWriter,Writer=writer;(BufferWriter.prototype=Object.create(Writer.prototype)).constructor=BufferWriter;var util$3=requireMinimal();function BufferWriter(){Writer.call(this)}BufferWriter._configure=function(){BufferWriter.alloc=util$3._Buffer_allocUnsafe,BufferWriter.writeBytesBuffer=util$3.Buffer&&util$3.Buffer.prototype instanceof Uint8Array&&util$3.Buffer.prototype.set.name==="set"?function(e,n,r){n.set(e,r)}:function(e,n,r){if(e.copy)e.copy(n,r,0,e.length);else for(var i=0;i<e.length;)n[r++]=e[i++]}};BufferWriter.prototype.bytes=function t(e){util$3.isString(e)&&(e=util$3._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(BufferWriter.writeBytesBuffer,n,e),this};function writeStringBuffer(t,e,n){t.length<40?util$3.utf8.write(t,e,n):e.utf8Write?e.utf8Write(t,n):e.write(t,n)}BufferWriter.prototype.string=function t(e){var n=util$3.Buffer.byteLength(e);return this.uint32(n),n&&this._push(writeStringBuffer,n,e),this};BufferWriter._configure();var reader=Reader$1,util$2=requireMinimal(),BufferReader$1,LongBits=util$2.LongBits,utf8$1=util$2.utf8;function indexOutOfRange(t,e){return RangeError("index out of range: "+t.pos+" + "+(e||1)+" > "+t.len)}function Reader$1(t){this.buf=t,this.pos=0,this.len=t.length}var create_array=typeof Uint8Array<"u"?function t(e){if(e instanceof Uint8Array||Array.isArray(e))return new Reader$1(e);throw Error("illegal buffer")}:function t(e){if(Array.isArray(e))return new Reader$1(e);throw Error("illegal buffer")},create$5=function t(){return util$2.Buffer?function(n){return(Reader$1.create=function(i){return util$2.Buffer.isBuffer(i)?new BufferReader$1(i):create_array(i)})(n)}:create_array};Reader$1.create=create$5();Reader$1.prototype._slice=util$2.Array.prototype.subarray||util$2.Array.prototype.slice;Reader$1.prototype.uint32=function t(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,indexOutOfRange(this,10);return e}}();Reader$1.prototype.int32=function t(){return this.uint32()|0};Reader$1.prototype.sint32=function t(){var e=this.uint32();return e>>>1^-(e&1)|0};function readLongVarint(){var t=new LongBits(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t;if(t.lo=(t.lo|(this.buf[this.pos]&127)<<28)>>>0,t.hi=(t.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return t;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t}return t.lo=(t.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,t}if(this.len-this.pos>4){for(;e<5;++e)if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}else for(;e<5;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}throw Error("invalid varint encoding")}Reader$1.prototype.bool=function t(){return this.uint32()!==0};function readFixed32_end(t,e){return(t[e-4]|t[e-3]<<8|t[e-2]<<16|t[e-1]<<24)>>>0}Reader$1.prototype.fixed32=function t(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)};Reader$1.prototype.sfixed32=function t(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)|0};function readFixed64(){if(this.pos+8>this.len)throw indexOutOfRange(this,8);return new LongBits(readFixed32_end(this.buf,this.pos+=4),readFixed32_end(this.buf,this.pos+=4))}Reader$1.prototype.float=function t(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);var e=util$2.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};Reader$1.prototype.double=function t(){if(this.pos+8>this.len)throw indexOutOfRange(this,4);var e=util$2.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};Reader$1.prototype.bytes=function t(){var e=this.uint32(),n=this.pos,r=this.pos+e;if(r>this.len)throw indexOutOfRange(this,e);if(this.pos+=e,Array.isArray(this.buf))return this.buf.slice(n,r);if(n===r){var i=util$2.Buffer;return i?i.alloc(0):new this.buf.constructor(0)}return this._slice.call(this.buf,n,r)};Reader$1.prototype.string=function t(){var e=this.bytes();return utf8$1.read(e,0,e.length)};Reader$1.prototype.skip=function t(e){if(typeof e=="number"){if(this.pos+e>this.len)throw indexOutOfRange(this,e);this.pos+=e}else do if(this.pos>=this.len)throw indexOutOfRange(this);while(this.buf[this.pos++]&128);return this};Reader$1.prototype.skipType=function(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(t=this.uint32()&7)!==4;)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+t+" at offset "+this.pos)}return this};Reader$1._configure=function(t){BufferReader$1=t,Reader$1.create=create$5(),BufferReader$1._configure();var e=util$2.Long?"toLong":"toNumber";util$2.merge(Reader$1.prototype,{int64:function(){return readLongVarint.call(this)[e](!1)},uint64:function(){return readLongVarint.call(this)[e](!0)},sint64:function(){return readLongVarint.call(this).zzDecode()[e](!1)},fixed64:function(){return readFixed64.call(this)[e](!0)},sfixed64:function(){return readFixed64.call(this)[e](!1)}})};var reader_buffer=BufferReader,Reader=reader;(BufferReader.prototype=Object.create(Reader.prototype)).constructor=BufferReader;var util$1=requireMinimal();function BufferReader(t){Reader.call(this,t)}BufferReader._configure=function(){util$1.Buffer&&(BufferReader.prototype._slice=util$1.Buffer.prototype.slice)};BufferReader.prototype.string=function t(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};BufferReader._configure();var rpc={},service=Service,util=requireMinimal();(Service.prototype=Object.create(util.EventEmitter.prototype)).constructor=Service;function Service(t,e,n){if(typeof t!="function")throw TypeError("rpcImpl must be a function");util.EventEmitter.call(this),this.rpcImpl=t,this.requestDelimited=!!e,this.responseDelimited=!!n}Service.prototype.rpcCall=function t(e,n,r,i,o){if(!i)throw TypeError("request must be specified");var s=this;if(!o)return util.asPromise(t,s,e,n,r,i);if(!s.rpcImpl){setTimeout(function(){o(Error("already ended"))},0);return}try{return s.rpcImpl(e,n[s.requestDelimited?"encodeDelimited":"encode"](i).finish(),function(u,c){if(u)return s.emit("error",u,e),o(u);if(c===null){s.end(!0);return}if(!(c instanceof r))try{c=r[s.responseDelimited?"decodeDelimited":"decode"](c)}catch(f){return s.emit("error",f,e),o(f)}return s.emit("data",c,e),o(null,c)})}catch(l){s.emit("error",l,e),setTimeout(function(){o(l)},0);return}};Service.prototype.end=function t(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this};(function(t){var e=t;e.Service=service})(rpc);var roots={};(function(t){var e=t;e.build="minimal",e.Writer=writer,e.BufferWriter=writer_buffer,e.Reader=reader,e.BufferReader=reader_buffer,e.util=requireMinimal(),e.rpc=rpc,e.roots=roots,e.configure=n;function n(){e.util._configure(),e.Writer._configure(e.BufferWriter),e.Reader._configure(e.BufferReader)}n()})(indexMinimal);var minimal=indexMinimal;const $protobuf=getDefaultExportFromCjs(minimal),$Reader=$protobuf.Reader,$Writer=$protobuf.Writer,$util=$protobuf.util,$root=$protobuf.roots.unixfs||($protobuf.roots.unixfs={}),Data=$root.Data=(()=>{function t(e){if(this.blocksizes=[],e)for(var n=Object.keys(e),r=0;r<n.length;++r)e[n[r]]!=null&&(this[n[r]]=e[n[r]])}return t.prototype.Type=0,t.prototype.Data=$util.newBuffer([]),t.prototype.filesize=$util.Long?$util.Long.fromBits(0,0,!0):0,t.prototype.blocksizes=$util.emptyArray,t.prototype.hashType=$util.Long?$util.Long.fromBits(0,0,!0):0,t.prototype.fanout=$util.Long?$util.Long.fromBits(0,0,!0):0,t.prototype.mode=0,t.prototype.mtime=null,t.encode=function(n,r){if(r||(r=$Writer.create()),r.uint32(8).int32(n.Type),n.Data!=null&&Object.hasOwnProperty.call(n,"Data")&&r.uint32(18).bytes(n.Data),n.filesize!=null&&Object.hasOwnProperty.call(n,"filesize")&&r.uint32(24).uint64(n.filesize),n.blocksizes!=null&&n.blocksizes.length)for(var i=0;i<n.blocksizes.length;++i)r.uint32(32).uint64(n.blocksizes[i]);return n.hashType!=null&&Object.hasOwnProperty.call(n,"hashType")&&r.uint32(40).uint64(n.hashType),n.fanout!=null&&Object.hasOwnProperty.call(n,"fanout")&&r.uint32(48).uint64(n.fanout),n.mode!=null&&Object.hasOwnProperty.call(n,"mode")&&r.uint32(56).uint32(n.mode),n.mtime!=null&&Object.hasOwnProperty.call(n,"mtime")&&$root.UnixTime.encode(n.mtime,r.uint32(66).fork()).ldelim(),r},t.decode=function(n,r){n instanceof $Reader||(n=$Reader.create(n));for(var i=r===void 0?n.len:n.pos+r,o=new $root.Data;n.pos<i;){var s=n.uint32();switch(s>>>3){case 1:o.Type=n.int32();break;case 2:o.Data=n.bytes();break;case 3:o.filesize=n.uint64();break;case 4:if(o.blocksizes&&o.blocksizes.length||(o.blocksizes=[]),(s&7)===2)for(var l=n.uint32()+n.pos;n.pos<l;)o.blocksizes.push(n.uint64());else o.blocksizes.push(n.uint64());break;case 5:o.hashType=n.uint64();break;case 6:o.fanout=n.uint64();break;case 7:o.mode=n.uint32();break;case 8:o.mtime=$root.UnixTime.decode(n,n.uint32());break;default:n.skipType(s&7);break}}if(!o.hasOwnProperty("Type"))throw $util.ProtocolError("missing required 'Type'",{instance:o});return o},t.fromObject=function(n){if(n instanceof $root.Data)return n;var r=new $root.Data;switch(n.Type){case"Raw":case 0:r.Type=0;break;case"Directory":case 1:r.Type=1;break;case"File":case 2:r.Type=2;break;case"Metadata":case 3:r.Type=3;break;case"Symlink":case 4:r.Type=4;break;case"HAMTShard":case 5:r.Type=5;break}if(n.Data!=null&&(typeof n.Data=="string"?$util.base64.decode(n.Data,r.Data=$util.newBuffer($util.base64.length(n.Data)),0):n.Data.length&&(r.Data=n.Data)),n.filesize!=null&&($util.Long?(r.filesize=$util.Long.fromValue(n.filesize)).unsigned=!0:typeof n.filesize=="string"?r.filesize=parseInt(n.filesize,10):typeof n.filesize=="number"?r.filesize=n.filesize:typeof n.filesize=="object"&&(r.filesize=new $util.LongBits(n.filesize.low>>>0,n.filesize.high>>>0).toNumber(!0))),n.blocksizes){if(!Array.isArray(n.blocksizes))throw TypeError(".Data.blocksizes: array expected");r.blocksizes=[];for(var i=0;i<n.blocksizes.length;++i)$util.Long?(r.blocksizes[i]=$util.Long.fromValue(n.blocksizes[i])).unsigned=!0:typeof n.blocksizes[i]=="string"?r.blocksizes[i]=parseInt(n.blocksizes[i],10):typeof n.blocksizes[i]=="number"?r.blocksizes[i]=n.blocksizes[i]:typeof n.blocksizes[i]=="object"&&(r.blocksizes[i]=new $util.LongBits(n.blocksizes[i].low>>>0,n.blocksizes[i].high>>>0).toNumber(!0))}if(n.hashType!=null&&($util.Long?(r.hashType=$util.Long.fromValue(n.hashType)).unsigned=!0:typeof n.hashType=="string"?r.hashType=parseInt(n.hashType,10):typeof n.hashType=="number"?r.hashType=n.hashType:typeof n.hashType=="object"&&(r.hashType=new $util.LongBits(n.hashType.low>>>0,n.hashType.high>>>0).toNumber(!0))),n.fanout!=null&&($util.Long?(r.fanout=$util.Long.fromValue(n.fanout)).unsigned=!0:typeof n.fanout=="string"?r.fanout=parseInt(n.fanout,10):typeof n.fanout=="number"?r.fanout=n.fanout:typeof n.fanout=="object"&&(r.fanout=new $util.LongBits(n.fanout.low>>>0,n.fanout.high>>>0).toNumber(!0))),n.mode!=null&&(r.mode=n.mode>>>0),n.mtime!=null){if(typeof n.mtime!="object")throw TypeError(".Data.mtime: object expected");r.mtime=$root.UnixTime.fromObject(n.mtime)}return r},t.toObject=function(n,r){r||(r={});var i={};if((r.arrays||r.defaults)&&(i.blocksizes=[]),r.defaults){if(i.Type=r.enums===String?"Raw":0,r.bytes===String?i.Data="":(i.Data=[],r.bytes!==Array&&(i.Data=$util.newBuffer(i.Data))),$util.Long){var o=new $util.Long(0,0,!0);i.filesize=r.longs===String?o.toString():r.longs===Number?o.toNumber():o}else i.filesize=r.longs===String?"0":0;if($util.Long){var o=new $util.Long(0,0,!0);i.hashType=r.longs===String?o.toString():r.longs===Number?o.toNumber():o}else i.hashType=r.longs===String?"0":0;if($util.Long){var o=new $util.Long(0,0,!0);i.fanout=r.longs===String?o.toString():r.longs===Number?o.toNumber():o}else i.fanout=r.longs===String?"0":0;i.mode=0,i.mtime=null}if(n.Type!=null&&n.hasOwnProperty("Type")&&(i.Type=r.enums===String?$root.Data.DataType[n.Type]:n.Type),n.Data!=null&&n.hasOwnProperty("Data")&&(i.Data=r.bytes===String?$util.base64.encode(n.Data,0,n.Data.length):r.bytes===Array?Array.prototype.slice.call(n.Data):n.Data),n.filesize!=null&&n.hasOwnProperty("filesize")&&(typeof n.filesize=="number"?i.filesize=r.longs===String?String(n.filesize):n.filesize:i.filesize=r.longs===String?$util.Long.prototype.toString.call(n.filesize):r.longs===Number?new $util.LongBits(n.filesize.low>>>0,n.filesize.high>>>0).toNumber(!0):n.filesize),n.blocksizes&&n.blocksizes.length){i.blocksizes=[];for(var s=0;s<n.blocksizes.length;++s)typeof n.blocksizes[s]=="number"?i.blocksizes[s]=r.longs===String?String(n.blocksizes[s]):n.blocksizes[s]:i.blocksizes[s]=r.longs===String?$util.Long.prototype.toString.call(n.blocksizes[s]):r.longs===Number?new $util.LongBits(n.blocksizes[s].low>>>0,n.blocksizes[s].high>>>0).toNumber(!0):n.blocksizes[s]}return n.hashType!=null&&n.hasOwnProperty("hashType")&&(typeof n.hashType=="number"?i.hashType=r.longs===String?String(n.hashType):n.hashType:i.hashType=r.longs===String?$util.Long.prototype.toString.call(n.hashType):r.longs===Number?new $util.LongBits(n.hashType.low>>>0,n.hashType.high>>>0).toNumber(!0):n.hashType),n.fanout!=null&&n.hasOwnProperty("fanout")&&(typeof n.fanout=="number"?i.fanout=r.longs===String?String(n.fanout):n.fanout:i.fanout=r.longs===String?$util.Long.prototype.toString.call(n.fanout):r.longs===Number?new $util.LongBits(n.fanout.low>>>0,n.fanout.high>>>0).toNumber(!0):n.fanout),n.mode!=null&&n.hasOwnProperty("mode")&&(i.mode=n.mode),n.mtime!=null&&n.hasOwnProperty("mtime")&&(i.mtime=$root.UnixTime.toObject(n.mtime,r)),i},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t.DataType=function(){const e={},n=Object.create(e);return n[e[0]="Raw"]=0,n[e[1]="Directory"]=1,n[e[2]="File"]=2,n[e[3]="Metadata"]=3,n[e[4]="Symlink"]=4,n[e[5]="HAMTShard"]=5,n}(),t})();$root.UnixTime=(()=>{function t(e){if(e)for(var n=Object.keys(e),r=0;r<n.length;++r)e[n[r]]!=null&&(this[n[r]]=e[n[r]])}return t.prototype.Seconds=$util.Long?$util.Long.fromBits(0,0,!1):0,t.prototype.FractionalNanoseconds=0,t.encode=function(n,r){return r||(r=$Writer.create()),r.uint32(8).int64(n.Seconds),n.FractionalNanoseconds!=null&&Object.hasOwnProperty.call(n,"FractionalNanoseconds")&&r.uint32(21).fixed32(n.FractionalNanoseconds),r},t.decode=function(n,r){n instanceof $Reader||(n=$Reader.create(n));for(var i=r===void 0?n.len:n.pos+r,o=new $root.UnixTime;n.pos<i;){var s=n.uint32();switch(s>>>3){case 1:o.Seconds=n.int64();break;case 2:o.FractionalNanoseconds=n.fixed32();break;default:n.skipType(s&7);break}}if(!o.hasOwnProperty("Seconds"))throw $util.ProtocolError("missing required 'Seconds'",{instance:o});return o},t.fromObject=function(n){if(n instanceof $root.UnixTime)return n;var r=new $root.UnixTime;return n.Seconds!=null&&($util.Long?(r.Seconds=$util.Long.fromValue(n.Seconds)).unsigned=!1:typeof n.Seconds=="string"?r.Seconds=parseInt(n.Seconds,10):typeof n.Seconds=="number"?r.Seconds=n.Seconds:typeof n.Seconds=="object"&&(r.Seconds=new $util.LongBits(n.Seconds.low>>>0,n.Seconds.high>>>0).toNumber())),n.FractionalNanoseconds!=null&&(r.FractionalNanoseconds=n.FractionalNanoseconds>>>0),r},t.toObject=function(n,r){r||(r={});var i={};if(r.defaults){if($util.Long){var o=new $util.Long(0,0,!1);i.Seconds=r.longs===String?o.toString():r.longs===Number?o.toNumber():o}else i.Seconds=r.longs===String?"0":0;i.FractionalNanoseconds=0}return n.Seconds!=null&&n.hasOwnProperty("Seconds")&&(typeof n.Seconds=="number"?i.Seconds=r.longs===String?String(n.Seconds):n.Seconds:i.Seconds=r.longs===String?$util.Long.prototype.toString.call(n.Seconds):r.longs===Number?new $util.LongBits(n.Seconds.low>>>0,n.Seconds.high>>>0).toNumber():n.Seconds),n.FractionalNanoseconds!=null&&n.hasOwnProperty("FractionalNanoseconds")&&(i.FractionalNanoseconds=n.FractionalNanoseconds),i},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t})();$root.Metadata=(()=>{function t(e){if(e)for(var n=Object.keys(e),r=0;r<n.length;++r)e[n[r]]!=null&&(this[n[r]]=e[n[r]])}return t.prototype.MimeType="",t.encode=function(n,r){return r||(r=$Writer.create()),n.MimeType!=null&&Object.hasOwnProperty.call(n,"MimeType")&&r.uint32(10).string(n.MimeType),r},t.decode=function(n,r){n instanceof $Reader||(n=$Reader.create(n));for(var i=r===void 0?n.len:n.pos+r,o=new $root.Metadata;n.pos<i;){var s=n.uint32();switch(s>>>3){case 1:o.MimeType=n.string();break;default:n.skipType(s&7);break}}return o},t.fromObject=function(n){if(n instanceof $root.Metadata)return n;var r=new $root.Metadata;return n.MimeType!=null&&(r.MimeType=String(n.MimeType)),r},t.toObject=function(n,r){r||(r={});var i={};return r.defaults&&(i.MimeType=""),n.MimeType!=null&&n.hasOwnProperty("MimeType")&&(i.MimeType=n.MimeType),i},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t})();const NodeType=Data.DataType,EMPTY$3=Object.freeze([]),EMPTY_BUFFER$1=new Uint8Array(0),BLANK$2=Object.freeze({}),DEFAULT_FILE_MODE=parseInt("0644",8),DEFAULT_DIRECTORY_MODE=parseInt("0755",8),code$1=code$2,name$3="UnixFS",encodePB=(t,e)=>(Object(globalThis).debug&&console.log({data:t,links:e}),encode$2(prepare({Data:Data.encode(t).finish(),Links:e}))),createRaw=t=>({type:NodeType.Raw,content:t}),createEmptyFile=t=>createSimpleFile(EMPTY_BUFFER$1,t),createSimpleFile=(t,e)=>({type:NodeType.File,layout:"simple",content:t,metadata:decodeMetadata(e)}),createFileChunk=t=>({type:NodeType.File,layout:"simple",content:t}),createAdvancedFile=(t,e)=>({type:NodeType.File,layout:"advanced",parts:t,metadata:decodeMetadata(e)}),createFileShard=t=>({type:NodeType.File,layout:"advanced",parts:t}),createComplexFile=(t,e,n)=>({type:NodeType.File,layout:"complex",content:t,parts:e,metadata:decodeMetadata(n)}),createFlatDirectory=(t,e)=>({type:NodeType.Directory,metadata:decodeMetadata(e),entries:t}),createShardedDirectory=(t,e,n,r,i=BLANK$2)=>({type:NodeType.HAMTShard,bitfield:e,fanout:readFanout(n),hashType:readInt(r),entries:t,metadata:decodeMetadata(i)}),createDirectoryShard=(t,e,n,r)=>({type:NodeType.HAMTShard,bitfield:e,fanout:readFanout(n),hashType:readInt(r),entries:t}),encodeRaw=t=>encodePB({Type:NodeType.Raw,Data:t.byteLength>0?t:void 0,filesize:t.byteLength,blocksizes:EMPTY$3},[]),encodeFile=(t,e=!1)=>{const n=e?BLANK$2:Object(t).metadata;switch(t.layout){case"simple":return encodeSimpleFile(t.content,n);case"advanced":return encodeAdvancedFile(t.parts,n);case"complex":return encodeComplexFile(t.content,t.parts,n);default:throw new TypeError(`File with unknown layout "${Object(t).layout}" was passed`)}},encodeFileChunk=t=>encodeSimpleFile(t,BLANK$2),encodeFileShard=t=>encodePB({Type:NodeType.File,blocksizes:t.map(contentByteLength),filesize:cumulativeContentByteLength(t)},t.map(encodeLink)),encodeAdvancedFile=(t,e=BLANK$2)=>encodePB({Type:NodeType.File,blocksizes:t.map(contentByteLength),filesize:cumulativeContentByteLength(t),...encodeMetadata(e)},t.map(encodeLink)),encodeLink=t=>({Name:"",Tsize:t.dagByteLength,Hash:t.cid}),encodeSimpleFile=(t,e=BLANK$2)=>encodePB({Type:NodeType.File,Data:t.byteLength>0?t:void 0,filesize:t.byteLength,blocksizes:[],...encodeMetadata(e)},[]),encodeComplexFile=(t,e,n=BLANK$2)=>encodePB({Type:NodeType.File,Data:t,filesize:t.byteLength+cumulativeContentByteLength(e),blocksizes:e.map(contentByteLength)},e.map(encodeLink)),encodeDirectory=t=>encodePB({Type:t.type,...encodeDirectoryMetadata(t.metadata||BLANK$2)},t.entries.map(encodeNamedLink)),encodeHAMTShard=({bitfield:t,fanout:e,hashType:n,entries:r,metadata:i=BLANK$2})=>encodePB({Type:NodeType.HAMTShard,Data:t.byteLength>0?t:void 0,fanout:readFanout(e),hashType:readInt(n),...encodeDirectoryMetadata(i)},r.map(encodeNamedLink)),readFanout=t=>{if(Math.log2(t)%1===0)return t;throw new TypeError(`Expected hamt size to be a power of two instead got ${t}`)},readInt=t=>{if(Number.isInteger(t))return t;throw new TypeError(`Expected an integer value instead got ${t}`)},createSymlink=(t,e=BLANK$2)=>({type:NodeType.Symlink,content:t,metadata:decodeMetadata(e)}),encodeSymlink=(t,e=!1)=>{const n=e?BLANK$2:Object(t).metadata;return encodePB({Type:NodeType.Symlink,Data:t.content,...encodeMetadata(n||BLANK$2)},[])},encode$1=(t,e=!0)=>{switch(t.type){case NodeType.Raw:return encodeRaw(t.content);case NodeType.File:return encodeFile(t);case NodeType.Directory:return encodeDirectory(t);case NodeType.HAMTShard:return encodeHAMTShard(t);case NodeType.Symlink:return encodeSymlink(t);default:throw new Error(`Unknown node type ${Object(t).type}`)}},decode$1=t=>{const e=decode$2(t),n=Data.decode(e.Data),{Type:r,Data:i,mtime:o,mode:s,blocksizes:l,...u}=Data.toObject(n,{defaults:!1,arrays:!0,longs:Number,objects:!1}),c={...s&&{mode:s},...decodeMtime(o)},f=e.Links;switch(n.Type){case NodeType.Raw:return createRaw(i);case NodeType.File:return f.length===0?new SimpleFileView(i,c):i.byteLength===0?new AdvancedFileView(decodeFileLinks(u.blocksizes,f),c):new ComplexFileView(i,decodeFileLinks(u.blocksizes,f),c);case NodeType.Directory:return createFlatDirectory(decodeDirectoryLinks(f),c);case NodeType.HAMTShard:return createShardedDirectory(decodeDirectoryLinks(f),i||EMPTY_BUFFER$1,u.fanout,u.hashType,c);case NodeType.Symlink:return createSymlink(i,c);default:throw new TypeError(`Unsupported node type ${n.Type}`)}},decodeMtime=t=>t==null?void 0:{mtime:{secs:t.Seconds,nsecs:t.FractionalNanoseconds||0}},decodeFileLinks=(t,e)=>{const n=[],r=t.length;let i=0;for(;i<r;)n.push({cid:e[i].Hash,dagByteLength:e[i].Tsize||0,contentByteLength:t[i]});return n},decodeDirectoryLinks=t=>t.map(e=>({cid:e.Hash,name:e.Name||"",dagByteLength:e.Tsize||0})),cumulativeContentByteLength=t=>t.reduce((e,n)=>e+n.contentByteLength,0),cumulativeDagByteLength=(t,e)=>e.reduce((n,r)=>n+r.dagByteLength,t.byteLength),contentByteLength=t=>t.contentByteLength,encodeNamedLink=({name:t,dagByteLength:e,cid:n})=>({Name:t,Tsize:e,Hash:n}),encodeDirectoryMetadata=t=>encodeMetadata(t,DEFAULT_DIRECTORY_MODE),encodeMetadata=({mode:t,mtime:e},n=DEFAULT_FILE_MODE)=>({mode:t!=null?encodeMode(t,n):void 0,mtime:e!=null?encodeMTime(e):void 0}),decodeMetadata=t=>t==null?BLANK$2:{...t.mode==null?void 0:{mode:decodeMode(t.mode)},...t.mtime==null?void 0:{mtime:t.mtime}},encodeMTime=t=>t==null?void 0:t.nsecs!==0?{Seconds:t.secs,FractionalNanoseconds:t.nsecs}:{Seconds:t.secs},encodeMode=(t,e)=>{const n=t==null?void 0:decodeMode(t);return n===e||n==null?void 0:n},decodeMode=t=>t&4095|t&4294963200,matchFile=({content:t=EMPTY_BUFFER$1,parts:e=EMPTY$3,metadata:n=BLANK$2,...r})=>e.length===0?new SimpleFileView(t,n):t.byteLength===0?new AdvancedFileView(e,n):new ComplexFileView(t,e,n);class SimpleFileView{constructor(e,n){this.content=e,this.metadata=n,this.layout="simple",this.type=NodeType.File}get filesize(){return this.content.byteLength}encode(){return encodeSimpleFile(this.content,this.metadata)}}class AdvancedFileView{constructor(e,n){this.parts=e,this.metadata=n}get layout(){return"advanced"}get type(){return NodeType.File}get fileSize(){return cumulativeContentByteLength(this.parts)}get blockSizes(){return this.parts.map(contentByteLength)}encode(){return encodeAdvancedFile(this.parts,this.metadata)}}class ComplexFileView{constructor(e,n,r){this.content=e,this.parts=n,this.metadata=r}get layout(){return"complex"}get type(){return NodeType.File}get fileSize(){return this.content.byteLength+cumulativeContentByteLength(this.parts)}get blockSizes(){return this.parts.map(contentByteLength)}encode(){return encodeComplexFile(this.content,this.parts,this.metadata)}}const filesize=t=>{switch(t.type){case NodeType.Raw:case NodeType.Symlink:return t.content.byteLength;case NodeType.File:switch(t.layout){case"simple":return t.content.byteLength;case"advanced":return cumulativeContentByteLength(t.parts);case"complex":return t.content.byteLength+cumulativeContentByteLength(t.parts)}default:return 0}},UnixFS=Object.freeze(Object.defineProperty({__proto__:null,DEFAULT_DIRECTORY_MODE,DEFAULT_FILE_MODE,NodeType,code:code$1,createAdvancedFile,createComplexFile,createDirectoryShard,createEmptyFile,createFileChunk,createFileShard,createFlatDirectory,createRaw,createShardedDirectory,createSimpleFile,createSymlink,cumulativeContentByteLength,cumulativeDagByteLength,decode:decode$1,decodeMetadata,encode:encode$1,encodeAdvancedFile,encodeComplexFile,encodeDirectory,encodeDirectoryMetadata,encodeFile,encodeFileChunk,encodeFileShard,encodeHAMTShard,encodeLink,encodeMetadata,encodeMode,encodeRaw,encodeSimpleFile,encodeSymlink,filesize,matchFile,name:name$3},Symbol.toStringTag,{value:"Module"})),effect=function*(t){const e=yield*t;yield*send(e)};function*current(){return yield CURRENT}const suspend=function*(){yield SUSPEND},wait$1=function*(t){const e=yield*current();if(isAsync(t)){let n=!1,r;if(t.then(i=>{n=!1,r=i,enqueue(e)},i=>{n=!0,r=i,enqueue(e)}),yield*suspend(),n)throw r;return r}else return main(wake(e)),yield*suspend(),t};function*wake(t){enqueue(t)}const isAsync=t=>t!=null&&typeof t.then=="function",send=function*(t){yield t},listen=function*(t){const e=[];for(const n of Object.entries(t)){const[r,i]=n;i!==NONE&&e.push(yield*fork$1(tag(i,r)))}yield*group(e)},effects=t=>t.length>0?batch(t.map(effect)):NONE;function*batch(t){const e=[];for(const n of t)e.push(yield*fork$1(n));yield*group(e)}const tag=(t,e)=>t===NONE?NONE:t instanceof Tagger?new Tagger([...t.tags,e],t.source):new Tagger([e],t);class Tagger{constructor(e,n){this.tags=e,this.source=n,this.controller}[Symbol.iterator](){return this.controller||(this.controller=this.source[Symbol.iterator]()),this}box(e){if(e.done)return e;switch(e.value){case SUSPEND:case CURRENT:return e;default:{const n=e;let{value:r}=n;for(const i of this.tags)r=withTag(i,r);return n.value=r,n}}}next(e){return this.box(this.controller.next(e))}throw(e){return this.box(this.controller.throw(e))}return(e){return this.box(this.controller.return(e))}get[Symbol.toStringTag](){return"TaggedEffect"}}const none$1=()=>NONE,withTag=(t,e)=>({type:t,[t]:e}),CURRENT=Symbol("current"),SUSPEND=Symbol("suspend");class Group{static of(e){return e.group||MAIN}static enqueue(e,n){e.group=n,n.stack.active.push(e)}constructor(e,n=[],r=new Set,i=new Stack(n,r)){this.driver=e,this.parent=Group.of(e),this.stack=i,this.id=++ID}}class Main{constructor(){this.status=IDLE,this.stack=new Stack,this.id=0}}class Stack{constructor(e=[],n=new Set){this.active=e,this.idle=n}static size({active:e,idle:n}){return e.length+n.size}}const main=t=>enqueue(t[Symbol.iterator]()),enqueue=t=>{let e=Group.of(t);for(e.stack.active.push(t),e.stack.idle.delete(t);e.parent;){const{idle:n,active:r}=e.parent.stack;if(n.has(e.driver))n.delete(e.driver),r.push(e.driver);else break;e=e.parent}if(MAIN.status===IDLE)for(MAIN.status=ACTIVE;;)try{for(const n of step(MAIN));MAIN.status=IDLE;break}catch{MAIN.stack.active.shift()}},resume=t=>enqueue(t),step=function*(t){const{active:e}=t.stack;let n=e[0];for(t.stack.idle.delete(n);n;){let r=INIT;e:for(;!r.done&&n===e[0];){const i=r.value;switch(i){case SUSPEND:t.stack.idle.add(n);break e;case CURRENT:r=n.next(n);break;default:r=n.next(yield i);break}}e.shift(),n=e[0],t.stack.idle.delete(n)}},fork$1=(t,e)=>new Fork(t,e),exit=(t,e)=>conclude(t,{ok:!0,value:e}),abort=(t,e)=>conclude(t,{ok:!1,error:e});function*conclude(t,e){try{const n=t,r=e.ok?n.return(e.value):n.throw(e.error);if(!r.done)if(r.value===SUSPEND){const{idle:i}=Group.of(n).stack;i.add(n)}else enqueue(n)}catch{}}function*group(t){if(t.length===0)return;const e=yield*current(),n=new Group(e);let r=null;for(const i of t){const{result:o}=i;if(o){!o.ok&&!r&&(r=o);continue}move(i,n)}try{if(r)throw r.error;for(;yield*step(n),Stack.size(n.stack)>0;)yield*suspend()}catch(i){for(const o of n.stack.active)yield*abort(o,i);for(const o of n.stack.idle)yield*abort(o,i),enqueue(o);throw i}}const move=(t,e)=>{const n=Group.of(t);if(n!==e){const{active:r,idle:i}=n.stack,o=e.stack;if(t.group=e,i.has(t))i.delete(t),o.idle.add(t);else{const s=r.indexOf(t);s>=0&&(r.splice(s,1),o.active.push(t))}}};function*join(t){t.status===IDLE&&(yield*t),t.result||(yield*group([t]));const e=t.result;if(e.ok)return e.value;throw e.error}class Future{constructor(e){this.handler=e,this.result}get promise(){const{result:e}=this,n=e==null?new Promise((r,i)=>{this.handler.onsuccess=r,this.handler.onfailure=i}):e.ok?Promise.resolve(e.value):Promise.reject(e.error);return Object.defineProperty(this,"promise",{value:n}),n}then(e,n){return this.activate().promise.then(e,n)}catch(e){return this.activate().promise.catch(e)}finally(e){return this.activate().promise.finally(e)}activate(){return this}}class Fork extends Future{constructor(e,n=BLANK$1,r={},i=INIT){super(r),this.id=++ID,this.name=n.name||"",this.task=e,this.state=i,this.status=IDLE,this.result,this.handler=r,this.controller}*resume(){resume(this)}join(){return join(this)}abort(e){return abort(this,e)}exit(e){return exit(this,e)}get[Symbol.toStringTag](){return"Fork"}*[Symbol.iterator](){return this.activate()}activate(){return this.controller=this.task[Symbol.iterator](),this.status=ACTIVE,enqueue(this),this}panic(e){this.result={ok:!1,error:e},this.status=FINISHED;const{handler:n}=this;throw n.onfailure&&n.onfailure(e),e}step(e){if(this.state=e,e.done){this.result={ok:!0,value:e.value},this.status=FINISHED;const{handler:n}=this;n.onsuccess&&n.onsuccess(e.value)}return e}next(e){try{return this.step(this.controller.next(e))}catch(n){return this.panic(n)}}return(e){try{return this.step(this.controller.return(e))}catch(n){return this.panic(n)}}throw(e){try{return this.step(this.controller.throw(e))}catch(n){return this.panic(n)}}}const loop=function*(t,e){const n=yield*current(),r=new Group(n);for(Group.enqueue(t[Symbol.iterator](),r);;){for(const i of step(r))Group.enqueue(e(i)[Symbol.iterator](),r);if(Stack.size(r.stack)>0)yield*suspend();else break}};let ID=0;const IDLE="idle",ACTIVE="active",FINISHED="finished",INIT={done:!1,value:CURRENT},BLANK$1={},NONE=function*t(){}(),MAIN=new Main;function Indexed(){}Object.defineProperties(Indexed,{prototype:{value:new Proxy(Object.prototype,{get(t,e,n){return typeof e=="symbol"?Reflect.get(t,e,n):n.get(e)}})}});const empty=()=>new BufferView,slice=(t,e=0,n=t.byteLength)=>{const r=[],i=e<0?t.byteLength-e:e,o=n<0?t.byteLength-n:n;if(i===0&&o>=t.byteLength)return t;if(i>o||i>t.byteLength||o<=0)return empty();let s=0,l=0;for(const u of t.segments){const c=l+u.byteLength;if(s===0){if(o<=c){const f=u.subarray(i-l,o-l);r.push(f),s=f.byteLength;break}else if(i<c){const f=i===l?u:u.subarray(i-l);r.push(f),s=f.byteLength}}else if(o<=c){const f=o===c?u:u.subarray(0,o-l);r.push(f),s+=f.byteLength;break}else r.push(u),s+=u.byteLength;l=c}return new BufferView(r,t.byteOffset+i,s)},push=(t,e)=>e.byteLength>0?(t.segments.push(e),new BufferView(t.segments,t.byteOffset,t.byteLength+e.byteLength)):t,get=(t,e)=>{if(e<t.byteLength){let n=0;for(const r of t.segments){if(e<n+r.byteLength)return r[e-n];n+=r.byteLength}}},copyTo=(t,e,n)=>{let r=n;for(const i of t.segments)e.set(i,r),r+=i.byteLength;return e};function*iterate(t){for(const e of t.segments)yield*e}class BufferView extends Indexed{constructor(e=[],n=0,r=0){super(),this.segments=e,this.byteLength=r,this.length=r,this.byteOffset=n}[Symbol.iterator](){return iterate(this)}slice(e,n){return slice(this,e,n)}subarray(e,n){return slice(this,e,n)}push(e){return push(this,e)}get(e){return get(this,e)}copyTo(e,n){return copyTo(this,e,n)}}const panic=t=>{throw new Error(t)},unreachable=(t,e,...n)=>panic(String.raw(t,JSON.stringify(e),...n)),EMPTY_BUFFER=new Uint8Array(0),EMPTY$2=[],open$1=t=>({config:t,buffer:empty()}),write$3=(t,e)=>e.byteLength>0?split(t.config,t.buffer.push(e),!1):{...t,chunks:EMPTY$2},close$5=t=>split(t.config,t.buffer,!0),split=(t,e,n)=>{const r=t.chunker,i=[];let o=0;for(const s of r.cut(r.context,e,n))if(s>0){const l=e.subarray(o,o+s);i.push(l),o+=s}return{config:t,chunks:i,buffer:e.subarray(o)}},mutable=()=>({mutable:!0,needs:{},nodes:{},links:{},linked:EMPTY$1}),addNodes=(t,e)=>{let n=patch(e,{});for(const r of t){const{ready:i,has:o,wants:s}=collect(r.children,n.links);s.length===0?n=patch(n,{links:assign(void 0,o),linked:[{id:r.id,links:i}]}):n=patch(n,{needs:assign(r.id,s),nodes:{[r.id]:{children:r.children,count:s.length}}})}return n},addLink=(t,e,n)=>{const r=n.needs[t],i=n.nodes[r];if(i!=null)if(i.count===1){const{ready:o,has:s}=collect(i.children,{...n.links,[t]:e});return patch(n,{needs:{[t]:void 0},links:assign(void 0,s),nodes:{[r]:void 0},linked:[{id:r,links:o}]})}else return patch(n,{needs:{[t]:void 0},links:{[t]:e},nodes:{[r]:{...i,count:i.count-1}}});else return patch(n,{links:{[t]:e}})},patch=(t,{needs:e,nodes:n,links:r,linked:i})=>{const o=t.mutable?t:{...t},s=t.mutable?BLANK:void 0;return e&&(o.needs=patchDict(t.needs,e,s)),n&&(o.nodes=patchDict(t.nodes,n,s)),r&&(o.links=patchDict(t.links,r,s)),o.linked=i?append(t.linked||EMPTY$1,i,EMPTY$1):t.linked||[],o},assign=(t,e)=>{const n={};for(const r of e)n[r]=t;return n},patchDict=(t,e,n=t)=>{const r=t===n?{...t}:t;for(const i of Object.entries(e)){const[o,s]=i;s==null?delete r[o]:r[o]=s}return r},append=(t,e,n=t)=>{if(t===n)return[...t,...e];for(const r of e)t.push(r);return t},collect=(t,e)=>{const n=[],r=[],i=[];for(const o of t){const s=e[o];s?(n.push(o),i.push(s)):r.push(o)}return{has:n,wants:r,ready:i}},EMPTY$1=Object.freeze([]),BLANK=Object.freeze({}),update=(t,e)=>{switch(t.type){case"write":return write$2(e,t.bytes);case"link":return link(e,t.link);case"block":return{state:e,effect:none$1()};case"close":return close$4(e);case"end":return{state:e,effect:none$1()};default:return unreachable`File Writer got unknown message ${t}`}},init$1=(t,e,n)=>({status:"open",metadata:e,config:n,writer:t,chunker:open$1({chunker:n.chunker}),layout:n.fileLayout.open(),nodeQueue:mutable()}),write$2=(t,e)=>{if(t.status==="open"){const{chunks:n,...r}=write$3(t.chunker,e),{nodes:i,leaves:o,layout:s}=t.config.fileLayout.write(t.layout,n),{linked:l,...u}=addNodes(i,t.nodeQueue),c=[...encodeLeaves(o,t.config),...encodeBranches(l,t.config)];return{state:{...t,chunker:r,layout:s,nodeQueue:u},effect:listen({link:effects(c)})}}else return panic("Unable to perform write on closed file")},link=(t,{id:e,link:n,block:r})=>{let{linked:i,...o}=addLink(e,n,t.nodeQueue);const s=encodeBranches(i,t.config),l=t.status==="closed"&&e===t.rootID?{...t,status:"linked",link:n,nodeQueue:o}:{...t,nodeQueue:o},u=t.status==="closed"&&e===t.rootID&&t.end?t.end.resume():none$1();return{state:l,effect:listen({link:effects(s),block:writeBlock(t.writer,r),end:u})}},close$4=t=>{if(t.status==="open"){const{chunks:e}=close$5(t.chunker),{layout:n,...r}=t.config.fileLayout.write(t.layout,e),{root:i,...o}=t.config.fileLayout.close(n,t.metadata),[s,l]=isLeafNode(i)?[[...r.nodes,...o.nodes],[...r.leaves,...o.leaves,i]]:[[...r.nodes,...o.nodes,i],[...r.leaves,...o.leaves]],{linked:u,...c}=addNodes(s,t.nodeQueue),f=[...encodeLeaves(l,t.config),...encodeBranches(u,t.config)],$=fork$1(suspend());return{state:{...t,chunker:null,layout:null,rootID:i.id,status:"closed",end:$,nodeQueue:c},effect:listen({link:effects(f),end:join($)})}}else return{state:t,effect:none$1()}},encodeLeaves=(t,e)=>t.map(n=>encodeLeaf(e,n,e.fileChunkEncoder)),encodeLeaf=function*({hasher:t,linker:e},{id:n,content:r},i){const o=i.encode(r?asUint8Array(r):EMPTY_BUFFER),s=yield*wait$1(t.digest(o)),l=e.createLink(i.code,s),u={cid:l,bytes:o},c={cid:l,contentByteLength:r?r.byteLength:0,dagByteLength:o.byteLength};return{id:n,block:u,link:c}},encodeBranches=(t,e)=>t.map(n=>encodeBranch(e,n)),encodeBranch=function*(t,{id:e,links:n},r){const i=t.fileEncoder.encode({type:NodeType.File,layout:"advanced",parts:n,metadata:r}),o=yield*wait$1(Promise.resolve(t.hasher.digest(i))),s=t.linker.createLink(t.fileEncoder.code,o),l={bytes:i,cid:s},u={cid:s,contentByteLength:cumulativeContentByteLength(n),dagByteLength:cumulativeDagByteLength(i,n)};return{id:e,block:l,link:u}},writeBlock=function*(t,e){(t.desiredSize||0)<=0&&(yield*wait$1(t.ready)),t.write(e)},asUint8Array=t=>t instanceof Uint8Array?t:t.copyTo(new Uint8Array(t.byteLength),0),isLeafNode=t=>t.children==null,name$2="fixed",context={maxChunkSize:262144},type="Stateless",withMaxChunkSize=t=>({type:"Stateless",context:{maxChunkSize:t},name:name$2,cut:cut$1}),cut$1=({maxChunkSize:t},{byteLength:e},n)=>{const r=e/t|0,i=new Array(r).fill(t),o=n?e-r*t:0;return o>0&&i.push(o),i},FixedSize=Object.freeze(Object.defineProperty({__proto__:null,context,cut:cut$1,name:name$2,type,withMaxChunkSize},Symbol.toStringTag,{value:"Module"}));function from({name:t,code:e,encode:n}){return new Hasher(t,e,n)}class Hasher{constructor(e,n,r){F(this,"name");F(this,"code");F(this,"encode");this.name=e,this.code=n,this.encode=r}digest(e){if(e instanceof Uint8Array){const n=this.encode(e);return n instanceof Uint8Array?create$7(this.code,n):n.then(r=>create$7(this.code,r))}else throw Error("Unknown type, must be binary type")}}function sha(t){return async e=>new Uint8Array(await crypto.subtle.digest(t,e))}const sha256=from({name:"sha2-256",code:18,encode:sha("SHA-256")});class Node{constructor(e,n,r){this.id=e,this.children=n,this.metadata=r}}const withWidth=t=>({open:()=>open({width:t}),write:write$1,close:close$3}),defaults$3={width:174},open=({width:t}=defaults$3)=>({width:t,head:null,leafIndex:[],nodeIndex:[],lastID:0}),write$1=(t,e)=>{if(e.length===0)return{layout:t,nodes:EMPTY,leaves:EMPTY};{let{lastID:n}=t;const[r,i]=t.head?[null,(e.unshift(t.head),e)]:e.length===1&&t.leafIndex.length===0?[e[0],EMPTY]:[null,e];if(i.length===0)return{layout:{...t,head:r},nodes:EMPTY,leaves:EMPTY};{const o=[...t.leafIndex],s=[];for(const l of i){const u={id:++n,content:l};s.push(u),o.push(u.id)}return o.length>t.width?flush({...t,leafIndex:o,head:r,lastID:n},s):{layout:{...t,head:r,leafIndex:o,lastID:n},leaves:s,nodes:EMPTY}}}},flush=(t,e=EMPTY,n=[],r=!1)=>{let{lastID:i}=t;const o=t.nodeIndex.map(c=>[...c]),s=[...t.leafIndex],{width:l}=t;for(;s.length>l||s.length>0&&r;){grow(o,1);const c=new Node(++i,s.splice(0,l));o[0].push(c.id),n.push(c)}let u=0;for(;u<o.length;){const c=o[u];for(u++;c.length>l||c.length>0&&r&&u<o.length;){const f=new Node(++i,c.splice(0,l));grow(o,u+1),o[u].push(f.id),n.push(f)}}return{layout:{...t,lastID:i,leafIndex:s,nodeIndex:o},leaves:e,nodes:n}},close$3=(t,e)=>{const n=t;if(t.head)return{root:{id:1,content:t.head,metadata:e},leaves:EMPTY,nodes:EMPTY};if(t.leafIndex.length===0)return{root:{id:1,metadata:e},leaves:EMPTY,nodes:EMPTY};{const{nodes:r,layout:i}=flush(n,EMPTY,[],!0),{nodeIndex:o}=i,s=o.length-1,l=o[s];if(l.length===1){const u=r[r.length-1];return r.length=r.length-1,{root:u,nodes:r,leaves:EMPTY}}else return{root:new Node(i.lastID+1,l,e),nodes:r,leaves:EMPTY}}},grow=(t,e)=>{for(;t.length<e;)t.push([]);return t},EMPTY=[],defaults$2=()=>({chunker:FixedSize,fileChunkEncoder:UnixFSLeaf,smallFileEncoder:UnixFSLeaf,fileEncoder:UnixFS,fileLayout:withWidth(174),hasher:sha256,linker:{createLink:CID.createV1}}),configure$2=t=>({...defaults$2(),...t}),UnixFSLeaf={code:code$1,name:name$3,encode:encodeFileChunk},create$4=({writer:t,metadata:e={},settings:n=defaults$2()})=>new FileWriterView(init$1(t,e,configure$2(n))),write=async(t,e)=>(await perform(t,send({type:"write",bytes:e})),t),close$2=async(t,{releaseLock:e=!1,closeWriter:n=!1}={})=>{await perform(t,send({type:"close"}));const{state:r}=t;if(r.status==="linked")return n?await t.state.writer.close():e&&t.state.writer.releaseLock(),r.link;panic(`Expected writer to be in 'linked' state after close, but it is in "${r.status}" instead`)},perform=(t,e)=>fork$1(loop(e,n=>{const{state:r,effect:i}=update(n,t.state);return t.state=r,i}));class FileWriterView{constructor(e){this.state=e}get writer(){return this.state.writer}get settings(){return this.state.config}write(e){return write(this,e)}close(e){return close$2(this,e)}}const defaults$1=defaults$2,create$3=({writer:t,settings:e=defaults$1(),metadata:n={}})=>new DirectoryWriter({writer:t,metadata:n,settings:e,entries:new Map,closed:!1}),set=(t,e,n,{overwrite:r=!1}={})=>{const i=asWritable(t.state);if(e.includes("/"))throw new Error(`Directory entry name "${e}" contains forbidden "/" character`);if(!r&&i.entries.has(e))throw new Error(`Directory already contains entry with name "${e}"`);return i.entries.set(e,n),t},remove=(t,e)=>(asWritable(t.state).entries.delete(e),t),asWritable=t=>{if(t.closed)throw new Error("Can not change written directory, but you can .fork() and make changes to it");return t},close$1=async(t,{closeWriter:e=!1,releaseLock:n=!1}={})=>{const{writer:r,settings:i,metadata:o}=asWritable(t.state);t.state.closed=!0;const s=[...links(t)],l=createFlatDirectory(s,o),u=encodeDirectory(l),c=await i.hasher.digest(u),f=i.linker.createLink(code$1,c);return(r.desiredSize||0)<=0&&await r.ready,r.write({cid:f,bytes:u}),e?await r.close():n&&r.releaseLock(),{cid:f,dagByteLength:cumulativeDagByteLength(u,s)}},links=function*({state:t}){for(const[e,{dagByteLength:n,cid:r}]of t.entries)yield{name:e,dagByteLength:n,cid:r}},fork=({state:t},{writer:e=t.writer,metadata:n=t.metadata,settings:r=t.settings}={})=>new DirectoryWriter({writer:e,metadata:n,settings:r,entries:new Map(t.entries.entries()),closed:!1});class DirectoryWriter{constructor(e){this.state=e}get writer(){return this.state.writer}get settings(){return this.state.settings}links(){return links(this)}set(e,n,r){return set(this,e,n,r)}remove(e){return remove(this,e)}fork(e){return fork(this,e)}close(e){return close$1(this,e)}entries(){return this.state.entries.entries()}has(e){return this.state.entries.has(e)}get size(){return this.state.entries.size}}var murmurHash3js={exports:{}};(function(t,e){(function(n,r){var i={version:"3.0.0",x86:{},x64:{},inputValidation:!0};function o(a){if(!Array.isArray(a)&&!ArrayBuffer.isView(a))return!1;for(var h=0;h<a.length;h++)if(!Number.isInteger(a[h])||a[h]<0||a[h]>255)return!1;return!0}function s(a,h){return(a&65535)*h+(((a>>>16)*h&65535)<<16)}function l(a,h){return a<<h|a>>>32-h}function u(a){return a^=a>>>16,a=s(a,2246822507),a^=a>>>13,a=s(a,3266489909),a^=a>>>16,a}function c(a,h){a=[a[0]>>>16,a[0]&65535,a[1]>>>16,a[1]&65535],h=[h[0]>>>16,h[0]&65535,h[1]>>>16,h[1]&65535];var y=[0,0,0,0];return y[3]+=a[3]+h[3],y[2]+=y[3]>>>16,y[3]&=65535,y[2]+=a[2]+h[2],y[1]+=y[2]>>>16,y[2]&=65535,y[1]+=a[1]+h[1],y[0]+=y[1]>>>16,y[1]&=65535,y[0]+=a[0]+h[0],y[0]&=65535,[y[0]<<16|y[1],y[2]<<16|y[3]]}function f(a,h){a=[a[0]>>>16,a[0]&65535,a[1]>>>16,a[1]&65535],h=[h[0]>>>16,h[0]&65535,h[1]>>>16,h[1]&65535];var y=[0,0,0,0];return y[3]+=a[3]*h[3],y[2]+=y[3]>>>16,y[3]&=65535,y[2]+=a[2]*h[3],y[1]+=y[2]>>>16,y[2]&=65535,y[2]+=a[3]*h[2],y[1]+=y[2]>>>16,y[2]&=65535,y[1]+=a[1]*h[3],y[0]+=y[1]>>>16,y[1]&=65535,y[1]+=a[2]*h[2],y[0]+=y[1]>>>16,y[1]&=65535,y[1]+=a[3]*h[1],y[0]+=y[1]>>>16,y[1]&=65535,y[0]+=a[0]*h[3]+a[1]*h[2]+a[2]*h[1]+a[3]*h[0],y[0]&=65535,[y[0]<<16|y[1],y[2]<<16|y[3]]}function $(a,h){return h%=64,h===32?[a[1],a[0]]:h<32?[a[0]<<h|a[1]>>>32-h,a[1]<<h|a[0]>>>32-h]:(h-=32,[a[1]<<h|a[0]>>>32-h,a[0]<<h|a[1]>>>32-h])}function g(a,h){return h%=64,h===0?a:h<32?[a[0]<<h|a[1]>>>32-h,a[1]<<h]:[a[1]<<h-32,0]}function _(a,h){return[a[0]^h[0],a[1]^h[1]]}function L(a){return a=_(a,[0,a[0]>>>1]),a=f(a,[4283543511,3981806797]),a=_(a,[0,a[0]>>>1]),a=f(a,[3301882366,444984403]),a=_(a,[0,a[0]>>>1]),a}i.x86.hash32=function(a,h){if(i.inputValidation&&!o(a))return r;h=h||0;for(var y=a.length%4,B=a.length-y,w=h,d=0,p=3432918353,m=461845907,v=0;v<B;v=v+4)d=a[v]|a[v+1]<<8|a[v+2]<<16|a[v+3]<<24,d=s(d,p),d=l(d,15),d=s(d,m),w^=d,w=l(w,13),w=s(w,5)+3864292196;switch(d=0,y){case 3:d^=a[v+2]<<16;case 2:d^=a[v+1]<<8;case 1:d^=a[v],d=s(d,p),d=l(d,15),d=s(d,m),w^=d}return w^=a.length,w=u(w),w>>>0},i.x86.hash128=function(a,h){if(i.inputValidation&&!o(a))return r;h=h||0;for(var y=a.length%16,B=a.length-y,w=h,d=h,p=h,m=h,v=0,E=0,b=0,S=0,x=597399067,T=2869860233,A=951274213,N=2716044179,k=0;k<B;k=k+16)v=a[k]|a[k+1]<<8|a[k+2]<<16|a[k+3]<<24,E=a[k+4]|a[k+5]<<8|a[k+6]<<16|a[k+7]<<24,b=a[k+8]|a[k+9]<<8|a[k+10]<<16|a[k+11]<<24,S=a[k+12]|a[k+13]<<8|a[k+14]<<16|a[k+15]<<24,v=s(v,x),v=l(v,15),v=s(v,T),w^=v,w=l(w,19),w+=d,w=s(w,5)+1444728091,E=s(E,T),E=l(E,16),E=s(E,A),d^=E,d=l(d,17),d+=p,d=s(d,5)+197830471,b=s(b,A),b=l(b,17),b=s(b,N),p^=b,p=l(p,15),p+=m,p=s(p,5)+2530024501,S=s(S,N),S=l(S,18),S=s(S,x),m^=S,m=l(m,13),m+=w,m=s(m,5)+850148119;switch(v=0,E=0,b=0,S=0,y){case 15:S^=a[k+14]<<16;case 14:S^=a[k+13]<<8;case 13:S^=a[k+12],S=s(S,N),S=l(S,18),S=s(S,x),m^=S;case 12:b^=a[k+11]<<24;case 11:b^=a[k+10]<<16;case 10:b^=a[k+9]<<8;case 9:b^=a[k+8],b=s(b,A),b=l(b,17),b=s(b,N),p^=b;case 8:E^=a[k+7]<<24;case 7:E^=a[k+6]<<16;case 6:E^=a[k+5]<<8;case 5:E^=a[k+4],E=s(E,T),E=l(E,16),E=s(E,A),d^=E;case 4:v^=a[k+3]<<24;case 3:v^=a[k+2]<<16;case 2:v^=a[k+1]<<8;case 1:v^=a[k],v=s(v,x),v=l(v,15),v=s(v,T),w^=v}return w^=a.length,d^=a.length,p^=a.length,m^=a.length,w+=d,w+=p,w+=m,d+=w,p+=w,m+=w,w=u(w),d=u(d),p=u(p),m=u(m),w+=d,w+=p,w+=m,d+=w,p+=w,m+=w,("00000000"+(w>>>0).toString(16)).slice(-8)+("00000000"+(d>>>0).toString(16)).slice(-8)+("00000000"+(p>>>0).toString(16)).slice(-8)+("00000000"+(m>>>0).toString(16)).slice(-8)},i.x64.hash128=function(a,h){if(i.inputValidation&&!o(a))return r;h=h||0;for(var y=a.length%16,B=a.length-y,w=[0,h],d=[0,h],p=[0,0],m=[0,0],v=[2277735313,289559509],E=[1291169091,658871167],b=0;b<B;b=b+16)p=[a[b+4]|a[b+5]<<8|a[b+6]<<16|a[b+7]<<24,a[b]|a[b+1]<<8|a[b+2]<<16|a[b+3]<<24],m=[a[b+12]|a[b+13]<<8|a[b+14]<<16|a[b+15]<<24,a[b+8]|a[b+9]<<8|a[b+10]<<16|a[b+11]<<24],p=f(p,v),p=$(p,31),p=f(p,E),w=_(w,p),w=$(w,27),w=c(w,d),w=c(f(w,[0,5]),[0,1390208809]),m=f(m,E),m=$(m,33),m=f(m,v),d=_(d,m),d=$(d,31),d=c(d,w),d=c(f(d,[0,5]),[0,944331445]);switch(p=[0,0],m=[0,0],y){case 15:m=_(m,g([0,a[b+14]],48));case 14:m=_(m,g([0,a[b+13]],40));case 13:m=_(m,g([0,a[b+12]],32));case 12:m=_(m,g([0,a[b+11]],24));case 11:m=_(m,g([0,a[b+10]],16));case 10:m=_(m,g([0,a[b+9]],8));case 9:m=_(m,[0,a[b+8]]),m=f(m,E),m=$(m,33),m=f(m,v),d=_(d,m);case 8:p=_(p,g([0,a[b+7]],56));case 7:p=_(p,g([0,a[b+6]],48));case 6:p=_(p,g([0,a[b+5]],40));case 5:p=_(p,g([0,a[b+4]],32));case 4:p=_(p,g([0,a[b+3]],24));case 3:p=_(p,g([0,a[b+2]],16));case 2:p=_(p,g([0,a[b+1]],8));case 1:p=_(p,[0,a[b]]),p=f(p,v),p=$(p,31),p=f(p,E),w=_(w,p)}return w=_(w,[0,a.length]),d=_(d,[0,a.length]),w=c(w,d),d=c(d,w),w=L(w),d=L(d),w=c(w,d),d=c(d,w),("00000000"+(w[0]>>>0).toString(16)).slice(-8)+("00000000"+(w[1]>>>0).toString(16)).slice(-8)+("00000000"+(d[0]>>>0).toString(16)).slice(-8)+("00000000"+(d[1]>>>0).toString(16)).slice(-8)},t.exports&&(e=t.exports=i),e.murmurHash3=i})()})(murmurHash3js,murmurHash3js.exports);var murmurHash3jsExports=murmurHash3js.exports,murmurhash3jsRevisited=murmurHash3jsExports;const mur=getDefaultExportFromCjs(murmurhash3jsRevisited);new TextEncoder;mur.x64.hash126;const murmur364=from({name:"murmur3-x64-64",code:34,encode:t=>fromHex(mur.x64.hash128(t)).subarray(0,8)});new TextEncoder;const toInt=(t,e,n)=>{let r=e/8|0,i=e%8,o=n,s=0;for(;o>0&&r<t.byteLength;){const l=t[r],u=8-i,c=u<o?u:o,f=8-i-c,g=(255>>i&l)>>f;s=(s<<c)+g,o-=c,r++,i=0}return s},utf8=new TextEncoder,hash64=t=>murmur364.encode(t),configure$1=({bitWidth:t=8,hash:e=hash64})=>{const n=e(new Uint8Array).byteLength,r={bitWidth:t,hash:e,hashSize:n};return{at:(s,l)=>read(s,l,r),from:s=>utf8.encode(s),size:1/0}},read=(t,e=0,{bitWidth:n=8,hash:r,hashSize:i})=>{const o=i*8;let s=0,l=n,u=n*e;for(;l>0;){const c=u/o>>0,f=r(c===0?t:appendByte(t,c)),$=o<=u?u%o:u,g=o-$,_=g<l?g:l;s=(s<<_)+toInt(f,$,_),l-=_,u+=_}return s},appendByte=(t,e)=>{const n=new Uint8Array(t.byteLength+1).fill(e,t.byteLength);return n.set(t),n},bitWidth=8;configure$1({bitWidth});const createWriter=({writable:t,settings:e=defaults$2()})=>new FileSystemWriter({writer:t.getWriter(),settings:e}),close=async(t,{releaseLock:e=!0,closeWriter:n=!0}={})=>(n?await t.writer.close():e&&t.writer.releaseLock(),t);class FileSystemWriter{constructor({writer:e,settings:n}){this.writer=e,this.settings=configure$2(n)}createFileWriter({settings:e=this.settings,metadata:n}={}){return create$4({writer:this.writer,settings:e,metadata:n})}createDirectoryWriter({settings:e=this.settings,metadata:n}={}){return create$3({writer:this.writer,settings:e,metadata:n})}close(e){return close(this,e)}}const bytecode=new Uint8Array([0,97,115,109,1,0,0,0,1,94,15,96,2,127,127,0,96,1,127,1,127,96,2,127,127,1,127,96,3,127,127,127,1,127,96,1,127,0,96,3,127,127,127,0,96,4,127,127,127,127,0,96,4,127,127,127,127,1,127,96,0,0,96,1,127,1,126,96,5,127,127,127,127,127,0,96,6,127,127,127,127,127,127,0,96,0,1,127,96,6,127,127,127,127,127,127,1,127,96,2,126,127,1,127,2,129,1,4,3,119,98,103,29,95,95,119,98,103,95,99,111,112,121,84,111,95,99,50,98,54,101,56,49,50,50,52,52,57,52,55,99,100,0,7,3,119,98,103,29,95,95,119,98,103,95,108,101,110,103,116,104,95,57,99,100,101,49,54,102,97,56,99,100,101,49,102,99,99,0,1,3,119,98,103,26,95,95,119,98,105,110,100,103,101,110,95,111,98,106,101,99,116,95,100,114,111,112,95,114,101,102,0,4,3,119,98,103,16,95,95,119,98,105,110,100,103,101,110,95,116,104,114,111,119,0,0,3,96,95,1,4,3,7,10,11,2,0,2,2,3,14,0,4,12,0,6,6,5,0,0,0,10,6,6,5,0,5,6,0,5,0,0,5,2,0,1,13,3,5,0,0,3,5,0,7,0,0,4,1,1,0,4,0,4,4,0,5,4,1,1,0,2,7,0,1,2,5,0,1,1,1,0,1,8,2,2,1,8,8,0,1,1,1,1,0,2,2,1,1,9,9,9,0,4,4,5,1,112,1,18,18,5,3,1,0,17,6,9,1,127,1,65,128,128,192,0,11,7,152,1,9,6,109,101,109,111,114,121,2,0,16,95,95,119,98,103,95,114,97,98,105,110,95,102,114,101,101,0,62,6,99,114,101,97,116,101,0,49,20,99,114,101,97,116,101,87,105,116,104,80,111,108,121,110,111,109,105,97,108,0,41,3,99,117,116,0,26,10,99,117,116,95,98,117,102,102,101,114,0,27,31,95,95,119,98,105,110,100,103,101,110,95,97,100,100,95,116,111,95,115,116,97,99,107,95,112,111,105,110,116,101,114,0,81,17,95,95,119,98,105,110,100,103,101,110,95,109,97,108,108,111,99,0,53,15,95,95,119,98,105,110,100,103,101,110,95,102,114,101,101,0,68,9,23,1,0,65,1,11,17,97,58,94,98,95,59,19,25,50,72,42,13,38,80,79,98,96,10,184,127,95,210,31,2,15,127,1,126,35,0,65,16,107,34,11,36,0,2,64,2,64,32,0,65,245,1,79,4,64,65,128,128,124,65,8,65,8,16,66,65,20,65,8,16,66,106,65,16,65,8,16,66,106,107,65,119,113,65,125,106,34,2,65,0,65,16,65,8,16,66,65,2,116,107,34,1,32,1,32,2,75,27,32,0,77,13,2,32,0,65,4,106,65,8,16,66,33,4,65,232,135,192,0,40,2,0,69,13,1,65,0,32,4,107,33,3,2,64,2,64,2,127,65,0,32,4,65,128,2,73,13,0,26,65,31,32,4,65,255,255,255,7,75,13,0,26,32,4,65,6,32,4,65,8,118,103,34,0,107,118,65,1,113,32,0,65,1,116,107,65,62,106,11,34,6,65,2,116,65,244,137,192,0,106,40,2,0,34,0,4,64,32,4,32,6,16,64,116,33,7,65,0,33,1,3,64,2,64,32,0,16,85,34,2,32,4,73,13,0,32,2,32,4,107,34,2,32,3,79,13,0,32,0,33,1,32,2,34,3,13,0,65,0,33,3,12,3,11,32,0,65,20,106,40,2,0,34,2,32,5,32,2,32,0,32,7,65,29,118,65,4,113,106,65,16,106,40,2,0,34,0,71,27,32,5,32,2,27,33,5,32,7,65,1,116,33,7,32,0,13,0,11,32,5,4,64,32,5,33,0,12,2,11,32,1,13,2,11,65,0,33,1,65,1,32,6,116,16,69,65,232,135,192,0,40,2,0,113,34,0,69,13,3,32,0,16,74,104,65,2,116,65,244,137,192,0,106,40,2,0,34,0,69,13,3,11,3,64,32,0,32,1,32,0,16,85,34,1,32,4,79,32,1,32,4,107,34,5,32,3,73,113,34,2,27,33,1,32,5,32,3,32,2,27,33,3,32,0,16,63,34,0,13,0,11,32,1,69,13,2,11,65,244,138,192,0,40,2,0,34,0,32,4,79,65,0,32,3,32,0,32,4,107,79,27,13,1,32,1,34,0,32,4,16,90,33,6,32,0,16,17,2,64,32,3,65,16,65,8,16,66,79,4,64,32,0,32,4,16,76,32,6,32,3,16,65,32,3,65,128,2,79,4,64,32,6,32,3,16,16,12,2,11,32,3,65,3,118,34,1,65,3,116,65,236,135,192,0,106,33,5,2,127,65,228,135,192,0,40,2,0,34,2,65,1,32,1,116,34,1,113,4,64,32,5,40,2,8,12,1,11,65,228,135,192,0,32,1,32,2,114,54,2,0,32,5,11,33,1,32,5,32,6,54,2,8,32,1,32,6,54,2,12,32,6,32,5,54,2,12,32,6,32,1,54,2,8,12,1,11,32,0,32,3,32,4,106,16,60,11,32,0,16,92,34,3,69,13,1,12,2,11,65,16,32,0,65,4,106,65,16,65,8,16,66,65,123,106,32,0,75,27,65,8,16,66,33,4,2,64,2,64,2,64,2,127,2,64,2,64,65,228,135,192,0,40,2,0,34,1,32,4,65,3,118,34,0,118,34,2,65,3,113,69,4,64,32,4,65,244,138,192,0,40,2,0,77,13,7,32,2,13,1,65,232,135,192,0,40,2,0,34,0,69,13,7,32,0,16,74,104,65,2,116,65,244,137,192,0,106,40,2,0,34,1,16,85,32,4,107,33,3,32,1,16,63,34,0,4,64,3,64,32,0,16,85,32,4,107,34,2,32,3,32,2,32,3,73,34,2,27,33,3,32,0,32,1,32,2,27,33,1,32,0,16,63,34,0,13,0,11,11,32,1,34,0,32,4,16,90,33,5,32,0,16,17,32,3,65,16,65,8,16,66,73,13,5,32,0,32,4,16,76,32,5,32,3,16,65,65,244,138,192,0,40,2,0,34,1,69,13,4,32,1,65,3,118,34,1,65,3,116,65,236,135,192,0,106,33,7,65,252,138,192,0,40,2,0,33,6,65,228,135,192,0,40,2,0,34,2,65,1,32,1,116,34,1,113,69,13,2,32,7,40,2,8,12,3,11,2,64,32,2,65,127,115,65,1,113,32,0,106,34,3,65,3,116,34,0,65,244,135,192,0,106,40,2,0,34,5,65,8,106,40,2,0,34,2,32,0,65,236,135,192,0,106,34,0,71,4,64,32,2,32,0,54,2,12,32,0,32,2,54,2,8,12,1,11,65,228,135,192,0,32,1,65,126,32,3,119,113,54,2,0,11,32,5,32,3,65,3,116,16,60,32,5,16,92,33,3,12,7,11,2,64,65,1,32,0,65,31,113,34,0,116,16,69,32,2,32,0,116,113,16,74,104,34,2,65,3,116,34,0,65,244,135,192,0,106,40,2,0,34,3,65,8,106,40,2,0,34,1,32,0,65,236,135,192,0,106,34,0,71,4,64,32,1,32,0,54,2,12,32,0,32,1,54,2,8,12,1,11,65,228,135,192,0,65,228,135,192,0,40,2,0,65,126,32,2,119,113,54,2,0,11,32,3,32,4,16,76,32,3,32,4,16,90,34,5,32,2,65,3,116,32,4,107,34,2,16,65,65,244,138,192,0,40,2,0,34,0,4,64,32,0,65,3,118,34,0,65,3,116,65,236,135,192,0,106,33,7,65,252,138,192,0,40,2,0,33,6,2,127,65,228,135,192,0,40,2,0,34,1,65,1,32,0,116,34,0,113,4,64,32,7,40,2,8,12,1,11,65,228,135,192,0,32,0,32,1,114,54,2,0,32,7,11,33,0,32,7,32,6,54,2,8,32,0,32,6,54,2,12,32,6,32,7,54,2,12,32,6,32,0,54,2,8,11,65,252,138,192,0,32,5,54,2,0,65,244,138,192,0,32,2,54,2,0,32,3,16,92,33,3,12,6,11,65,228,135,192,0,32,1,32,2,114,54,2,0,32,7,11,33,1,32,7,32,6,54,2,8,32,1,32,6,54,2,12,32,6,32,7,54,2,12,32,6,32,1,54,2,8,11,65,252,138,192,0,32,5,54,2,0,65,244,138,192,0,32,3,54,2,0,12,1,11,32,0,32,3,32,4,106,16,60,11,32,0,16,92,34,3,13,1,11,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,65,244,138,192,0,40,2,0,34,0,32,4,73,4,64,65,248,138,192,0,40,2,0,34,0,32,4,75,13,2,32,11,65,8,65,8,16,66,32,4,106,65,20,65,8,16,66,106,65,16,65,8,16,66,106,65,128,128,4,16,66,16,51,32,11,40,2,0,34,8,13,1,65,0,33,3,12,9,11,65,252,138,192,0,40,2,0,33,2,32,0,32,4,107,34,1,65,16,65,8,16,66,73,4,64,65,252,138,192,0,65,0,54,2,0,65,244,138,192,0,40,2,0,33,0,65,244,138,192,0,65,0,54,2,0,32,2,32,0,16,60,32,2,16,92,33,3,12,9,11,32,2,32,4,16,90,33,0,65,244,138,192,0,32,1,54,2,0,65,252,138,192,0,32,0,54,2,0,32,0,32,1,16,65,32,2,32,4,16,76,32,2,16,92,33,3,12,8,11,32,11,40,2,8,33,12,65,132,139,192,0,32,11,40,2,4,34,10,65,132,139,192,0,40,2,0,106,34,1,54,2,0,65,136,139,192,0,65,136,139,192,0,40,2,0,34,0,32,1,32,0,32,1,75,27,54,2,0,2,64,2,64,65,128,139,192,0,40,2,0,4,64,65,140,139,192,0,33,0,3,64,32,0,16,77,32,8,70,13,2,32,0,40,2,8,34,0,13,0,11,12,2,11,65,160,139,192,0,40,2,0,34,0,69,32,8,32,0,73,114,13,3,12,7,11,32,0,16,87,13,0,32,0,16,88,32,12,71,13,0,32,0,34,1,40,2,0,34,5,65,128,139,192,0,40,2,0,34,2,77,4,127,32,5,32,1,40,2,4,106,32,2,75,5,65,0,11,13,3,11,65,160,139,192,0,65,160,139,192,0,40,2,0,34,0,32,8,32,8,32,0,75,27,54,2,0,32,8,32,10,106,33,1,65,140,139,192,0,33,0,2,64,2,64,3,64,32,1,32,0,40,2,0,71,4,64,32,0,40,2,8,34,0,13,1,12,2,11,11,32,0,16,87,13,0,32,0,16,88,32,12,70,13,1,11,65,128,139,192,0,40,2,0,33,9,65,140,139,192,0,33,0,2,64,3,64,32,0,40,2,0,32,9,77,4,64,32,0,16,77,32,9,75,13,2,11,32,0,40,2,8,34,0,13,0,11,65,0,33,0,11,32,9,32,0,16,77,34,6,65,20,65,8,16,66,34,15,107,65,105,106,34,1,16,92,34,0,65,8,16,66,32,0,107,32,1,106,34,0,32,0,65,16,65,8,16,66,32,9,106,73,27,34,13,16,92,33,14,32,13,32,15,16,90,33,0,65,8,65,8,16,66,33,3,65,20,65,8,16,66,33,5,65,16,65,8,16,66,33,2,65,128,139,192,0,32,8,32,8,16,92,34,1,65,8,16,66,32,1,107,34,1,16,90,34,7,54,2,0,65,248,138,192,0,32,10,65,8,106,32,2,32,3,32,5,106,106,32,1,106,107,34,3,54,2,0,32,7,32,3,65,1,114,54,2,4,65,8,65,8,16,66,33,5,65,20,65,8,16,66,33,2,65,16,65,8,16,66,33,1,32,7,32,3,16,90,32,1,32,2,32,5,65,8,107,106,106,54,2,4,65,156,139,192,0,65,128,128,128,1,54,2,0,32,13,32,15,16,76,65,140,139,192,0,41,2,0,33,16,32,14,65,8,106,65,148,139,192,0,41,2,0,55,2,0,32,14,32,16,55,2,0,65,152,139,192,0,32,12,54,2,0,65,144,139,192,0,32,10,54,2,0,65,140,139,192,0,32,8,54,2,0,65,148,139,192,0,32,14,54,2,0,3,64,32,0,65,4,16,90,33,1,32,0,65,7,54,2,4,32,6,32,1,34,0,65,4,106,75,13,0,11,32,9,32,13,70,13,7,32,9,32,13,32,9,107,34,0,32,9,32,0,16,90,16,61,32,0,65,128,2,79,4,64,32,9,32,0,16,16,12,8,11,32,0,65,3,118,34,0,65,3,116,65,236,135,192,0,106,33,2,2,127,65,228,135,192,0,40,2,0,34,1,65,1,32,0,116,34,0,113,4,64,32,2,40,2,8,12,1,11,65,228,135,192,0,32,0,32,1,114,54,2,0,32,2,11,33,0,32,2,32,9,54,2,8,32,0,32,9,54,2,12,32,9,32,2,54,2,12,32,9,32,0,54,2,8,12,7,11,32,0,40,2,0,33,3,32,0,32,8,54,2,0,32,0,32,0,40,2,4,32,10,106,54,2,4,32,8,16,92,34,5,65,8,16,66,33,2,32,3,16,92,34,1,65,8,16,66,33,0,32,8,32,2,32,5,107,106,34,6,32,4,16,90,33,7,32,6,32,4,16,76,32,3,32,0,32,1,107,106,34,0,32,4,32,6,106,107,33,4,32,0,65,128,139,192,0,40,2,0,71,4,64,65,252,138,192,0,40,2,0,32,0,70,13,4,32,0,40,2,4,65,3,113,65,1,71,13,5,2,64,32,0,16,85,34,5,65,128,2,79,4,64,32,0,16,17,12,1,11,32,0,65,12,106,40,2,0,34,2,32,0,65,8,106,40,2,0,34,1,71,4,64,32,1,32,2,54,2,12,32,2,32,1,54,2,8,12,1,11,65,228,135,192,0,65,228,135,192,0,40,2,0,65,126,32,5,65,3,118,119,113,54,2,0,11,32,4,32,5,106,33,4,32,0,32,5,16,90,33,0,12,5,11,65,128,139,192,0,32,7,54,2,0,65,248,138,192,0,65,248,138,192,0,40,2,0,32,4,106,34,0,54,2,0,32,7,32,0,65,1,114,54,2,4,32,6,16,92,33,3,12,7,11,65,248,138,192,0,32,0,32,4,107,34,1,54,2,0,65,128,139,192,0,65,128,139,192,0,40,2,0,34,2,32,4,16,90,34,0,54,2,0,32,0,32,1,65,1,114,54,2,4,32,2,32,4,16,76,32,2,16,92,33,3,12,6,11,65,160,139,192,0,32,8,54,2,0,12,3,11,32,0,32,0,40,2,4,32,10,106,54,2,4,65,128,139,192,0,40,2,0,65,248,138,192,0,40,2,0,32,10,106,16,36,12,3,11,65,252,138,192,0,32,7,54,2,0,65,244,138,192,0,65,244,138,192,0,40,2,0,32,4,106,34,0,54,2,0,32,7,32,0,16,65,32,6,16,92,33,3,12,3,11,32,7,32,4,32,0,16,61,32,4,65,128,2,79,4,64,32,7,32,4,16,16,32,6,16,92,33,3,12,3,11,32,4,65,3,118,34,0,65,3,116,65,236,135,192,0,106,33,2,2,127,65,228,135,192,0,40,2,0,34,1,65,1,32,0,116,34,0,113,4,64,32,2,40,2,8,12,1,11,65,228,135,192,0,32,0,32,1,114,54,2,0,32,2,11,33,0,32,2,32,7,54,2,8,32,0,32,7,54,2,12,32,7,32,2,54,2,12,32,7,32,0,54,2,8,32,6,16,92,33,3,12,2,11,65,164,139,192,0,65,255,31,54,2,0,65,152,139,192,0,32,12,54,2,0,65,144,139,192,0,32,10,54,2,0,65,140,139,192,0,32,8,54,2,0,65,248,135,192,0,65,236,135,192,0,54,2,0,65,128,136,192,0,65,244,135,192,0,54,2,0,65,244,135,192,0,65,236,135,192,0,54,2,0,65,136,136,192,0,65,252,135,192,0,54,2,0,65,252,135,192,0,65,244,135,192,0,54,2,0,65,144,136,192,0,65,132,136,192,0,54,2,0,65,132,136,192,0,65,252,135,192,0,54,2,0,65,152,136,192,0,65,140,136,192,0,54,2,0,65,140,136,192,0,65,132,136,192,0,54,2,0,65,160,136,192,0,65,148,136,192,0,54,2,0,65,148,136,192,0,65,140,136,192,0,54,2,0,65,168,136,192,0,65,156,136,192,0,54,2,0,65,156,136,192,0,65,148,136,192,0,54,2,0,65,176,136,192,0,65,164,136,192,0,54,2,0,65,164,136,192,0,65,156,136,192,0,54,2,0,65,184,136,192,0,65,172,136,192,0,54,2,0,65,172,136,192,0,65,164,136,192,0,54,2,0,65,180,136,192,0,65,172,136,192,0,54,2,0,65,192,136,192,0,65,180,136,192,0,54,2,0,65,188,136,192,0,65,180,136,192,0,54,2,0,65,200,136,192,0,65,188,136,192,0,54,2,0,65,196,136,192,0,65,188,136,192,0,54,2,0,65,208,136,192,0,65,196,136,192,0,54,2,0,65,204,136,192,0,65,196,136,192,0,54,2,0,65,216,136,192,0,65,204,136,192,0,54,2,0,65,212,136,192,0,65,204,136,192,0,54,2,0,65,224,136,192,0,65,212,136,192,0,54,2,0,65,220,136,192,0,65,212,136,192,0,54,2,0,65,232,136,192,0,65,220,136,192,0,54,2,0,65,228,136,192,0,65,220,136,192,0,54,2,0,65,240,136,192,0,65,228,136,192,0,54,2,0,65,236,136,192,0,65,228,136,192,0,54,2,0,65,248,136,192,0,65,236,136,192,0,54,2,0,65,128,137,192,0,65,244,136,192,0,54,2,0,65,244,136,192,0,65,236,136,192,0,54,2,0,65,136,137,192,0,65,252,136,192,0,54,2,0,65,252,136,192,0,65,244,136,192,0,54,2,0,65,144,137,192,0,65,132,137,192,0,54,2,0,65,132,137,192,0,65,252,136,192,0,54,2,0,65,152,137,192,0,65,140,137,192,0,54,2,0,65,140,137,192,0,65,132,137,192,0,54,2,0,65,160,137,192,0,65,148,137,192,0,54,2,0,65,148,137,192,0,65,140,137,192,0,54,2,0,65,168,137,192,0,65,156,137,192,0,54,2,0,65,156,137,192,0,65,148,137,192,0,54,2,0,65,176,137,192,0,65,164,137,192,0,54,2,0,65,164,137,192,0,65,156,137,192,0,54,2,0,65,184,137,192,0,65,172,137,192,0,54,2,0,65,172,137,192,0,65,164,137,192,0,54,2,0,65,192,137,192,0,65,180,137,192,0,54,2,0,65,180,137,192,0,65,172,137,192,0,54,2,0,65,200,137,192,0,65,188,137,192,0,54,2,0,65,188,137,192,0,65,180,137,192,0,54,2,0,65,208,137,192,0,65,196,137,192,0,54,2,0,65,196,137,192,0,65,188,137,192,0,54,2,0,65,216,137,192,0,65,204,137,192,0,54,2,0,65,204,137,192,0,65,196,137,192,0,54,2,0,65,224,137,192,0,65,212,137,192,0,54,2,0,65,212,137,192,0,65,204,137,192,0,54,2,0,65,232,137,192,0,65,220,137,192,0,54,2,0,65,220,137,192,0,65,212,137,192,0,54,2,0,65,240,137,192,0,65,228,137,192,0,54,2,0,65,228,137,192,0,65,220,137,192,0,54,2,0,65,236,137,192,0,65,228,137,192,0,54,2,0,65,8,65,8,16,66,33,5,65,20,65,8,16,66,33,2,65,16,65,8,16,66,33,1,65,128,139,192,0,32,8,32,8,16,92,34,0,65,8,16,66,32,0,107,34,0,16,90,34,3,54,2,0,65,248,138,192,0,32,10,65,8,106,32,1,32,2,32,5,106,106,32,0,106,107,34,5,54,2,0,32,3,32,5,65,1,114,54,2,4,65,8,65,8,16,66,33,2,65,20,65,8,16,66,33,1,65,16,65,8,16,66,33,0,32,3,32,5,16,90,32,0,32,1,32,2,65,8,107,106,106,54,2,4,65,156,139,192,0,65,128,128,128,1,54,2,0,11,65,0,33,3,65,248,138,192,0,40,2,0,34,0,32,4,77,13,0,65,248,138,192,0,32,0,32,4,107,34,1,54,2,0,65,128,139,192,0,65,128,139,192,0,40,2,0,34,2,32,4,16,90,34,0,54,2,0,32,0,32,1,65,1,114,54,2,4,32,2,32,4,16,76,32,2,16,92,33,3,11,32,11,65,16,106,36,0,32,3,11,242,6,1,5,127,32,0,16,93,34,0,32,0,16,85,34,2,16,90,33,1,2,64,2,64,2,64,32,0,16,86,13,0,32,0,40,2,0,33,3,2,64,32,0,16,75,69,4,64,32,2,32,3,106,33,2,32,0,32,3,16,91,34,0,65,252,138,192,0,40,2,0,71,13,1,32,1,40,2,4,65,3,113,65,3,71,13,2,65,244,138,192,0,32,2,54,2,0,32,0,32,2,32,1,16,61,15,11,32,2,32,3,106,65,16,106,33,0,12,2,11,32,3,65,128,2,79,4,64,32,0,16,17,12,1,11,32,0,65,12,106,40,2,0,34,4,32,0,65,8,106,40,2,0,34,5,71,4,64,32,5,32,4,54,2,12,32,4,32,5,54,2,8,12,1,11,65,228,135,192,0,65,228,135,192,0,40,2,0,65,126,32,3,65,3,118,119,113,54,2,0,11,2,64,32,1,16,73,4,64,32,0,32,2,32,1,16,61,12,1,11,2,64,2,64,2,64,65,128,139,192,0,40,2,0,32,1,71,4,64,32,1,65,252,138,192,0,40,2,0,71,13,1,65,252,138,192,0,32,0,54,2,0,65,244,138,192,0,65,244,138,192,0,40,2,0,32,2,106,34,1,54,2,0,32,0,32,1,16,65,15,11,65,128,139,192,0,32,0,54,2,0,65,248,138,192,0,65,248,138,192,0,40,2,0,32,2,106,34,1,54,2,0,32,0,32,1,65,1,114,54,2,4,32,0,65,252,138,192,0,40,2,0,70,13,1,12,2,11,32,1,16,85,34,3,32,2,106,33,2,2,64,32,3,65,128,2,79,4,64,32,1,16,17,12,1,11,32,1,65,12,106,40,2,0,34,4,32,1,65,8,106,40,2,0,34,1,71,4,64,32,1,32,4,54,2,12,32,4,32,1,54,2,8,12,1,11,65,228,135,192,0,65,228,135,192,0,40,2,0,65,126,32,3,65,3,118,119,113,54,2,0,11,32,0,32,2,16,65,32,0,65,252,138,192,0,40,2,0,71,13,2,65,244,138,192,0,32,2,54,2,0,12,3,11,65,244,138,192,0,65,0,54,2,0,65,252,138,192,0,65,0,54,2,0,11,65,156,139,192,0,40,2,0,32,1,79,13,1,65,128,128,124,65,8,65,8,16,66,65,20,65,8,16,66,106,65,16,65,8,16,66,106,107,65,119,113,65,125,106,34,0,65,0,65,16,65,8,16,66,65,2,116,107,34,1,32,1,32,0,75,27,69,13,1,65,128,139,192,0,40,2,0,69,13,1,65,8,65,8,16,66,33,0,65,20,65,8,16,66,33,1,65,16,65,8,16,66,33,2,65,0,2,64,65,248,138,192,0,40,2,0,34,4,32,2,32,1,32,0,65,8,107,106,106,34,2,77,13,0,65,128,139,192,0,40,2,0,33,1,65,140,139,192,0,33,0,2,64,3,64,32,0,40,2,0,32,1,77,4,64,32,0,16,77,32,1,75,13,2,11,32,0,40,2,8,34,0,13,0,11,65,0,33,0,11,32,0,16,87,13,0,32,0,65,12,106,40,2,0,26,12,0,11,65,0,16,18,107,71,13,1,65,248,138,192,0,40,2,0,65,156,139,192,0,40,2,0,77,13,1,65,156,139,192,0,65,127,54,2,0,15,11,32,2,65,128,2,73,13,1,32,0,32,2,16,16,65,164,139,192,0,65,164,139,192,0,40,2,0,65,127,106,34,0,54,2,0,32,0,13,0,16,18,26,15,11,15,11,32,2,65,3,118,34,3,65,3,116,65,236,135,192,0,106,33,1,2,127,65,228,135,192,0,40,2,0,34,2,65,1,32,3,116,34,3,113,4,64,32,1,40,2,8,12,1,11,65,228,135,192,0,32,2,32,3,114,54,2,0,32,1,11,33,3,32,1,32,0,54,2,8,32,3,32,0,54,2,12,32,0,32,1,54,2,12,32,0,32,3,54,2,8,11,185,5,1,8,127,65,43,65,128,128,196,0,32,0,40,2,0,34,5,65,1,113,34,3,27,33,6,32,2,32,3,106,33,4,65,148,133,192,0,65,0,32,5,65,4,113,27,33,7,65,1,33,3,2,64,2,64,32,0,40,2,8,65,1,71,4,64,32,0,32,6,32,7,16,46,13,1,12,2,11,2,64,2,64,2,64,2,64,32,0,65,12,106,40,2,0,34,8,32,4,75,4,64,32,5,65,8,113,13,4,65,0,33,3,32,8,32,4,107,34,4,33,5,65,1,32,0,45,0,32,34,8,32,8,65,3,70,27,65,3,113,65,1,107,14,2,1,2,3,11,32,0,32,6,32,7,16,46,13,4,12,5,11,65,0,33,5,32,4,33,3,12,1,11,32,4,65,1,118,33,3,32,4,65,1,106,65,1,118,33,5,11,32,3,65,1,106,33,3,32,0,65,28,106,40,2,0,33,8,32,0,40,2,4,33,4,32,0,40,2,24,33,9,2,64,3,64,32,3,65,127,106,34,3,69,13,1,32,9,32,4,32,8,40,2,16,17,2,0,69,13,0,11,65,1,15,11,65,1,33,3,32,4,65,128,128,196,0,70,13,1,32,0,32,6,32,7,16,46,13,1,32,0,40,2,24,32,1,32,2,32,0,40,2,28,40,2,12,17,3,0,13,1,32,0,40,2,28,33,1,32,0,40,2,24,33,0,65,0,33,3,2,127,3,64,32,5,32,3,32,5,70,13,1,26,32,3,65,1,106,33,3,32,0,32,4,32,1,40,2,16,17,2,0,69,13,0,11,32,3,65,127,106,11,32,5,73,33,3,12,1,11,32,0,40,2,4,33,9,32,0,65,48,54,2,4,32,0,45,0,32,33,10,32,0,65,1,58,0,32,32,0,32,6,32,7,16,46,13,0,65,0,33,3,32,8,32,4,107,34,4,33,5,2,64,2,64,2,64,65,1,32,0,45,0,32,34,6,32,6,65,3,70,27,65,3,113,65,1,107,14,2,0,1,2,11,65,0,33,5,32,4,33,3,12,1,11,32,4,65,1,118,33,3,32,4,65,1,106,65,1,118,33,5,11,32,3,65,1,106,33,3,32,0,65,28,106,40,2,0,33,6,32,0,40,2,4,33,4,32,0,40,2,24,33,7,2,64,3,64,32,3,65,127,106,34,3,69,13,1,32,7,32,4,32,6,40,2,16,17,2,0,69,13,0,11,65,1,15,11,65,1,33,3,32,4,65,128,128,196,0,70,13,0,32,0,40,2,24,32,1,32,2,32,0,40,2,28,40,2,12,17,3,0,13,0,32,0,40,2,28,33,2,32,0,40,2,24,33,3,65,0,33,1,2,64,3,64,32,1,32,5,70,13,1,32,1,65,1,106,33,1,32,3,32,4,32,2,40,2,16,17,2,0,69,13,0,11,65,1,33,3,32,1,65,127,106,32,5,73,13,1,11,32,0,32,10,58,0,32,32,0,32,9,54,2,4,65,0,15,11,32,3,15,11,32,0,40,2,24,32,1,32,2,32,0,65,28,106,40,2,0,40,2,12,17,3,0,11,220,6,1,6,127,2,64,2,64,2,64,32,2,65,9,79,4,64,32,3,32,2,16,12,34,2,13,1,65,0,15,11,65,0,33,2,65,128,128,124,65,8,65,8,16,66,65,20,65,8,16,66,106,65,16,65,8,16,66,106,107,65,119,113,65,125,106,34,1,65,0,65,16,65,8,16,66,65,2,116,107,34,5,32,5,32,1,75,27,32,3,77,13,1,65,16,32,3,65,4,106,65,16,65,8,16,66,65,123,106,32,3,75,27,65,8,16,66,33,5,32,0,16,93,34,1,32,1,16,85,34,6,16,90,33,4,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,1,16,75,69,4,64,32,6,32,5,79,13,1,32,4,65,128,139,192,0,40,2,0,70,13,2,32,4,65,252,138,192,0,40,2,0,70,13,3,32,4,16,73,13,7,32,4,16,85,34,7,32,6,106,34,8,32,5,73,13,7,32,8,32,5,107,33,6,32,7,65,128,2,73,13,4,32,4,16,17,12,5,11,32,1,16,85,33,4,32,5,65,128,2,73,13,6,32,4,32,5,65,4,106,79,65,0,32,4,32,5,107,65,129,128,8,73,27,13,5,32,1,40,2,0,34,6,32,4,106,65,16,106,33,7,32,5,65,31,106,65,128,128,4,16,66,33,4,65,0,34,5,69,13,6,32,5,32,6,106,34,1,32,4,32,6,107,34,0,65,112,106,34,2,54,2,4,32,1,32,2,16,90,65,7,54,2,4,32,1,32,0,65,116,106,16,90,65,0,54,2,4,65,132,139,192,0,65,132,139,192,0,40,2,0,32,4,32,7,107,106,34,0,54,2,0,65,160,139,192,0,65,160,139,192,0,40,2,0,34,2,32,5,32,5,32,2,75,27,54,2,0,65,136,139,192,0,65,136,139,192,0,40,2,0,34,2,32,0,32,2,32,0,75,27,54,2,0,12,9,11,32,6,32,5,107,34,4,65,16,65,8,16,66,73,13,4,32,1,32,5,16,90,33,6,32,1,32,5,16,55,32,6,32,4,16,55,32,6,32,4,16,11,12,4,11,65,248,138,192,0,40,2,0,32,6,106,34,6,32,5,77,13,4,32,1,32,5,16,90,33,4,32,1,32,5,16,55,32,4,32,6,32,5,107,34,5,65,1,114,54,2,4,65,248,138,192,0,32,5,54,2,0,65,128,139,192,0,32,4,54,2,0,12,3,11,65,244,138,192,0,40,2,0,32,6,106,34,6,32,5,73,13,3,2,64,32,6,32,5,107,34,4,65,16,65,8,16,66,73,4,64,32,1,32,6,16,55,65,0,33,4,65,0,33,6,12,1,11,32,1,32,5,16,90,34,6,32,4,16,90,33,7,32,1,32,5,16,55,32,6,32,4,16,65,32,7,32,7,40,2,4,65,126,113,54,2,4,11,65,252,138,192,0,32,6,54,2,0,65,244,138,192,0,32,4,54,2,0,12,2,11,32,4,65,12,106,40,2,0,34,9,32,4,65,8,106,40,2,0,34,4,71,4,64,32,4,32,9,54,2,12,32,9,32,4,54,2,8,12,1,11,65,228,135,192,0,65,228,135,192,0,40,2,0,65,126,32,7,65,3,118,119,113,54,2,0,11,32,6,65,16,65,8,16,66,79,4,64,32,1,32,5,16,90,33,4,32,1,32,5,16,55,32,4,32,6,16,55,32,4,32,6,16,11,12,1,11,32,1,32,8,16,55,11,32,1,13,3,11,32,3,16,4,34,5,69,13,1,32,5,32,0,32,3,32,1,16,85,65,120,65,124,32,1,16,75,27,106,34,1,32,1,32,3,75,27,16,14,32,0,16,5,15,11,32,2,32,0,32,3,32,1,32,1,32,3,75,27,16,14,26,32,0,16,5,11,32,2,15,11,32,1,16,75,26,32,1,16,92,11,135,6,2,18,127,7,126,35,0,65,16,107,34,5,36,0,32,5,66,0,55,2,4,32,5,65,136,129,192,0,40,2,0,54,2,0,32,1,53,2,164,32,33,23,32,1,40,2,160,32,33,11,32,1,65,16,106,41,3,0,33,28,32,1,41,3,144,32,33,24,32,1,41,3,0,33,25,32,1,41,3,8,33,29,32,1,40,2,168,32,33,15,32,1,41,3,136,32,33,26,32,1,40,2,152,32,33,17,2,64,65,0,32,1,40,2,156,32,34,16,32,3,77,34,7,69,32,4,27,13,0,32,23,66,63,131,33,27,32,16,32,3,32,7,27,33,14,32,2,32,11,107,33,18,65,0,32,11,107,33,19,32,2,32,15,106,33,20,32,11,65,1,106,65,2,73,33,21,3,64,2,64,2,64,32,10,32,17,106,32,3,73,4,64,32,10,32,15,106,33,6,32,21,69,13,1,32,26,33,23,12,2,11,32,4,69,32,3,32,10,70,114,13,3,32,5,40,2,4,32,8,70,4,64,32,5,32,8,16,44,32,5,40,2,8,33,8,11,32,5,40,2,0,32,8,65,2,116,106,32,3,32,10,107,54,2,0,32,5,32,5,40,2,8,65,1,106,54,2,8,12,3,11,32,10,32,20,106,33,12,32,6,32,11,106,33,13,32,3,32,6,32,3,32,6,75,27,34,22,32,6,107,33,9,32,11,33,7,32,26,33,23,2,64,2,64,3,64,32,9,69,13,2,32,28,32,29,32,7,65,1,70,27,32,23,133,34,23,32,27,136,167,34,6,65,128,2,79,13,1,32,1,32,6,65,3,116,106,65,136,16,106,41,3,0,32,12,49,0,0,32,23,66,8,134,132,133,33,23,32,9,65,127,106,33,9,32,12,65,1,106,33,12,32,7,65,127,106,34,7,13,0,11,32,13,33,6,12,2,11,32,6,65,128,2,65,200,128,192,0,16,37,0,11,32,22,32,3,65,184,128,192,0,16,37,0,11,2,64,2,64,32,6,32,14,79,13,0,32,6,33,9,32,23,32,25,131,32,24,81,13,0,2,64,2,64,3,64,32,9,32,19,106,32,3,79,13,1,32,9,32,3,79,13,2,32,1,32,9,32,18,106,45,0,0,65,3,116,106,65,8,106,41,3,0,32,23,133,34,23,32,27,136,167,34,13,65,128,2,73,4,64,32,9,65,1,106,34,7,32,14,79,13,5,32,2,32,9,106,33,12,32,7,33,9,32,1,32,13,65,3,116,106,65,136,16,106,41,3,0,32,12,49,0,0,32,23,66,8,134,132,133,34,23,32,25,131,32,24,81,13,5,12,1,11,11,32,13,65,128,2,65,248,128,192,0,16,37,0,11,32,9,32,11,107,32,3,65,216,128,192,0,16,37,0,11,32,3,32,6,32,3,32,6,75,27,32,3,65,232,128,192,0,16,37,0,11,32,6,33,7,11,32,5,40,2,4,32,8,70,4,64,32,5,32,8,16,44,32,5,40,2,8,33,8,11,32,5,40,2,0,32,8,65,2,116,106,32,7,32,10,107,54,2,0,32,5,32,5,40,2,8,65,1,106,34,8,54,2,8,32,7,32,16,106,34,6,32,3,32,6,32,3,77,34,6,27,33,14,32,7,33,10,32,6,13,0,32,4,13,0,11,11,32,0,32,5,41,3,0,55,2,0,32,0,65,8,106,32,5,65,8,106,40,2,0,54,2,0,32,5,65,16,106,36,0,11,223,4,2,4,127,7,126,35,0,65,160,32,107,34,6,36,0,32,6,65,16,106,65,128,16,16,24,32,5,65,127,106,33,8,32,1,41,3,0,34,14,121,34,13,167,33,1,65,1,33,9,2,64,3,64,32,11,33,10,32,1,32,11,121,34,12,167,79,4,64,3,64,32,1,32,14,32,13,32,12,125,134,32,10,133,34,10,121,34,12,167,79,13,0,11,11,32,8,4,64,65,0,33,7,3,64,32,7,65,1,106,33,7,32,1,32,10,66,8,134,34,10,121,34,12,167,79,4,64,3,64,32,1,32,14,32,13,32,12,125,134,32,10,133,34,10,121,34,12,167,79,13,0,11,11,32,7,32,8,71,13,0,11,11,32,11,167,33,7,32,9,69,13,1,32,6,65,16,106,32,7,65,3,116,106,32,10,55,3,0,32,11,66,255,1,84,33,9,32,11,66,1,124,34,10,33,11,32,10,66,128,2,82,13,0,11,32,6,65,144,16,106,65,128,16,16,24,66,63,32,13,125,66,63,131,33,16,66,0,33,11,3,64,32,11,32,16,134,34,15,33,10,32,1,32,15,121,34,12,167,79,4,64,32,15,33,10,3,64,32,1,32,14,32,13,32,12,125,134,32,10,133,34,10,121,34,12,167,79,13,0,11,11,32,6,65,144,16,106,32,11,167,65,3,116,106,32,10,32,15,132,55,3,0,32,11,66,1,124,34,10,33,11,32,10,66,128,2,82,13,0,11,32,6,41,3,16,34,10,65,55,32,1,107,34,7,65,63,113,173,136,167,34,1,65,255,1,77,4,64,32,6,65,144,16,106,32,1,65,3,116,106,41,3,0,33,11,32,6,65,8,106,32,5,16,30,32,6,65,0,54,2,152,32,32,6,32,6,41,3,8,55,3,144,32,2,64,32,5,69,4,64,32,6,65,0,54,2,152,32,12,1,11,32,6,65,144,32,106,32,5,16,33,11,32,0,65,8,106,32,6,65,16,106,65,128,16,16,14,26,32,0,65,136,16,106,32,6,65,144,16,106,65,128,16,16,14,26,32,0,32,5,54,2,160,32,32,0,32,4,54,2,156,32,32,0,32,3,54,2,152,32,32,0,32,7,54,2,164,32,32,0,65,0,32,3,32,5,107,34,1,32,1,32,3,75,27,54,2,168,32,32,0,32,11,32,10,66,8,134,66,1,132,133,55,3,136,32,32,0,66,0,55,3,144,32,32,0,66,127,32,2,65,63,113,173,134,66,127,133,55,3,0,32,6,65,144,32,106,16,56,32,6,65,160,32,106,36,0,15,11,32,1,65,128,2,65,152,128,192,0,16,37,0,11,32,7,65,128,2,65,168,128,192,0,16,37,0,11,251,4,1,11,127,35,0,65,48,107,34,2,36,0,32,2,65,36,106,65,188,132,192,0,54,2,0,32,2,65,3,58,0,40,32,2,66,128,128,128,128,128,4,55,3,8,32,2,32,0,54,2,32,32,2,65,0,54,2,24,32,2,65,0,54,2,16,2,64,2,64,2,64,32,1,40,2,8,34,10,69,4,64,32,1,65,20,106,40,2,0,34,4,69,13,1,32,1,40,2,0,33,3,32,1,40,2,16,33,0,32,4,65,3,116,65,120,106,65,3,118,65,1,106,34,7,33,5,3,64,32,3,65,4,106,40,2,0,34,4,4,64,32,2,40,2,32,32,3,40,2,0,32,4,32,2,40,2,36,40,2,12,17,3,0,13,4,11,32,0,40,2,0,32,2,65,8,106,32,0,65,4,106,40,2,0,17,2,0,13,3,32,0,65,8,106,33,0,32,3,65,8,106,33,3,32,5,65,127,106,34,5,13,0,11,12,1,11,32,1,65,12,106,40,2,0,34,0,69,13,0,32,0,65,5,116,34,11,65,96,106,65,5,118,65,1,106,33,7,32,1,40,2,0,33,3,3,64,32,3,65,4,106,40,2,0,34,0,4,64,32,2,40,2,32,32,3,40,2,0,32,0,32,2,40,2,36,40,2,12,17,3,0,13,3,11,32,2,32,5,32,10,106,34,4,65,28,106,45,0,0,58,0,40,32,2,32,4,65,4,106,41,2,0,66,32,137,55,3,8,32,4,65,24,106,40,2,0,33,6,32,1,40,2,16,33,8,65,0,33,9,65,0,33,0,2,64,2,64,2,64,32,4,65,20,106,40,2,0,65,1,107,14,2,0,2,1,11,32,6,65,3,116,32,8,106,34,12,40,2,4,65,15,71,13,1,32,12,40,2,0,40,2,0,33,6,11,65,1,33,0,11,32,2,32,6,54,2,20,32,2,32,0,54,2,16,32,4,65,16,106,40,2,0,33,0,2,64,2,64,2,64,32,4,65,12,106,40,2,0,65,1,107,14,2,0,2,1,11,32,0,65,3,116,32,8,106,34,6,40,2,4,65,15,71,13,1,32,6,40,2,0,40,2,0,33,0,11,65,1,33,9,11,32,2,32,0,54,2,28,32,2,32,9,54,2,24,32,8,32,4,40,2,0,65,3,116,106,34,0,40,2,0,32,2,65,8,106,32,0,40,2,4,17,2,0,13,2,32,3,65,8,106,33,3,32,11,32,5,65,32,106,34,5,71,13,0,11,11,65,0,33,0,32,7,32,1,40,2,4,73,34,3,69,13,1,32,2,40,2,32,32,1,40,2,0,32,7,65,3,116,106,65,0,32,3,27,34,1,40,2,0,32,1,40,2,4,32,2,40,2,36,40,2,12,17,3,0,69,13,1,11,65,1,33,0,11,32,2,65,48,106,36,0,32,0,11,205,4,1,4,127,32,0,32,1,16,90,33,2,2,64,2,64,2,64,32,0,16,86,13,0,32,0,40,2,0,33,3,2,64,32,0,16,75,69,4,64,32,1,32,3,106,33,1,32,0,32,3,16,91,34,0,65,252,138,192,0,40,2,0,71,13,1,32,2,40,2,4,65,3,113,65,3,71,13,2,65,244,138,192,0,32,1,54,2,0,32,0,32,1,32,2,16,61,15,11,32,1,32,3,106,65,16,106,33,0,12,2,11,32,3,65,128,2,79,4,64,32,0,16,17,12,1,11,32,0,65,12,106,40,2,0,34,4,32,0,65,8,106,40,2,0,34,5,71,4,64,32,5,32,4,54,2,12,32,4,32,5,54,2,8,12,1,11,65,228,135,192,0,65,228,135,192,0,40,2,0,65,126,32,3,65,3,118,119,113,54,2,0,11,32,2,16,73,4,64,32,0,32,1,32,2,16,61,12,2,11,2,64,65,128,139,192,0,40,2,0,32,2,71,4,64,32,2,65,252,138,192,0,40,2,0,71,13,1,65,252,138,192,0,32,0,54,2,0,65,244,138,192,0,65,244,138,192,0,40,2,0,32,1,106,34,1,54,2,0,32,0,32,1,16,65,15,11,65,128,139,192,0,32,0,54,2,0,65,248,138,192,0,65,248,138,192,0,40,2,0,32,1,106,34,1,54,2,0,32,0,32,1,65,1,114,54,2,4,32,0,65,252,138,192,0,40,2,0,71,13,1,65,244,138,192,0,65,0,54,2,0,65,252,138,192,0,65,0,54,2,0,15,11,32,2,16,85,34,3,32,1,106,33,1,2,64,32,3,65,128,2,79,4,64,32,2,16,17,12,1,11,32,2,65,12,106,40,2,0,34,4,32,2,65,8,106,40,2,0,34,2,71,4,64,32,2,32,4,54,2,12,32,4,32,2,54,2,8,12,1,11,65,228,135,192,0,65,228,135,192,0,40,2,0,65,126,32,3,65,3,118,119,113,54,2,0,11,32,0,32,1,16,65,32,0,65,252,138,192,0,40,2,0,71,13,1,65,244,138,192,0,32,1,54,2,0,11,15,11,32,1,65,128,2,79,4,64,32,0,32,1,16,16,15,11,32,1,65,3,118,34,2,65,3,116,65,236,135,192,0,106,33,1,2,127,65,228,135,192,0,40,2,0,34,3,65,1,32,2,116,34,2,113,4,64,32,1,40,2,8,12,1,11,65,228,135,192,0,32,2,32,3,114,54,2,0,32,1,11,33,2,32,1,32,0,54,2,8,32,2,32,0,54,2,12,32,0,32,1,54,2,12,32,0,32,2,54,2,8,11,235,2,1,3,127,2,64,2,64,2,64,2,64,32,1,65,9,79,4,64,65,16,65,8,16,66,32,1,75,13,1,12,2,11,32,0,16,4,33,3,12,2,11,65,16,65,8,16,66,33,1,11,65,128,128,124,65,8,65,8,16,66,65,20,65,8,16,66,106,65,16,65,8,16,66,106,107,65,119,113,65,125,106,34,4,65,0,65,16,65,8,16,66,65,2,116,107,34,2,32,2,32,4,75,27,32,1,107,32,0,77,13,0,32,1,65,16,32,0,65,4,106,65,16,65,8,16,66,65,123,106,32,0,75,27,65,8,16,66,34,4,106,65,16,65,8,16,66,106,65,124,106,16,4,34,2,69,13,0,32,2,16,93,33,0,2,64,32,1,65,127,106,34,3,32,2,113,69,4,64,32,0,33,1,12,1,11,32,2,32,3,106,65,0,32,1,107,113,16,93,33,2,65,16,65,8,16,66,33,3,32,0,16,85,32,2,65,0,32,1,32,2,32,0,107,32,3,75,27,106,34,1,32,0,107,34,2,107,33,3,32,0,16,75,69,4,64,32,1,32,3,16,55,32,0,32,2,16,55,32,0,32,2,16,11,12,1,11,32,0,40,2,0,33,0,32,1,32,3,54,2,4,32,1,32,0,32,2,106,54,2,0,11,32,1,16,75,13,1,32,1,16,85,34,2,65,16,65,8,16,66,32,4,106,77,13,1,32,1,32,4,16,90,33,0,32,1,32,4,16,55,32,0,32,2,32,4,107,34,4,16,55,32,0,32,4,16,11,12,1,11,32,3,15,11,32,1,16,92,32,1,16,75,26,11,216,2,1,3,127,35,0,65,16,107,34,2,36,0,32,0,40,2,0,33,0,2,64,32,1,65,255,0,77,4,64,32,0,40,2,8,34,3,32,0,65,4,106,40,2,0,70,4,64,32,0,32,3,16,23,32,0,40,2,8,33,3,11,32,0,32,3,65,1,106,54,2,8,32,0,40,2,0,32,3,106,32,1,58,0,0,12,1,11,32,2,65,0,54,2,12,2,127,32,1,65,128,16,79,4,64,32,1,65,128,128,4,79,4,64,32,2,32,1,65,63,113,65,128,1,114,58,0,15,32,2,32,1,65,18,118,65,240,1,114,58,0,12,32,2,32,1,65,6,118,65,63,113,65,128,1,114,58,0,14,32,2,32,1,65,12,118,65,63,113,65,128,1,114,58,0,13,65,4,12,2,11,32,2,32,1,65,63,113,65,128,1,114,58,0,14,32,2,32,1,65,12,118,65,224,1,114,58,0,12,32,2,32,1,65,6,118,65,63,113,65,128,1,114,58,0,13,65,3,12,1,11,32,2,32,1,65,63,113,65,128,1,114,58,0,13,32,2,32,1,65,6,118,65,192,1,114,58,0,12,65,2,11,33,1,32,0,65,4,106,40,2,0,32,0,65,8,106,34,4,40,2,0,34,3,107,32,1,73,4,64,32,0,32,3,32,1,16,22,32,4,40,2,0,33,3,11,32,0,40,2,0,32,3,106,32,2,65,12,106,32,1,16,14,26,32,4,32,1,32,3,106,54,2,0,11,32,2,65,16,106,36,0,65,0,11,185,2,1,7,127,2,64,32,2,65,15,77,4,64,32,0,33,3,12,1,11,32,0,65,0,32,0,107,65,3,113,34,4,106,33,5,32,4,4,64,32,0,33,3,32,1,33,6,3,64,32,3,32,6,45,0,0,58,0,0,32,6,65,1,106,33,6,32,3,65,1,106,34,3,32,5,73,13,0,11,11,32,5,32,2,32,4,107,34,2,65,124,113,34,7,106,33,3,2,64,32,1,32,4,106,34,4,65,3,113,4,64,32,7,65,1,72,13,1,32,4,65,3,116,34,1,65,24,113,33,8,65,0,32,1,107,65,24,113,33,9,32,4,65,124,113,34,6,65,4,106,33,1,32,6,40,2,0,33,6,3,64,32,5,32,6,32,8,118,32,1,40,2,0,34,6,32,9,116,114,54,2,0,32,1,65,4,106,33,1,32,5,65,4,106,34,5,32,3,73,13,0,11,12,1,11,32,7,65,1,72,13,0,32,4,33,1,3,64,32,5,32,1,40,2,0,54,2,0,32,1,65,4,106,33,1,32,5,65,4,106,34,5,32,3,73,13,0,11,11,32,2,65,3,113,33,2,32,4,32,7,106,33,1,11,32,2,65,1,78,4,64,32,2,32,3,106,33,2,3,64,32,3,32,1,45,0,0,58,0,0,32,1,65,1,106,33,1,32,3,65,1,106,34,3,32,2,73,13,0,11,11,32,0,11,183,2,2,5,127,1,126,35,0,65,48,107,34,4,36,0,65,39,33,2,2,64,32,0,66,144,206,0,84,4,64,32,0,33,7,12,1,11,3,64,32,4,65,9,106,32,2,106,34,3,65,124,106,32,0,32,0,66,144,206,0,128,34,7,66,144,206,0,126,125,167,34,5,65,255,255,3,113,65,228,0,110,34,6,65,1,116,65,232,133,192,0,106,47,0,0,59,0,0,32,3,65,126,106,32,5,32,6,65,228,0,108,107,65,255,255,3,113,65,1,116,65,232,133,192,0,106,47,0,0,59,0,0,32,2,65,124,106,33,2,32,0,66,255,193,215,47,86,32,7,33,0,13,0,11,11,32,7,167,34,3,65,227,0,74,4,64,32,2,65,126,106,34,2,32,4,65,9,106,106,32,7,167,34,3,32,3,65,255,255,3,113,65,228,0,110,34,3,65,228,0,108,107,65,255,255,3,113,65,1,116,65,232,133,192,0,106,47,0,0,59,0,0,11,2,64,32,3,65,10,78,4,64,32,2,65,126,106,34,2,32,4,65,9,106,106,32,3,65,1,116,65,232,133,192,0,106,47,0,0,59,0,0,12,1,11,32,2,65,127,106,34,2,32,4,65,9,106,106,32,3,65,48,106,58,0,0,11,32,1,32,4,65,9,106,32,2,106,65,39,32,2,107,16,6,32,4,65,48,106,36,0,11,164,2,1,5,127,32,0,66,0,55,2,16,32,0,2,127,65,0,32,1,65,128,2,73,13,0,26,65,31,32,1,65,255,255,255,7,75,13,0,26,32,1,65,6,32,1,65,8,118,103,34,2,107,118,65,1,113,32,2,65,1,116,107,65,62,106,11,34,2,54,2,28,32,2,65,2,116,65,244,137,192,0,106,33,3,32,0,33,4,2,64,2,64,2,64,2,64,65,232,135,192,0,40,2,0,34,5,65,1,32,2,116,34,6,113,4,64,32,3,40,2,0,33,3,32,2,16,64,33,2,32,3,16,85,32,1,71,13,1,32,3,33,2,12,2,11,65,232,135,192,0,32,5,32,6,114,54,2,0,32,3,32,0,54,2,0,12,3,11,32,1,32,2,116,33,5,3,64,32,3,32,5,65,29,118,65,4,113,106,65,16,106,34,6,40,2,0,34,2,69,13,2,32,5,65,1,116,33,5,32,2,34,3,16,85,32,1,71,13,0,11,11,32,2,40,2,8,34,1,32,4,54,2,12,32,2,32,4,54,2,8,32,4,32,2,54,2,12,32,4,32,1,54,2,8,32,0,65,0,54,2,24,15,11,32,6,32,0,54,2,0,11,32,0,32,3,54,2,24,32,4,32,4,54,2,8,32,4,32,4,54,2,12,11,182,2,1,5,127,32,0,40,2,24,33,4,2,64,2,64,32,0,32,0,40,2,12,70,4,64,32,0,65,20,65,16,32,0,65,20,106,34,1,40,2,0,34,3,27,106,40,2,0,34,2,13,1,65,0,33,1,12,2,11,32,0,40,2,8,34,2,32,0,40,2,12,34,1,54,2,12,32,1,32,2,54,2,8,12,1,11,32,1,32,0,65,16,106,32,3,27,33,3,3,64,32,3,33,5,32,2,34,1,65,20,106,34,3,40,2,0,34,2,69,4,64,32,1,65,16,106,33,3,32,1,40,2,16,33,2,11,32,2,13,0,11,32,5,65,0,54,2,0,11,2,64,32,4,69,13,0,2,64,32,0,32,0,40,2,28,65,2,116,65,244,137,192,0,106,34,2,40,2,0,71,4,64,32,4,65,16,65,20,32,4,40,2,16,32,0,70,27,106,32,1,54,2,0,32,1,13,1,12,2,11,32,2,32,1,54,2,0,32,1,13,0,65,232,135,192,0,65,232,135,192,0,40,2,0,65,126,32,0,40,2,28,119,113,54,2,0,15,11,32,1,32,4,54,2,24,32,0,40,2,16,34,2,4,64,32,1,32,2,54,2,16,32,2,32,1,54,2,24,11,32,0,65,20,106,40,2,0,34,0,69,13,0,32,1,65,20,106,32,0,54,2,0,32,0,32,1,54,2,24,11,11,111,1,12,127,65,148,139,192,0,40,2,0,34,2,69,4,64,65,164,139,192,0,65,255,31,54,2,0,65,0,15,11,65,140,139,192,0,33,6,3,64,32,2,34,1,40,2,8,33,2,32,1,40,2,4,33,3,32,1,40,2,0,33,4,32,1,65,12,106,40,2,0,26,32,1,33,6,32,5,65,1,106,33,5,32,2,13,0,11,65,164,139,192,0,32,5,65,255,31,32,5,65,255,31,75,27,54,2,0,32,8,11,162,2,2,4,127,1,126,35,0,65,48,107,34,2,36,0,32,1,65,4,106,33,4,2,64,32,1,40,2,4,4,64,65,132,131,192,0,40,2,0,33,5,12,1,11,32,1,40,2,0,33,3,32,2,66,0,55,2,12,32,2,65,132,131,192,0,40,2,0,34,5,54,2,8,32,2,32,2,65,8,106,54,2,20,32,2,65,40,106,32,3,65,16,106,41,2,0,55,3,0,32,2,65,32,106,32,3,65,8,106,41,2,0,55,3,0,32,2,32,3,41,2,0,55,3,24,32,2,65,20,106,32,2,65,24,106,16,10,26,32,4,65,8,106,32,2,65,16,106,40,2,0,54,2,0,32,4,32,2,41,3,8,55,2,0,11,32,2,65,32,106,34,3,32,4,65,8,106,40,2,0,54,2,0,32,1,65,12,106,65,0,54,2,0,32,4,41,2,0,33,6,32,1,65,8,106,65,0,54,2,0,32,1,32,5,54,2,4,32,2,32,6,55,3,24,65,12,65,4,16,70,34,1,69,4,64,65,12,65,4,16,89,0,11,32,1,32,2,41,3,24,55,2,0,32,1,65,8,106,32,3,40,2,0,54,2,0,32,0,65,244,131,192,0,54,2,4,32,0,32,1,54,2,0,32,2,65,48,106,36,0,11,137,2,1,4,127,35,0,65,48,107,34,4,36,0,2,64,32,2,32,3,106,34,3,32,2,79,4,64,65,4,33,2,32,1,40,2,4,34,6,65,1,116,34,5,32,3,32,5,32,3,75,27,34,3,65,4,32,3,65,4,75,27,34,3,65,255,255,255,255,3,113,32,3,71,4,64,65,0,33,2,11,32,3,65,2,116,33,5,2,64,32,6,4,64,32,1,40,2,0,33,7,32,4,65,40,106,65,4,54,2,0,32,4,32,6,65,2,116,54,2,36,32,4,32,7,54,2,32,12,1,11,32,4,65,0,54,2,32,11,32,4,65,16,106,32,5,32,2,32,4,65,32,106,16,28,65,1,33,2,32,4,40,2,16,65,1,71,4,64,32,4,40,2,20,33,2,32,1,32,3,54,2,4,32,1,32,2,54,2,0,65,0,33,2,12,2,11,32,4,65,8,106,32,4,40,2,20,32,4,65,24,106,40,2,0,16,71,32,0,32,4,41,3,8,55,2,4,12,1,11,32,0,32,3,54,2,4,32,0,65,8,106,65,0,54,2,0,65,1,33,2,11,32,0,32,2,54,2,0,32,4,65,48,106,36,0,11,138,2,1,3,127,35,0,65,32,107,34,4,36,0,65,1,33,5,65,224,135,192,0,65,224,135,192,0,40,2,0,34,6,65,1,106,54,2,0,2,64,65,168,139,192,0,40,2,0,65,1,70,4,64,65,172,139,192,0,40,2,0,65,1,106,33,5,12,1,11,65,168,139,192,0,65,1,54,2,0,11,65,172,139,192,0,32,5,54,2,0,2,64,2,64,32,6,65,0,72,32,5,65,2,75,114,13,0,32,4,32,3,54,2,28,32,4,32,2,54,2,24,65,212,135,192,0,40,2,0,34,2,65,127,76,13,0,65,212,135,192,0,32,2,65,1,106,34,2,54,2,0,65,212,135,192,0,65,220,135,192,0,40,2,0,34,3,4,127,65,216,135,192,0,40,2,0,32,4,65,8,106,32,0,32,1,40,2,16,17,0,0,32,4,32,4,41,3,8,55,3,16,32,4,65,16,106,32,3,40,2,20,17,0,0,65,212,135,192,0,40,2,0,5,32,2,11,65,127,106,54,2,0,32,5,65,1,77,13,1,11,0,11,35,0,65,16,107,34,2,36,0,32,2,32,1,54,2,12,32,2,32,0,54,2,8,0,11,187,1,1,2,127,35,0,65,32,107,34,3,36,0,2,64,32,1,32,2,106,34,2,32,1,73,13,0,32,0,65,4,106,40,2,0,34,1,65,1,116,34,4,32,2,32,4,32,2,75,27,34,2,65,8,32,2,65,8,75,27,33,2,2,64,32,1,4,64,32,3,65,24,106,65,1,54,2,0,32,3,32,1,54,2,20,32,3,32,0,40,2,0,54,2,16,12,1,11,32,3,65,0,54,2,16,11,32,3,32,2,32,3,65,16,106,16,29,32,3,40,2,0,65,1,70,4,64,32,3,65,8,106,40,2,0,34,0,69,13,1,32,3,40,2,4,32,0,16,89,0,11,32,3,40,2,4,33,1,32,0,65,4,106,32,2,54,2,0,32,0,32,1,54,2,0,32,3,65,32,106,36,0,15,11,16,78,0,11,187,1,1,3,127,35,0,65,32,107,34,2,36,0,2,64,32,1,65,1,106,34,3,32,1,73,13,0,32,0,65,4,106,40,2,0,34,1,65,1,116,34,4,32,3,32,4,32,3,75,27,34,3,65,8,32,3,65,8,75,27,33,3,2,64,32,1,4,64,32,2,65,24,106,65,1,54,2,0,32,2,32,1,54,2,20,32,2,32,0,40,2,0,54,2,16,12,1,11,32,2,65,0,54,2,16,11,32,2,32,3,32,2,65,16,106,16,29,32,2,40,2,0,65,1,70,4,64,32,2,65,8,106,40,2,0,34,0,69,13,1,32,2,40,2,4,32,0,16,89,0,11,32,2,40,2,4,33,1,32,0,65,4,106,32,3,54,2,0,32,0,32,1,54,2,0,32,2,65,32,106,36,0,15,11,16,78,0,11,145,1,1,2,127,32,1,65,15,75,4,64,32,0,65,0,32,0,107,65,3,113,34,3,106,33,2,32,3,4,64,3,64,32,0,65,0,58,0,0,32,0,65,1,106,34,0,32,2,73,13,0,11,11,32,2,32,1,32,3,107,34,1,65,124,113,34,3,106,33,0,32,3,65,1,78,4,64,3,64,32,2,65,0,54,2,0,32,2,65,4,106,34,2,32,0,73,13,0,11,11,32,1,65,3,113,33,1,11,32,1,65,1,78,4,64,32,0,32,1,106,33,1,3,64,32,0,65,0,58,0,0,32,0,65,1,106,34,0,32,1,73,13,0,11,11,11,171,1,1,2,127,35,0,65,48,107,34,2,36,0,32,1,65,4,106,33,3,32,1,40,2,4,69,4,64,32,1,40,2,0,33,1,32,2,66,0,55,2,12,32,2,65,132,131,192,0,40,2,0,54,2,8,32,2,32,2,65,8,106,54,2,20,32,2,65,40,106,32,1,65,16,106,41,2,0,55,3,0,32,2,65,32,106,32,1,65,8,106,41,2,0,55,3,0,32,2,32,1,41,2,0,55,3,24,32,2,65,20,106,32,2,65,24,106,16,10,26,32,3,65,8,106,32,2,65,16,106,40,2,0,54,2,0,32,3,32,2,41,3,8,55,2,0,11,32,0,65,244,131,192,0,54,2,4,32,0,32,3,54,2,0,32,2,65,48,106,36,0,11,155,1,1,1,127,35,0,65,48,107,34,5,36,0,32,5,65,8,106,32,1,16,48,32,5,40,2,12,33,1,32,5,65,16,106,32,5,40,2,8,32,2,32,3,32,4,65,0,71,16,8,32,3,4,64,32,2,16,5,11,32,1,32,1,40,2,0,65,127,106,54,2,0,32,5,65,40,106,32,5,65,24,106,40,2,0,34,3,54,2,0,32,5,32,5,41,3,16,55,3,32,32,5,40,2,36,32,3,75,4,64,32,5,65,32,106,32,3,16,45,32,5,40,2,40,33,3,11,32,5,40,2,32,33,1,32,0,32,3,54,2,4,32,0,32,1,54,2,0,32,5,65,48,106,36,0,11,158,1,1,2,127,35,0,65,48,107,34,4,36,0,32,4,65,8,106,32,1,16,48,32,4,40,2,12,33,1,32,4,40,2,8,33,5,32,4,32,2,54,2,32,32,4,65,16,106,32,5,32,4,65,32,106,32,3,65,0,71,16,32,32,1,32,1,40,2,0,65,127,106,54,2,0,32,4,65,40,106,32,4,65,24,106,40,2,0,34,1,54,2,0,32,4,32,4,41,3,16,55,3,32,32,4,40,2,36,32,1,75,4,64,32,4,65,32,106,32,1,16,45,32,4,40,2,40,33,1,11,32,4,40,2,32,33,2,32,0,32,1,54,2,4,32,0,32,2,54,2,0,32,4,65,48,106,36,0,11,166,1,1,2,127,2,64,2,64,2,64,32,2,4,64,65,1,33,4,32,1,65,0,78,13,1,12,2,11,32,0,32,1,54,2,4,65,1,33,4,12,1,11,2,64,2,64,2,64,2,64,32,3,40,2,0,34,5,4,64,32,3,40,2,4,34,3,69,4,64,32,1,13,2,12,4,11,32,5,32,3,32,2,32,1,16,67,34,3,69,13,2,12,4,11,32,1,69,13,2,11,32,1,32,2,16,70,34,3,13,2,11,32,0,32,1,54,2,4,32,2,33,1,12,3,11,32,2,33,3,11,32,0,32,3,54,2,4,65,0,33,4,12,1,11,65,0,33,1,11,32,0,32,4,54,2,0,32,0,65,8,106,32,1,54,2,0,11,151,1,1,2,127,2,64,2,64,2,64,2,64,2,127,2,64,2,64,2,127,65,1,34,3,32,1,65,0,72,13,0,26,32,2,40,2,0,34,4,69,13,1,32,2,40,2,4,34,2,13,4,32,1,13,2,65,1,12,3,11,33,3,65,0,33,1,12,6,11,32,1,13,0,65,1,12,1,11,32,1,65,1,16,70,11,34,2,69,13,1,12,2,11,32,4,32,2,65,1,32,1,16,67,34,2,13,1,11,32,0,32,1,54,2,4,65,1,33,1,12,1,11,32,0,32,2,54,2,4,65,0,33,3,11,32,0,32,3,54,2,0,32,0,65,8,106,32,1,54,2,0,11,113,1,3,127,35,0,65,16,107,34,3,36,0,2,64,2,64,2,64,32,1,32,1,65,255,255,255,255,3,113,70,4,64,32,1,65,2,116,34,2,65,0,72,13,1,32,2,69,13,2,32,2,65,4,16,70,34,4,13,3,32,2,65,4,16,89,0,11,16,78,0,11,32,3,65,8,106,32,1,65,0,16,71,16,78,0,11,65,4,33,4,11,32,0,32,1,54,2,4,32,0,32,4,54,2,0,32,3,65,16,106,36,0,11,141,1,1,5,127,2,64,2,64,32,1,40,2,4,34,3,32,2,79,4,64,32,3,69,13,2,32,3,65,2,116,33,3,32,1,40,2,0,33,4,32,2,65,2,116,34,5,69,4,64,65,4,33,6,32,3,69,13,2,32,4,16,5,12,2,11,32,4,32,3,65,4,32,5,16,67,34,6,13,1,32,0,32,5,54,2,4,32,0,65,8,106,65,4,54,2,0,65,1,33,7,12,2,11,65,220,129,192,0,65,36,65,128,130,192,0,16,47,0,11,32,1,32,2,54,2,4,32,1,32,6,54,2,0,11,32,0,32,7,54,2,0,11,152,1,1,3,127,35,0,65,32,107,34,4,36,0,32,4,65,8,106,32,2,40,2,0,34,5,16,1,34,2,16,35,32,4,32,2,54,2,24,32,4,32,4,40,2,12,54,2,20,32,4,32,4,40,2,8,34,6,54,2,16,32,5,32,6,32,2,65,0,16,0,34,2,65,36,79,4,64,32,2,16,2,11,32,4,32,4,65,16,106,34,2,40,2,8,54,2,4,32,4,32,2,40,2,0,54,2,0,32,0,32,1,32,4,40,2,0,32,4,40,2,4,32,3,16,8,32,4,65,16,106,34,0,40,2,4,4,64,32,0,40,2,0,16,5,11,32,4,65,32,106,36,0,11,127,1,3,127,32,0,40,2,4,32,0,40,2,8,34,2,107,32,1,73,4,64,32,0,32,2,32,1,16,43,32,0,40,2,8,33,2,11,32,0,40,2,0,32,2,65,2,116,106,33,3,32,1,65,2,79,4,64,32,1,65,127,106,33,4,3,64,32,3,65,0,54,2,0,32,3,65,4,106,33,3,32,4,65,127,106,34,4,13,0,11,32,1,32,2,106,65,127,106,33,2,11,32,0,32,1,4,127,32,3,65,0,54,2,0,32,2,65,1,106,5,32,2,11,54,2,8,11,148,1,1,2,127,35,0,65,16,107,34,3,36,0,32,0,65,20,106,40,2,0,33,4,2,64,2,127,2,64,2,64,32,0,65,4,106,40,2,0,14,2,0,1,3,11,32,4,13,2,65,0,33,0,65,132,131,192,0,12,1,11,32,4,13,1,32,0,40,2,0,34,4,40,2,4,33,0,32,4,40,2,0,11,33,4,32,3,32,0,54,2,4,32,3,32,4,54,2,0,32,3,65,168,132,192,0,32,1,40,2,8,32,2,16,21,0,11,32,3,65,0,54,2,4,32,3,32,0,54,2,0,32,3,65,148,132,192,0,32,1,40,2,8,32,2,16,21,0,11,86,1,2,127,35,0,65,16,107,34,2,36,0,2,64,2,64,32,1,65,0,78,4,64,32,1,69,13,1,32,1,16,54,34,3,13,2,32,1,65,1,16,89,0,11,32,2,65,8,106,32,1,65,0,16,71,16,78,0,11,65,1,33,3,11,32,0,32,1,54,2,4,32,0,32,3,54,2,0,32,2,65,16,106,36,0,11,117,1,3,127,32,0,32,0,16,92,34,0,65,8,16,66,32,0,107,34,2,16,90,33,0,65,248,138,192,0,32,1,32,2,107,34,1,54,2,0,65,128,139,192,0,32,0,54,2,0,32,0,32,1,65,1,114,54,2,4,65,8,65,8,16,66,33,2,65,20,65,8,16,66,33,3,65,16,65,8,16,66,33,4,32,0,32,1,16,90,32,4,32,3,32,2,65,8,107,106,106,54,2,4,65,156,139,192,0,65,128,128,128,1,54,2,0,11,108,1,1,127,35,0,65,48,107,34,3,36,0,32,3,32,1,54,2,4,32,3,32,0,54,2,0,32,3,65,28,106,65,2,54,2,0,32,3,65,44,106,65,14,54,2,0,32,3,66,2,55,2,12,32,3,65,216,133,192,0,54,2,8,32,3,65,14,54,2,36,32,3,32,3,65,32,106,54,2,24,32,3,32,3,54,2,40,32,3,32,3,65,4,106,54,2,32,32,3,65,8,106,32,2,16,57,0,11,84,1,1,127,35,0,65,32,107,34,2,36,0,32,2,32,0,40,2,0,54,2,4,32,2,65,24,106,32,1,65,16,106,41,2,0,55,3,0,32,2,65,16,106,32,1,65,8,106,41,2,0,55,3,0,32,2,32,1,41,2,0,55,3,8,32,2,65,4,106,32,2,65,8,106,16,10,32,2,65,32,106,36,0,11,81,1,1,127,35,0,65,192,32,107,34,2,36,0,2,64,32,1,4,64,32,1,40,2,0,13,1,32,1,65,0,54,2,0,32,2,65,8,106,32,1,65,184,32,16,14,26,32,0,32,2,65,16,106,65,176,32,16,14,26,32,1,16,5,32,2,65,192,32,106,36,0,15,11,16,82,0,11,16,83,0,11,81,1,1,127,35,0,65,192,32,107,34,1,36,0,32,1,65,16,106,32,0,65,176,32,16,14,26,65,184,32,65,8,16,70,34,0,69,4,64,65,184,32,65,8,16,89,0,11,32,0,65,0,54,2,0,32,0,65,4,106,32,1,65,12,106,65,180,32,16,14,26,32,1,65,192,32,106,36,0,32,0,11,80,1,1,127,35,0,65,224,192,0,107,34,6,36,0,32,6,32,0,173,32,1,173,66,32,134,132,55,3,176,32,32,6,32,6,65,176,32,106,32,2,32,3,32,4,32,5,16,9,32,6,65,176,32,106,32,6,65,176,32,16,14,26,32,6,65,176,32,106,16,40,32,6,65,224,192,0,106,36,0,11,78,1,2,127,32,0,40,2,0,34,3,65,4,106,40,2,0,32,3,65,8,106,34,4,40,2,0,34,0,107,32,2,73,4,64,32,3,32,0,32,2,16,22,32,4,40,2,0,33,0,11,32,3,40,2,0,32,0,106,32,1,32,2,16,14,26,32,4,32,0,32,2,106,54,2,0,65,0,11,71,1,1,127,35,0,65,16,107,34,3,36,0,32,3,32,0,32,1,32,2,16,20,2,64,32,3,40,2,0,65,1,70,4,64,32,3,65,8,106,40,2,0,34,0,69,13,1,32,3,40,2,4,32,0,16,89,0,11,32,3,65,16,106,36,0,15,11,16,78,0,11,71,1,1,127,35,0,65,16,107,34,2,36,0,32,2,32,0,32,1,65,1,16,20,2,64,32,2,40,2,0,65,1,70,4,64,32,2,65,8,106,40,2,0,34,0,69,13,1,32,2,40,2,4,32,0,16,89,0,11,32,2,65,16,106,36,0,15,11,16,78,0,11,69,1,1,127,35,0,65,16,107,34,2,36,0,32,2,32,0,32,1,16,31,2,64,32,2,40,2,0,65,1,70,4,64,32,2,65,8,106,40,2,0,34,0,69,13,1,32,2,40,2,4,32,0,16,89,0,11,32,2,65,16,106,36,0,15,11,16,78,0,11,75,0,2,64,2,127,32,1,65,128,128,196,0,71,4,64,65,1,32,0,40,2,24,32,1,32,0,65,28,106,40,2,0,40,2,16,17,2,0,13,1,26,11,32,2,13,1,65,0,11,15,11,32,0,40,2,24,32,2,65,0,32,0,65,28,106,40,2,0,40,2,12,17,3,0,11,71,1,1,127,35,0,65,32,107,34,3,36,0,32,3,65,20,106,65,0,54,2,0,32,3,65,148,133,192,0,54,2,16,32,3,66,1,55,2,4,32,3,32,1,54,2,28,32,3,32,0,54,2,24,32,3,32,3,65,24,106,54,2,0,32,3,32,2,16,57,0,11,58,1,1,127,2,64,32,1,4,64,32,1,40,2,0,34,2,65,127,70,13,1,32,1,32,2,65,1,106,54,2,0,32,0,32,1,54,2,4,32,0,32,1,65,8,106,54,2,0,15,11,16,82,0,11,16,83,0,11,63,1,1,127,35,0,65,224,192,0,107,34,4,36,0,32,4,65,128,128,192,0,32,0,32,1,32,2,32,3,16,9,32,4,65,176,32,106,32,4,65,176,32,16,14,26,32,4,65,176,32,106,16,40,32,4,65,224,192,0,106,36,0,11,68,1,2,127,32,1,40,2,4,33,2,32,1,40,2,0,33,3,65,8,65,4,16,70,34,1,69,4,64,65,8,65,4,16,89,0,11,32,1,32,2,54,2,4,32,1,32,3,54,2,0,32,0,65,132,132,192,0,54,2,4,32,0,32,1,54,2,0,11,57,1,1,127,32,1,65,16,118,64,0,33,2,32,0,65,0,54,2,8,32,0,65,0,32,1,65,128,128,124,113,32,2,65,127,70,34,1,27,54,2,4,32,0,65,0,32,2,65,16,116,32,1,27,54,2,0,11,104,1,3,127,35,0,65,16,107,34,1,36,0,32,0,40,2,12,34,2,69,4,64,65,140,131,192,0,65,43,65,212,131,192,0,16,47,0,11,32,0,40,2,8,34,3,69,4,64,65,140,131,192,0,65,43,65,228,131,192,0,16,47,0,11,32,1,32,2,54,2,8,32,1,32,0,54,2,4,32,1,32,3,54,2,0,32,1,40,2,0,32,1,40,2,4,32,1,40,2,8,16,34,0,11,42,0,2,64,32,0,65,124,75,13,0,32,0,69,4,64,65,4,15,11,32,0,32,0,65,125,73,65,2,116,16,70,34,0,69,13,0,32,0,15,11,0,11,34,1,1,127,2,64,32,0,65,1,16,12,34,1,69,13,0,32,1,16,93,16,75,13,0,32,1,32,0,16,24,11,32,1,11,42,0,32,0,32,0,40,2,4,65,1,113,32,1,114,65,2,114,54,2,4,32,0,32,1,106,65,4,106,34,0,32,0,40,2,0,65,1,114,54,2,0,11,32,1,1,127,2,64,32,0,40,2,4,34,1,69,13,0,32,0,40,2,0,32,1,65,2,116,69,13,0,16,5,11,11,52,1,1,127,35,0,65,16,107,34,2,36,0,32,2,32,1,54,2,12,32,2,32,0,54,2,8,32,2,65,148,133,192,0,54,2,4,32,2,65,148,133,192,0,54,2,0,32,2,16,52,0,11,30,0,2,64,32,0,65,4,106,40,2,0,69,13,0,32,0,40,2,0,34,0,69,13,0,32,0,16,5,11,11,32,1,1,127,2,64,32,0,40,2,4,34,1,69,13,0,32,0,65,8,106,40,2,0,69,13,0,32,1,16,5,11,11,33,0,32,0,32,1,65,3,114,54,2,4,32,0,32,1,106,65,4,106,34,0,32,0,40,2,0,65,1,114,54,2,0,11,35,0,32,2,32,2,40,2,4,65,126,113,54,2,4,32,0,32,1,65,1,114,54,2,4,32,0,32,1,106,32,1,54,2,0,11,28,1,1,127,35,0,65,176,32,107,34,1,36,0,32,1,32,0,16,39,32,1,65,176,32,106,36,0,11,25,1,1,127,32,0,40,2,16,34,1,4,127,32,1,5,32,0,65,20,106,40,2,0,11,11,18,0,65,0,65,25,32,0,65,1,118,107,32,0,65,31,70,27,11,22,0,32,0,32,1,65,1,114,54,2,4,32,0,32,1,106,32,1,54,2,0,11,16,0,32,0,32,1,106,65,127,106,65,0,32,1,107,113,11,12,0,32,0,32,1,32,2,32,3,16,7,11,11,0,32,1,4,64,32,0,16,5,11,11,15,0,32,0,65,1,116,34,0,65,0,32,0,107,114,11,8,0,32,0,32,1,16,12,11,16,0,32,0,32,2,54,2,4,32,0,32,1,54,2,0,11,19,0,32,0,65,132,132,192,0,54,2,4,32,0,32,1,54,2,0,11,13,0,32,0,45,0,4,65,2,113,65,1,118,11,10,0,65,0,32,0,107,32,0,113,11,11,0,32,0,45,0,4,65,3,113,69,11,12,0,32,0,32,1,65,3,114,54,2,4,11,13,0,32,0,40,2,0,32,0,40,2,4,106,11,17,0,65,240,132,192,0,65,17,65,132,133,192,0,16,47,0,11,14,0,32,0,40,2,0,26,3,64,12,0,11,0,11,11,0,32,0,53,2,0,32,1,16,15,11,11,0,32,0,35,0,106,36,0,35,0,11,12,0,65,152,130,192,0,65,27,16,84,0,11,13,0,65,179,130,192,0,65,207,0,16,84,0,11,9,0,32,0,32,1,16,3,0,11,10,0,32,0,40,2,4,65,120,113,11,10,0,32,0,40,2,4,65,1,113,11,10,0,32,0,40,2,12,65,1,113,11,10,0,32,0,40,2,12,65,1,118,11,25,0,32,0,32,1,65,208,135,192,0,40,2,0,34,0,65,1,32,0,27,17,0,0,0,11,7,0,32,0,32,1,106,11,7,0,32,0,32,1,107,11,7,0,32,0,65,8,106,11,7,0,32,0,65,120,106,11,12,0,66,203,147,239,186,234,202,252,189,107,11,13,0,66,209,174,152,196,153,131,178,247,132,127,11,13,0,66,192,168,233,135,216,232,146,217,222,0,11,3,0,1,11,3,0,1,11,11,186,7,1,0,65,128,128,192,0,11,176,7,5,168,178,223,5,243,61,0,115,114,99,47,99,104,117,110,107,101,114,46,114,115,0,0,8,0,16,0,14,0,0,0,89,0,0,0,41,0,0,0,8,0,16,0,14,0,0,0,123,0,0,0,13,0,0,0,8,0,16,0,14,0,0,0,182,0,0,0,41,0,0,0,8,0,16,0,14,0,0,0,183,0,0,0,23,0,0,0,8,0,16,0,14,0,0,0,190,0,0,0,41,0,0,0,8,0,16,0,14,0,0,0,191,0,0,0,41,0,0,0,8,0,16,0,14,0,0,0,192,0,0,0,23,0,0,0,4,0,0,0,0,0,0,0,47,114,117,115,116,99,47,99,102,97,52,97,99,54,54,99,49,57,52,48,52,54,102,54,51,49,99,101,48,55,54,99,55,53,53,49,54,101,99,102,100,101,98,55,55,101,101,47,108,105,98,114,97,114,121,47,97,108,108,111,99,47,115,114,99,47,114,97,119,95,118,101,99,46,114,115,84,114,105,101,100,32,116,111,32,115,104,114,105,110,107,32,116,111,32,97,32,108,97,114,103,101,114,32,99,97,112,97,99,105,116,121,144,0,16,0,76,0,0,0,171,1,0,0,9,0,0,0,4,0,0,0,0,0,0,0,110,117,108,108,32,112,111,105,110,116,101,114,32,112,97,115,115,101,100,32,116,111,32,114,117,115,116,114,101,99,117,114,115,105,118,101,32,117,115,101,32,111,102,32,97,110,32,111,98,106,101,99,116,32,100,101,116,101,99,116,101,100,32,119,104,105,99,104,32,119,111,117,108,100,32,108,101,97,100,32,116,111,32,117,110,115,97,102,101,32,97,108,105,97,115,105,110,103,32,105,110,32,114,117,115,116,0,0,1,0,0,0,0,0,0,0,99,97,108,108,101,100,32,96,79,112,116,105,111,110,58,58,117,110,119,114,97,112,40,41,96,32,111,110,32,97,32,96,78,111,110,101,96,32,118,97,108,117,101,108,105,98,114,97,114,121,47,115,116,100,47,115,114,99,47,112,97,110,105,99,107,105,110,103,46,114,115,0,183,1,16,0,28,0,0,0,240,1,0,0,31,0,0,0,183,1,16,0,28,0,0,0,241,1,0,0,30,0,0,0,2,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,16,0,0,0,4,0,0,0,7,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,9,0,0,0,10,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,108,105,98,114,97,114,121,47,97,108,108,111,99,47,115,114,99,47,114,97,119,95,118,101,99,46,114,115,99,97,112,97,99,105,116,121,32,111,118,101,114,102,108,111,119,0,0,0,84,2,16,0,28,0,0,0,6,2,0,0,5,0,0,0,16,0,0,0,0,0,0,0,1,0,0,0,17,0,0,0,105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,58,32,116,104,101,32,108,101,110,32,105,115,32,32,98,117,116,32,116,104,101,32,105,110,100,101,120,32,105,115,32,0,0,164,2,16,0,32,0,0,0,196,2,16,0,18,0,0,0,48,48,48,49,48,50,48,51,48,52,48,53,48,54,48,55,48,56,48,57,49,48,49,49,49,50,49,51,49,52,49,53,49,54,49,55,49,56,49,57,50,48,50,49,50,50,50,51,50,52,50,53,50,54,50,55,50,56,50,57,51,48,51,49,51,50,51,51,51,52,51,53,51,54,51,55,51,56,51,57,52,48,52,49,52,50,52,51,52,52,52,53,52,54,52,55,52,56,52,57,53,48,53,49,53,50,53,51,53,52,53,53,53,54,53,55,53,56,53,57,54,48,54,49,54,50,54,51,54,52,54,53,54,54,54,55,54,56,54,57,55,48,55,49,55,50,55,51,55,52,55,53,55,54,55,55,55,56,55,57,56,48,56,49,56,50,56,51,56,52,56,53,56,54,56,55,56,56,56,57,57,48,57,49,57,50,57,51,57,52,57,53,57,54,57,55,57,56,57,57,0,131,1,9,112,114,111,100,117,99,101,114,115,2,8,108,97,110,103,117,97,103,101,1,4,82,117,115,116,0,12,112,114,111,99,101,115,115,101,100,45,98,121,3,5,114,117,115,116,99,37,49,46,53,57,46,48,45,110,105,103,104,116,108,121,32,40,99,102,97,52,97,99,54,54,99,32,50,48,50,50,45,48,49,45,48,54,41,6,119,97,108,114,117,115,6,48,46,49,57,46,48,12,119,97,115,109,45,98,105,110,100,103,101,110,18,48,46,50,46,55,57,32,40,57,98,48,100,52,48,99,55,97,41]),activate=()=>init(bytecode);let wasm;const heap=new Array(32).fill(void 0);heap.push(void 0,null,!0,!1);function getObject(t){return heap[t]}let heap_next=heap.length;function dropObject(t){t<36||(heap[t]=heap_next,heap_next=t)}function takeObject(t){const e=getObject(t);return dropObject(t),e}let cachedTextDecoder=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});cachedTextDecoder.decode();let cachegetUint8Memory0=null;function getUint8Memory0(){return(cachegetUint8Memory0===null||cachegetUint8Memory0.buffer!==wasm.memory.buffer)&&(cachegetUint8Memory0=new Uint8Array(wasm.memory.buffer)),cachegetUint8Memory0}function getStringFromWasm0(t,e){return cachedTextDecoder.decode(getUint8Memory0().subarray(t,t+e))}function getArrayU8FromWasm0(t,e){return getUint8Memory0().subarray(t/1,t/1+e)}function addHeapObject(t){heap_next===heap.length&&heap.push(heap.length+1);const e=heap_next;return heap_next=heap[e],heap[e]=t,e}function create$2(t,e,n,r){var i=wasm.create(t,e,n,r);return Rabin.__wrap(i)}const u32CvtShim=new Uint32Array(2);new BigUint64Array(u32CvtShim.buffer);function _assertClass(t,e){if(!(t instanceof e))throw new Error(`expected instance of ${e.name}`);return t.ptr}let cachegetInt32Memory0=null;function getInt32Memory0(){return(cachegetInt32Memory0===null||cachegetInt32Memory0.buffer!==wasm.memory.buffer)&&(cachegetInt32Memory0=new Int32Array(wasm.memory.buffer)),cachegetInt32Memory0}function getArrayI32FromWasm0(t,e){return getInt32Memory0().subarray(t/4,t/4+e)}let stack_pointer=32;function addBorrowedObject(t){if(stack_pointer==1)throw new Error("out of js stack");return heap[--stack_pointer]=t,stack_pointer}function cut_buffer(t,e,n){try{const s=wasm.__wbindgen_add_to_stack_pointer(-16);_assertClass(t,Rabin),wasm.cut_buffer(s,t.ptr,addBorrowedObject(e),n);var r=getInt32Memory0()[s/4+0],i=getInt32Memory0()[s/4+1],o=getArrayI32FromWasm0(r,i).slice();return wasm.__wbindgen_free(r,i*4),o}finally{wasm.__wbindgen_add_to_stack_pointer(16),heap[stack_pointer++]=void 0}}class Rabin{static __wrap(e){const n=Object.create(Rabin.prototype);return n.ptr=e,n}__destroy_into_raw(){const e=this.ptr;return this.ptr=0,e}free(){const e=this.__destroy_into_raw();wasm.__wbg_rabin_free(e)}}async function load(t,e){if(typeof Response=="function"&&t instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(t,e)}catch(r){if(t.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r);else throw r}const n=await t.arrayBuffer();return await WebAssembly.instantiate(n,e)}else{const n=await WebAssembly.instantiate(t,e);return n instanceof WebAssembly.Instance?{instance:n,module:t}:n}}async function init(t){typeof t>"u"&&(t=new URL("wasm_bg.wasm",import.meta.url));const e={};e.wbg={},e.wbg.__wbg_copyTo_c2b6e812244947cd=function(i,o,s,l){var u=getObject(i).copyTo(getArrayU8FromWasm0(o,s),l>>>0);return addHeapObject(u)},e.wbg.__wbg_length_9cde16fa8cde1fcc=function(i){var o=getObject(i).length;return o},e.wbg.__wbindgen_object_drop_ref=function(i){takeObject(i)},e.wbg.__wbindgen_throw=function(i,o){throw new Error(getStringFromWasm0(i,o))};const{instance:n,module:r}=await load(t,e);return wasm=n.exports,init.__wbindgen_wasm_module=r,wasm}let wait=activate().then(()=>{wait={then:t=>t()}});const create$1=(t,e,n,r)=>wait.then(()=>{const i=create$2(t,e,n,r);return i.maxSize=n,i.minSize=e,i.windowSize=r,i}),cutBuffer=(t,e,n=!1)=>!n&e.byteLength<t.maxSize?none:cut_buffer(t,e,n),none=new Uint32Array(0),AVARAGE=262144,WINDOW=16,name$1="rabin",defaults=()=>configure({avg:AVARAGE}),configure=({avg:t,min:e=t/3|0,max:n=t+t/2|0,window:r=WINDOW})=>({avg:t,min:e,max:n,window:r}),create=async(t=defaults())=>({type:"Stateless",context:await create$1(Math.floor(Math.log2(t.avg)),t.min,t.max,t.window),name:name$1,cut}),cut=(t,e,n)=>cutBuffer(t,e,n),name="raw",code=85;function encode(t){return coerce(t)}function decode(t){return coerce(t)}const raw=Object.freeze(Object.defineProperty({__proto__:null,code,decode,encode,name},Symbol.toStringTag,{value:"Module"}));configure$2({fileChunkEncoder:raw,smallFileEncoder:raw});function encodeHeader(t){const e=encode$3({version:1,roots:t}),n=varint.encode(e.length),r=new Uint8Array(n.length+e.length);return r.set(n,0),r.set(e,n.length),r}function encodeBlock(t){const e=varint.encode(t.cid.bytes.length+t.bytes.length),n=new Uint8Array(e.length+t.cid.bytes.length+t.bytes.length);return n.set(e),n.set(t.cid.bytes,e.length),n.set(t.bytes,e.length+t.cid.bytes.length),n}class CAREncoderStream extends TransformStream{constructor(e=[]){super({start:n=>n.enqueue(encodeHeader(e)),transform:(n,r)=>{r.enqueue(encodeBlock(n)),this.finalBlock=n}}),this.finalBlock=null}}const wunder2CAR=async({root:t,onStatusUpdate:e})=>{const{readable:n,writable:r}=new TransformStream,i=createWriter({writable:r,settings:{chunker:await create()}}),o=[];n.pipeTo(new WritableStream({write(f){o.push(f)}})),e==null||e("Ingesting Treeâ€¦"),await c(t);const s=new ReadableStream({pull(f){o.length>0?f.enqueue(o.shift()):f.close()}});if(!o||o.length===0)throw new Error("No blocks generated.");const l=o.at(-1);if(!l)throw new Error("No root block found.");const u=[];return await s.pipeThrough(new CAREncoderStream([l.cid])).pipeTo(new WritableStream({write(f){u.push(f)}})),URL.createObjectURL(new Blob(u));async function c(f){var g;if(e==null||e(`Ingesting Directory: ${f.title}`),!f.children)throw new Error(`Not A Directory: ${f.title}`);const $=i.createDirectoryWriter();for(const _ of f.children)if(!(!_.selected&&_.getSelectedNodes().length===0))if(_.children)await i.ready,$.set(_.title,await c(_));else{const L=i.createFileWriter(),a=await((g=_.data.handle)==null?void 0:g.getFile());if(!a)throw new Error(`Invalid File Handle: ${_.title}`);e==null||e(`Ingesting File: ${_.title}`),await a.stream().pipeTo(new WritableStream({async write(y){await i.ready,await L.write(y)}}));const h=await L.close();await i.ready,$.set(_.title,h)}return $.close()}},ingest=async(t,e,n,r)=>{if(!get$1(e))throw new Error("No tree defined.");try{set$1(n,proxy(await wunder2CAR({root:get$1(e).root,onStatusUpdate:i=>{get$1(r).push(i)}})))}finally{set$1(r,proxy([]))}};var root_1=template('<meta name="description" content="Collaborative Filesystem">'),root_3=template('<li class="svelte-17rz90c"> </li>'),root_2=template('<ol class="svelte-17rz90c"></ol>'),on_click=(t,e)=>{set$1(e,!0)},root_5=template('<button class="btn btn-primary bg-green">Generate CAR Archive</button>'),root_6=template('<a class="button svelte-17rz90c">Download <code> </code></a>'),root_4=template('<nav class="svelte-17rz90c"><button class="btn btn-primary bg-green">Begin A Spider</button> <!> <!></nav>'),root_8=template('<h2 class="svelte-17rz90c"> </h2>'),root_7=template('<div id="content" class="svelte-17rz90c"><!> <!></div>'),root=template('<header class="svelte-17rz90c"><h1 class="svelte-17rz90c">Generate a CAR from the Local File System</h1></header> <main class="flex align-center svelte-17rz90c"><!> <!> <section id="display" class="svelte-17rz90c"><div id="fs-tree" class="svelte-17rz90c"></div> <!></section></main>',1);function _page(t,e){push$1(e,!0);let n=state(void 0),r=state(void 0),i=state(void 0),o=state(void 0),s=derived(()=>{var d,p;return`${((p=(d=get$1(o))==null?void 0:d.root.children)==null?void 0:p[0].title)??"spider"}.${new Date().toISOString()}.car`}),l=state(proxy([])),u=state(!1);const c=d=>{d.length>0&&spiderTree({dirs:d,onStatusUpdate:p=>{get$1(l).push(p)}}).then(selectAll).then(p=>{set$1(o,proxy(wunderFiles({source:p,mount:"fs-tree",activate:async m=>{m.node.data.handle?(set$1(n,proxy(m.node.title)),set$1(r,proxy(await m.node.data.handle.getFile()))):set$1(n,proxy(set$1(r,void 0)))}})))}).finally(()=>{set$1(l,proxy([]))})};var f=root();head(d=>{var p=root_1();$document.title="MÃ¯mis: Spider",append$1(d,p)});var $=sibling(first_child(f),2),g=child($);{var _=d=>{var p=root_2();each(p,21,()=>get$1(l).slice(-35),index,(m,v)=>{var E=root_3(),b=child(E,!0);reset(E),template_effect(()=>set_text(b,get$1(v))),append$1(m,E)}),reset(p),append$1(d,p)},L=d=>{var p=root_4(),m=child(p);m.__click=[on_click,u];var v=sibling(m,2);{var E=x=>{var T=root_5();T.__click=[ingest,o,i,l],append$1(x,T)};if_block(v,x=>{get$1(o)&&x(E)})}var b=sibling(v,2);{var S=x=>{var T=root_6(),A=sibling(child(T)),N=child(A,!0);reset(A),reset(T),template_effect(()=>{set_attribute(T,"href",get$1(i)),set_attribute(T,"download",get$1(s)),set_text(N,get$1(s))}),append$1(x,T)};if_block(b,x=>{get$1(i)&&x(S)})}reset(p),append$1(d,p)};if_block(g,d=>{get$1(l).length>0?d(_):d(L,!1)})}var a=sibling(g,2);BeginDialog(a,{onsubmit:c,get open(){return get$1(u)},set open(d){set$1(u,proxy(d))}});var h=sibling(a,2),y=child(h),B=sibling(y,2);{var w=d=>{var p=root_7(),m=child(p);{var v=b=>{var S=root_8(),x=child(S,!0);reset(S),template_effect(()=>set_text(x,get$1(n))),append$1(b,S)};if_block(m,b=>{get$1(n)&&b(v)})}var E=sibling(m,2);Content(E,{get content(){return get$1(r)}}),reset(p),append$1(d,p)};if_block(B,d=>{get$1(r)&&d(w)})}reset(h),reset($),template_effect(()=>toggle_class(y,"accompanied",!!get$1(r))),append$1(t,f),pop()}delegate(["click"]);export{_page as component};
